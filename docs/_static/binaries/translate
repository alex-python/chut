#!/usr/bin/env python
# This script is generated with chut. Do NOT edit this file.
# All your changes will be lost at the next generation.

version = 'unknown'

import base64, json, types, zlib, sys, os
os.environ['CHUTIFIED'] = '1'
PY3 = sys.version_info[0] == 3
_chut_modules = []
_chut_modules.append(('six', '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\n'))
_chut_modules.append(('docopt', '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\n'))
_chut_modules.append(('ConfigObject', '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\nHpp7vcBJLTMSBP8F6/lKqQ==\n'))
_chut_modules.append(('chut', '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\n'))
for name, code in _chut_modules:
    if PY3:
        if isinstance(code, str):
            code = code.encode('utf-8')
    else:
        name = bytes(name)
    code = zlib.decompress(base64.decodestring(code))
    mod = types.ModuleType(name)
    globs = dict()
    if PY3:
        if isinstance(code, bytes):
            code = code.decode('utf-8')
        exec(code, globs)
    else:
        exec('exec code in globs')
    mod.__dict__.update(globs)
    if name == 'chut':
        mod.wraps_module(mod)
    else:
        sys.modules[name] = mod
from chut import env
# -*- coding: utf-8 -*-
from chut import *  # NOQA
import atexit
import six
import sys
import os

__doc__ = """
Usage: %prog [options] [-] [<text>...]

This script use chut and casperjs to build an interactive translator

Examples:

    $ echo "hello" | translate -
    $ translate -l fr:en bonjour
    $ translate -i

Options:

    -l LANGS, --langs=LANGS     Langs [default: en:fr]
    -i, --interactive           Translate line by line in interactive mode
    -h, --help                  Show this help
"""

SCRIPT = six.b("""
system = require('system')
require('casper').create()
  .start('http://translate.google.com/#' + system.env['TR_PAIR'], function(){
      this.fill('form#gt-form', {text: system.env['TR_TEXT']}, false)})
  .waitForSelector('span.hps', function() {
      this.echo(this.fetchText('#result_box'))
      results = this.evaluate(function() {
          results = document.querySelectorAll('table.gt-baf-table tr')
          return Array.prototype.map.call(results, function(e) {
              if (!/colspan/.exec(e.innerHTML))
                  return e.innerText.replace(/\\n/,': ')
              else
                  return ''
          })
      })
      this.echo(results.join(''))
}).run()
""")


@console_script(doc=__doc__)
def translate(args):
    if not which('casperjs'):
        print('You must install casperjs first')
        return 1
    env.tr_pair = args['--langs'].replace(':', '|')
    script = str(mktemp('--tmpdir translate-XXXX.js'))
    atexit.register(rm(script))
    stdin(SCRIPT) > script

    def show_result():
        for line in sh.casperjs(script):
            if line:
                if ':' in line:
                    line = '- ' + line
                print(line)

    if args['--interactive'] or not (args['-'] or args['<text>']):
        import readline
        hist = os.path.join(os.path.expanduser('~'), '.translate_history')
        if test.f(hist):
            readline.read_history_file(hist)
        atexit.register(readline.write_history_file, hist)
        from six.moves import input
        while True:
            try:
                tr_text = input('%s: ' % env.tr_pair)
                tr_text = tr_text.strip()
            except KeyboardInterrupt:
                return
            else:
                if tr_text == 'q':
                    return
                elif tr_text == 's':
                    env.tr_pair = '|'.join(reversed(env.tr_pair.split('|')))
                elif tr_text.startswith('lang'):
                    tr_pair = tr_text.split(' ', 1)[1]
                    env.tr_pair = tr_pair.replace(':', '|').strip()
                elif tr_text:
                    env.tr_text = tr_text
                    show_result()
    elif args['-']:
        env.tr_text = sys.stdin.read()
    elif args['<text>']:
        env.tr_text = ' '.join(args['<text>'])
    show_result()

if __name__ == '__chutified__':
    translate()

if __name__ == '__main__':
    translate()
