#!/usr/bin/env python
import base64, json, types, sys
PY3 = sys.version_info[0] == 3
mods = []
mods.append(('six', 'IiIiVXRpbGl0aWVzIGZvciB3cml0aW5nIGNvZGUgdGhhdCBydW5zIG9uIFB5dGhvbiAyIGFuZCAz\nIiIiCgppbXBvcnQgb3BlcmF0b3IKaW1wb3J0IHN5cwppbXBvcnQgdHlwZXMKCl9fYXV0aG9yX18g\nPSAiQmVuamFtaW4gUGV0ZXJzb24gPGJlbmphbWluQHB5dGhvbi5vcmc+IgpfX3ZlcnNpb25fXyA9\nICIxLjEuMCIKCgojIFRydWUgaWYgd2UgYXJlIHJ1bm5pbmcgb24gUHl0aG9uIDMuClBZMyA9IHN5\ncy52ZXJzaW9uX2luZm9bMF0gPT0gMwoKaWYgUFkzOgogICAgc3RyaW5nX3R5cGVzID0gc3RyLAog\nICAgaW50ZWdlcl90eXBlcyA9IGludCwKICAgIGNsYXNzX3R5cGVzID0gdHlwZSwKICAgIHRleHRf\ndHlwZSA9IHN0cgogICAgYmluYXJ5X3R5cGUgPSBieXRlcwoKICAgIE1BWFNJWkUgPSBzeXMubWF4\nc2l6ZQplbHNlOgogICAgc3RyaW5nX3R5cGVzID0gYmFzZXN0cmluZywKICAgIGludGVnZXJfdHlw\nZXMgPSAoaW50LCBsb25nKQogICAgY2xhc3NfdHlwZXMgPSAodHlwZSwgdHlwZXMuQ2xhc3NUeXBl\nKQogICAgdGV4dF90eXBlID0gdW5pY29kZQogICAgYmluYXJ5X3R5cGUgPSBzdHIKCiAgICAjIEl0\nJ3MgcG9zc2libGUgdG8gaGF2ZSBzaXplb2YobG9uZykgIT0gc2l6ZW9mKFB5X3NzaXplX3QpLgog\nICAgY2xhc3MgWChvYmplY3QpOgogICAgICAgIGRlZiBfX2xlbl9fKHNlbGYpOgogICAgICAgICAg\nICByZXR1cm4gMSA8PCAzMQogICAgdHJ5OgogICAgICAgIGxlbihYKCkpCiAgICBleGNlcHQgT3Zl\ncmZsb3dFcnJvcjoKICAgICAgICAjIDMyLWJpdAogICAgICAgIE1BWFNJWkUgPSBpbnQoKDEgPDwg\nMzEpIC0gMSkKICAgIGVsc2U6CiAgICAgICAgIyA2NC1iaXQKICAgICAgICBNQVhTSVpFID0gaW50\nKCgxIDw8IDYzKSAtIDEpCiAgICBkZWwgWAoKCmRlZiBfYWRkX2RvYyhmdW5jLCBkb2MpOgogICAg\nIiIiQWRkIGRvY3VtZW50YXRpb24gdG8gYSBmdW5jdGlvbi4iIiIKICAgIGZ1bmMuX19kb2NfXyA9\nIGRvYwoKCmRlZiBfaW1wb3J0X21vZHVsZShuYW1lKToKICAgICIiIkltcG9ydCBtb2R1bGUsIHJl\ndHVybmluZyB0aGUgbW9kdWxlIGFmdGVyIHRoZSBsYXN0IGRvdC4iIiIKICAgIF9faW1wb3J0X18o\nbmFtZSkKICAgIHJldHVybiBzeXMubW9kdWxlc1tuYW1lXQoKCmNsYXNzIF9MYXp5RGVzY3Iob2Jq\nZWN0KToKCiAgICBkZWYgX19pbml0X18oc2VsZiwgbmFtZSk6CiAgICAgICAgc2VsZi5uYW1lID0g\nbmFtZQoKICAgIGRlZiBfX2dldF9fKHNlbGYsIG9iaiwgdHApOgogICAgICAgIHJlc3VsdCA9IHNl\nbGYuX3Jlc29sdmUoKQogICAgICAgIHNldGF0dHIob2JqLCBzZWxmLm5hbWUsIHJlc3VsdCkKICAg\nICAgICAjIFRoaXMgaXMgYSBiaXQgdWdseSwgYnV0IGl0IGF2b2lkcyBydW5uaW5nIHRoaXMgYWdh\naW4uCiAgICAgICAgZGVsYXR0cih0cCwgc2VsZi5uYW1lKQogICAgICAgIHJldHVybiByZXN1bHQK\nCgpjbGFzcyBNb3ZlZE1vZHVsZShfTGF6eURlc2NyKToKCiAgICBkZWYgX19pbml0X18oc2VsZiwg\nbmFtZSwgb2xkLCBuZXc9Tm9uZSk6CiAgICAgICAgc3VwZXIoTW92ZWRNb2R1bGUsIHNlbGYpLl9f\naW5pdF9fKG5hbWUpCiAgICAgICAgaWYgUFkzOgogICAgICAgICAgICBpZiBuZXcgaXMgTm9uZToK\nICAgICAgICAgICAgICAgIG5ldyA9IG5hbWUKICAgICAgICAgICAgc2VsZi5tb2QgPSBuZXcKICAg\nICAgICBlbHNlOgogICAgICAgICAgICBzZWxmLm1vZCA9IG9sZAoKICAgIGRlZiBfcmVzb2x2ZShz\nZWxmKToKICAgICAgICByZXR1cm4gX2ltcG9ydF9tb2R1bGUoc2VsZi5tb2QpCgoKY2xhc3MgTW92\nZWRBdHRyaWJ1dGUoX0xhenlEZXNjcik6CgogICAgZGVmIF9faW5pdF9fKHNlbGYsIG5hbWUsIG9s\nZF9tb2QsIG5ld19tb2QsIG9sZF9hdHRyPU5vbmUsIG5ld19hdHRyPU5vbmUpOgogICAgICAgIHN1\ncGVyKE1vdmVkQXR0cmlidXRlLCBzZWxmKS5fX2luaXRfXyhuYW1lKQogICAgICAgIGlmIFBZMzoK\nICAgICAgICAgICAgaWYgbmV3X21vZCBpcyBOb25lOgogICAgICAgICAgICAgICAgbmV3X21vZCA9\nIG5hbWUKICAgICAgICAgICAgc2VsZi5tb2QgPSBuZXdfbW9kCiAgICAgICAgICAgIGlmIG5ld19h\ndHRyIGlzIE5vbmU6CiAgICAgICAgICAgICAgICBpZiBvbGRfYXR0ciBpcyBOb25lOgogICAgICAg\nICAgICAgICAgICAgIG5ld19hdHRyID0gbmFtZQogICAgICAgICAgICAgICAgZWxzZToKICAgICAg\nICAgICAgICAgICAgICBuZXdfYXR0ciA9IG9sZF9hdHRyCiAgICAgICAgICAgIHNlbGYuYXR0ciA9\nIG5ld19hdHRyCiAgICAgICAgZWxzZToKICAgICAgICAgICAgc2VsZi5tb2QgPSBvbGRfbW9kCiAg\nICAgICAgICAgIGlmIG9sZF9hdHRyIGlzIE5vbmU6CiAgICAgICAgICAgICAgICBvbGRfYXR0ciA9\nIG5hbWUKICAgICAgICAgICAgc2VsZi5hdHRyID0gb2xkX2F0dHIKCiAgICBkZWYgX3Jlc29sdmUo\nc2VsZik6CiAgICAgICAgbW9kdWxlID0gX2ltcG9ydF9tb2R1bGUoc2VsZi5tb2QpCiAgICAgICAg\ncmV0dXJuIGdldGF0dHIobW9kdWxlLCBzZWxmLmF0dHIpCgoKCmNsYXNzIF9Nb3ZlZEl0ZW1zKHR5\ncGVzLk1vZHVsZVR5cGUpOgogICAgIiIiTGF6eSBsb2FkaW5nIG9mIG1vdmVkIG9iamVjdHMiIiIK\nCgpfbW92ZWRfYXR0cmlidXRlcyA9IFsKICAgIE1vdmVkQXR0cmlidXRlKCJjU3RyaW5nSU8iLCAi\nY1N0cmluZ0lPIiwgImlvIiwgIlN0cmluZ0lPIiksCiAgICBNb3ZlZEF0dHJpYnV0ZSgiZmlsdGVy\nIiwgIml0ZXJ0b29scyIsICJidWlsdGlucyIsICJpZmlsdGVyIiwgImZpbHRlciIpLAogICAgTW92\nZWRBdHRyaWJ1dGUoIm1hcCIsICJpdGVydG9vbHMiLCAiYnVpbHRpbnMiLCAiaW1hcCIsICJtYXAi\nKSwKICAgIE1vdmVkQXR0cmlidXRlKCJyZWxvYWRfbW9kdWxlIiwgIl9fYnVpbHRpbl9fIiwgImlt\ncCIsICJyZWxvYWQiKSwKICAgIE1vdmVkQXR0cmlidXRlKCJyZWR1Y2UiLCAiX19idWlsdGluX18i\nLCAiZnVuY3Rvb2xzIiksCiAgICBNb3ZlZEF0dHJpYnV0ZSgiU3RyaW5nSU8iLCAiU3RyaW5nSU8i\nLCAiaW8iKSwKICAgIE1vdmVkQXR0cmlidXRlKCJ4cmFuZ2UiLCAiX19idWlsdGluX18iLCAiYnVp\nbHRpbnMiLCAieHJhbmdlIiwgInJhbmdlIiksCiAgICBNb3ZlZEF0dHJpYnV0ZSgiemlwIiwgIml0\nZXJ0b29scyIsICJidWlsdGlucyIsICJpemlwIiwgInppcCIpLAoKICAgIE1vdmVkTW9kdWxlKCJi\ndWlsdGlucyIsICJfX2J1aWx0aW5fXyIpLAogICAgTW92ZWRNb2R1bGUoImNvbmZpZ3BhcnNlciIs\nICJDb25maWdQYXJzZXIiKSwKICAgIE1vdmVkTW9kdWxlKCJjb3B5cmVnIiwgImNvcHlfcmVnIiks\nCiAgICBNb3ZlZE1vZHVsZSgiaHR0cF9jb29raWVqYXIiLCAiY29va2llbGliIiwgImh0dHAuY29v\na2llamFyIiksCiAgICBNb3ZlZE1vZHVsZSgiaHR0cF9jb29raWVzIiwgIkNvb2tpZSIsICJodHRw\nLmNvb2tpZXMiKSwKICAgIE1vdmVkTW9kdWxlKCJodG1sX2VudGl0aWVzIiwgImh0bWxlbnRpdHlk\nZWZzIiwgImh0bWwuZW50aXRpZXMiKSwKICAgIE1vdmVkTW9kdWxlKCJodG1sX3BhcnNlciIsICJI\nVE1MUGFyc2VyIiwgImh0bWwucGFyc2VyIiksCiAgICBNb3ZlZE1vZHVsZSgiaHR0cF9jbGllbnQi\nLCAiaHR0cGxpYiIsICJodHRwLmNsaWVudCIpLAogICAgTW92ZWRNb2R1bGUoIkJhc2VIVFRQU2Vy\ndmVyIiwgIkJhc2VIVFRQU2VydmVyIiwgImh0dHAuc2VydmVyIiksCiAgICBNb3ZlZE1vZHVsZSgi\nQ0dJSFRUUFNlcnZlciIsICJDR0lIVFRQU2VydmVyIiwgImh0dHAuc2VydmVyIiksCiAgICBNb3Zl\nZE1vZHVsZSgiU2ltcGxlSFRUUFNlcnZlciIsICJTaW1wbGVIVFRQU2VydmVyIiwgImh0dHAuc2Vy\ndmVyIiksCiAgICBNb3ZlZE1vZHVsZSgiY1BpY2tsZSIsICJjUGlja2xlIiwgInBpY2tsZSIpLAog\nICAgTW92ZWRNb2R1bGUoInF1ZXVlIiwgIlF1ZXVlIiksCiAgICBNb3ZlZE1vZHVsZSgicmVwcmxp\nYiIsICJyZXByIiksCiAgICBNb3ZlZE1vZHVsZSgic29ja2V0c2VydmVyIiwgIlNvY2tldFNlcnZl\nciIpLAogICAgTW92ZWRNb2R1bGUoInRraW50ZXIiLCAiVGtpbnRlciIpLAogICAgTW92ZWRNb2R1\nbGUoInRraW50ZXJfZGlhbG9nIiwgIkRpYWxvZyIsICJ0a2ludGVyLmRpYWxvZyIpLAogICAgTW92\nZWRNb2R1bGUoInRraW50ZXJfZmlsZWRpYWxvZyIsICJGaWxlRGlhbG9nIiwgInRraW50ZXIuZmls\nZWRpYWxvZyIpLAogICAgTW92ZWRNb2R1bGUoInRraW50ZXJfc2Nyb2xsZWR0ZXh0IiwgIlNjcm9s\nbGVkVGV4dCIsICJ0a2ludGVyLnNjcm9sbGVkdGV4dCIpLAogICAgTW92ZWRNb2R1bGUoInRraW50\nZXJfc2ltcGxlZGlhbG9nIiwgIlNpbXBsZURpYWxvZyIsICJ0a2ludGVyLnNpbXBsZWRpYWxvZyIp\nLAogICAgTW92ZWRNb2R1bGUoInRraW50ZXJfdGl4IiwgIlRpeCIsICJ0a2ludGVyLnRpeCIpLAog\nICAgTW92ZWRNb2R1bGUoInRraW50ZXJfY29uc3RhbnRzIiwgIlRrY29uc3RhbnRzIiwgInRraW50\nZXIuY29uc3RhbnRzIiksCiAgICBNb3ZlZE1vZHVsZSgidGtpbnRlcl9kbmQiLCAiVGtkbmQiLCAi\ndGtpbnRlci5kbmQiKSwKICAgIE1vdmVkTW9kdWxlKCJ0a2ludGVyX2NvbG9yY2hvb3NlciIsICJ0\na0NvbG9yQ2hvb3NlciIsCiAgICAgICAgICAgICAgICAidGtpbnRlci5jb2xvcmNob29zZXIiKSwK\nICAgIE1vdmVkTW9kdWxlKCJ0a2ludGVyX2NvbW1vbmRpYWxvZyIsICJ0a0NvbW1vbkRpYWxvZyIs\nCiAgICAgICAgICAgICAgICAidGtpbnRlci5jb21tb25kaWFsb2ciKSwKICAgIE1vdmVkTW9kdWxl\nKCJ0a2ludGVyX3RrZmlsZWRpYWxvZyIsICJ0a0ZpbGVEaWFsb2ciLCAidGtpbnRlci5maWxlZGlh\nbG9nIiksCiAgICBNb3ZlZE1vZHVsZSgidGtpbnRlcl9mb250IiwgInRrRm9udCIsICJ0a2ludGVy\nLmZvbnQiKSwKICAgIE1vdmVkTW9kdWxlKCJ0a2ludGVyX21lc3NhZ2Vib3giLCAidGtNZXNzYWdl\nQm94IiwgInRraW50ZXIubWVzc2FnZWJveCIpLAogICAgTW92ZWRNb2R1bGUoInRraW50ZXJfdGtz\naW1wbGVkaWFsb2ciLCAidGtTaW1wbGVEaWFsb2ciLAogICAgICAgICAgICAgICAgInRraW50ZXIu\nc2ltcGxlZGlhbG9nIiksCiAgICBNb3ZlZE1vZHVsZSgidXJsbGliX3JvYm90cGFyc2VyIiwgInJv\nYm90cGFyc2VyIiwgInVybGxpYi5yb2JvdHBhcnNlciIpLAogICAgTW92ZWRNb2R1bGUoIndpbnJl\nZyIsICJfd2lucmVnIiksCl0KZm9yIGF0dHIgaW4gX21vdmVkX2F0dHJpYnV0ZXM6CiAgICBzZXRh\ndHRyKF9Nb3ZlZEl0ZW1zLCBhdHRyLm5hbWUsIGF0dHIpCmRlbCBhdHRyCgptb3ZlcyA9IHN5cy5t\nb2R1bGVzWyJzaXgubW92ZXMiXSA9IF9Nb3ZlZEl0ZW1zKCJtb3ZlcyIpCgoKZGVmIGFkZF9tb3Zl\nKG1vdmUpOgogICAgIiIiQWRkIGFuIGl0ZW0gdG8gc2l4Lm1vdmVzLiIiIgogICAgc2V0YXR0cihf\nTW92ZWRJdGVtcywgbW92ZS5uYW1lLCBtb3ZlKQoKCmRlZiByZW1vdmVfbW92ZShuYW1lKToKICAg\nICIiIlJlbW92ZSBpdGVtIGZyb20gc2l4Lm1vdmVzLiIiIgogICAgdHJ5OgogICAgICAgIGRlbGF0\ndHIoX01vdmVkSXRlbXMsIG5hbWUpCiAgICBleGNlcHQgQXR0cmlidXRlRXJyb3I6CiAgICAgICAg\ndHJ5OgogICAgICAgICAgICBkZWwgbW92ZXMuX19kaWN0X19bbmFtZV0KICAgICAgICBleGNlcHQg\nS2V5RXJyb3I6CiAgICAgICAgICAgIHJhaXNlIEF0dHJpYnV0ZUVycm9yKCJubyBzdWNoIG1vdmUs\nICVyIiAlIChuYW1lLCkpCgoKaWYgUFkzOgogICAgX21ldGhfZnVuYyA9ICJfX2Z1bmNfXyIKICAg\nIF9tZXRoX3NlbGYgPSAiX19zZWxmX18iCgogICAgX2Z1bmNfY29kZSA9ICJfX2NvZGVfXyIKICAg\nIF9mdW5jX2RlZmF1bHRzID0gIl9fZGVmYXVsdHNfXyIKCiAgICBfaXRlcmtleXMgPSAia2V5cyIK\nICAgIF9pdGVydmFsdWVzID0gInZhbHVlcyIKICAgIF9pdGVyaXRlbXMgPSAiaXRlbXMiCmVsc2U6\nCiAgICBfbWV0aF9mdW5jID0gImltX2Z1bmMiCiAgICBfbWV0aF9zZWxmID0gImltX3NlbGYiCgog\nICAgX2Z1bmNfY29kZSA9ICJmdW5jX2NvZGUiCiAgICBfZnVuY19kZWZhdWx0cyA9ICJmdW5jX2Rl\nZmF1bHRzIgoKICAgIF9pdGVya2V5cyA9ICJpdGVya2V5cyIKICAgIF9pdGVydmFsdWVzID0gIml0\nZXJ2YWx1ZXMiCiAgICBfaXRlcml0ZW1zID0gIml0ZXJpdGVtcyIKCgppZiBQWTM6CiAgICBkZWYg\nZ2V0X3VuYm91bmRfZnVuY3Rpb24odW5ib3VuZCk6CiAgICAgICAgcmV0dXJuIHVuYm91bmQKCgog\nICAgYWR2YW5jZV9pdGVyYXRvciA9IG5leHQKCiAgICBkZWYgY2FsbGFibGUob2JqKToKICAgICAg\nICByZXR1cm4gYW55KCJfX2NhbGxfXyIgaW4ga2xhc3MuX19kaWN0X18gZm9yIGtsYXNzIGluIHR5\ncGUob2JqKS5fX21yb19fKQplbHNlOgogICAgZGVmIGdldF91bmJvdW5kX2Z1bmN0aW9uKHVuYm91\nbmQpOgogICAgICAgIHJldHVybiB1bmJvdW5kLmltX2Z1bmMKCgogICAgZGVmIGFkdmFuY2VfaXRl\ncmF0b3IoaXQpOgogICAgICAgIHJldHVybiBpdC5uZXh0KCkKCiAgICBjYWxsYWJsZSA9IGNhbGxh\nYmxlCl9hZGRfZG9jKGdldF91bmJvdW5kX2Z1bmN0aW9uLAogICAgICAgICAiIiJHZXQgdGhlIGZ1\nbmN0aW9uIG91dCBvZiBhIHBvc3NpYmx5IHVuYm91bmQgZnVuY3Rpb24iIiIpCgoKZ2V0X21ldGhv\nZF9mdW5jdGlvbiA9IG9wZXJhdG9yLmF0dHJnZXR0ZXIoX21ldGhfZnVuYykKZ2V0X21ldGhvZF9z\nZWxmID0gb3BlcmF0b3IuYXR0cmdldHRlcihfbWV0aF9zZWxmKQpnZXRfZnVuY3Rpb25fY29kZSA9\nIG9wZXJhdG9yLmF0dHJnZXR0ZXIoX2Z1bmNfY29kZSkKZ2V0X2Z1bmN0aW9uX2RlZmF1bHRzID0g\nb3BlcmF0b3IuYXR0cmdldHRlcihfZnVuY19kZWZhdWx0cykKCgpkZWYgaXRlcmtleXMoZCk6CiAg\nICAiIiJSZXR1cm4gYW4gaXRlcmF0b3Igb3ZlciB0aGUga2V5cyBvZiBhIGRpY3Rpb25hcnkuIiIi\nCiAgICByZXR1cm4gZ2V0YXR0cihkLCBfaXRlcmtleXMpKCkKCmRlZiBpdGVydmFsdWVzKGQpOgog\nICAgIiIiUmV0dXJuIGFuIGl0ZXJhdG9yIG92ZXIgdGhlIHZhbHVlcyBvZiBhIGRpY3Rpb25hcnku\nIiIiCiAgICByZXR1cm4gZ2V0YXR0cihkLCBfaXRlcnZhbHVlcykoKQoKZGVmIGl0ZXJpdGVtcyhk\nKToKICAgICIiIlJldHVybiBhbiBpdGVyYXRvciBvdmVyIHRoZSAoa2V5LCB2YWx1ZSkgcGFpcnMg\nb2YgYSBkaWN0aW9uYXJ5LiIiIgogICAgcmV0dXJuIGdldGF0dHIoZCwgX2l0ZXJpdGVtcykoKQoK\nCmlmIFBZMzoKICAgIGRlZiBiKHMpOgogICAgICAgIHJldHVybiBzLmVuY29kZSgibGF0aW4tMSIp\nCiAgICBkZWYgdShzKToKICAgICAgICByZXR1cm4gcwogICAgaWYgc3lzLnZlcnNpb25faW5mb1sx\nXSA8PSAxOgogICAgICAgIGRlZiBpbnQyYnl0ZShpKToKICAgICAgICAgICAgcmV0dXJuIGJ5dGVz\nKChpLCkpCiAgICBlbHNlOgogICAgICAgICMgVGhpcyBpcyBhYm91dCAyeCBmYXN0ZXIgdGhhbiB0\naGUgaW1wbGVtZW50YXRpb24gYWJvdmUgb24gMy4yKwogICAgICAgIGludDJieXRlID0gb3BlcmF0\nb3IubWV0aG9kY2FsbGVyKCJ0b19ieXRlcyIsIDEsICJiaWciKQogICAgaW1wb3J0IGlvCiAgICBT\ndHJpbmdJTyA9IGlvLlN0cmluZ0lPCiAgICBCeXRlc0lPID0gaW8uQnl0ZXNJTwplbHNlOgogICAg\nZGVmIGIocyk6CiAgICAgICAgcmV0dXJuIHMKICAgIGRlZiB1KHMpOgogICAgICAgIHJldHVybiB1\nbmljb2RlKHMsICJ1bmljb2RlX2VzY2FwZSIpCiAgICBpbnQyYnl0ZSA9IGNocgogICAgaW1wb3J0\nIFN0cmluZ0lPCiAgICBTdHJpbmdJTyA9IEJ5dGVzSU8gPSBTdHJpbmdJTy5TdHJpbmdJTwpfYWRk\nX2RvYyhiLCAiIiJCeXRlIGxpdGVyYWwiIiIpCl9hZGRfZG9jKHUsICIiIlRleHQgbGl0ZXJhbCIi\nIikKCgppZiBQWTM6CiAgICBpbXBvcnQgYnVpbHRpbnMKICAgIGV4ZWNfID0gZ2V0YXR0cihidWls\ndGlucywgImV4ZWMiKQoKCiAgICBkZWYgcmVyYWlzZSh0cCwgdmFsdWUsIHRiPU5vbmUpOgogICAg\nICAgIGlmIHZhbHVlLl9fdHJhY2ViYWNrX18gaXMgbm90IHRiOgogICAgICAgICAgICByYWlzZSB2\nYWx1ZS53aXRoX3RyYWNlYmFjayh0YikKICAgICAgICByYWlzZSB2YWx1ZQoKCiAgICBwcmludF8g\nPSBnZXRhdHRyKGJ1aWx0aW5zLCAicHJpbnQiKQogICAgZGVsIGJ1aWx0aW5zCgplbHNlOgogICAg\nZGVmIGV4ZWNfKGNvZGUsIGdsb2JzPU5vbmUsIGxvY3M9Tm9uZSk6CiAgICAgICAgIiIiRXhlY3V0\nZSBjb2RlIGluIGEgbmFtZXNwYWNlLiIiIgogICAgICAgIGlmIGdsb2JzIGlzIE5vbmU6CiAgICAg\nICAgICAgIGZyYW1lID0gc3lzLl9nZXRmcmFtZSgxKQogICAgICAgICAgICBnbG9icyA9IGZyYW1l\nLmZfZ2xvYmFscwogICAgICAgICAgICBpZiBsb2NzIGlzIE5vbmU6CiAgICAgICAgICAgICAgICBs\nb2NzID0gZnJhbWUuZl9sb2NhbHMKICAgICAgICAgICAgZGVsIGZyYW1lCiAgICAgICAgZWxpZiBs\nb2NzIGlzIE5vbmU6CiAgICAgICAgICAgIGxvY3MgPSBnbG9icwogICAgICAgIGV4ZWMoIiIiZXhl\nYyBjb2RlIGluIGdsb2JzLCBsb2NzIiIiKQoKCiAgICBleGVjXygiIiJkZWYgcmVyYWlzZSh0cCwg\ndmFsdWUsIHRiPU5vbmUpOgogICAgcmFpc2UgdHAsIHZhbHVlLCB0YgoiIiIpCgoKICAgIGRlZiBw\ncmludF8oKmFyZ3MsICoqa3dhcmdzKToKICAgICAgICAiIiJUaGUgbmV3LXN0eWxlIHByaW50IGZ1\nbmN0aW9uLiIiIgogICAgICAgIGZwID0ga3dhcmdzLnBvcCgiZmlsZSIsIHN5cy5zdGRvdXQpCiAg\nICAgICAgaWYgZnAgaXMgTm9uZToKICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgZGVmIHdyaXRl\nKGRhdGEpOgogICAgICAgICAgICBpZiBub3QgaXNpbnN0YW5jZShkYXRhLCBiYXNlc3RyaW5nKToK\nICAgICAgICAgICAgICAgIGRhdGEgPSBzdHIoZGF0YSkKICAgICAgICAgICAgZnAud3JpdGUoZGF0\nYSkKICAgICAgICB3YW50X3VuaWNvZGUgPSBGYWxzZQogICAgICAgIHNlcCA9IGt3YXJncy5wb3Ao\nInNlcCIsIE5vbmUpCiAgICAgICAgaWYgc2VwIGlzIG5vdCBOb25lOgogICAgICAgICAgICBpZiBp\nc2luc3RhbmNlKHNlcCwgdW5pY29kZSk6CiAgICAgICAgICAgICAgICB3YW50X3VuaWNvZGUgPSBU\ncnVlCiAgICAgICAgICAgIGVsaWYgbm90IGlzaW5zdGFuY2Uoc2VwLCBzdHIpOgogICAgICAgICAg\nICAgICAgcmFpc2UgVHlwZUVycm9yKCJzZXAgbXVzdCBiZSBOb25lIG9yIGEgc3RyaW5nIikKICAg\nICAgICBlbmQgPSBrd2FyZ3MucG9wKCJlbmQiLCBOb25lKQogICAgICAgIGlmIGVuZCBpcyBub3Qg\nTm9uZToKICAgICAgICAgICAgaWYgaXNpbnN0YW5jZShlbmQsIHVuaWNvZGUpOgogICAgICAgICAg\nICAgICAgd2FudF91bmljb2RlID0gVHJ1ZQogICAgICAgICAgICBlbGlmIG5vdCBpc2luc3RhbmNl\nKGVuZCwgc3RyKToKICAgICAgICAgICAgICAgIHJhaXNlIFR5cGVFcnJvcigiZW5kIG11c3QgYmUg\nTm9uZSBvciBhIHN0cmluZyIpCiAgICAgICAgaWYga3dhcmdzOgogICAgICAgICAgICByYWlzZSBU\neXBlRXJyb3IoImludmFsaWQga2V5d29yZCBhcmd1bWVudHMgdG8gcHJpbnQoKSIpCiAgICAgICAg\naWYgbm90IHdhbnRfdW5pY29kZToKICAgICAgICAgICAgZm9yIGFyZyBpbiBhcmdzOgogICAgICAg\nICAgICAgICAgaWYgaXNpbnN0YW5jZShhcmcsIHVuaWNvZGUpOgogICAgICAgICAgICAgICAgICAg\nIHdhbnRfdW5pY29kZSA9IFRydWUKICAgICAgICAgICAgICAgICAgICBicmVhawogICAgICAgIGlm\nIHdhbnRfdW5pY29kZToKICAgICAgICAgICAgbmV3bGluZSA9IHVuaWNvZGUoIlxuIikKICAgICAg\nICAgICAgc3BhY2UgPSB1bmljb2RlKCIgIikKICAgICAgICBlbHNlOgogICAgICAgICAgICBuZXds\naW5lID0gIlxuIgogICAgICAgICAgICBzcGFjZSA9ICIgIgogICAgICAgIGlmIHNlcCBpcyBOb25l\nOgogICAgICAgICAgICBzZXAgPSBzcGFjZQogICAgICAgIGlmIGVuZCBpcyBOb25lOgogICAgICAg\nICAgICBlbmQgPSBuZXdsaW5lCiAgICAgICAgZm9yIGksIGFyZyBpbiBlbnVtZXJhdGUoYXJncyk6\nCiAgICAgICAgICAgIGlmIGk6CiAgICAgICAgICAgICAgICB3cml0ZShzZXApCiAgICAgICAgICAg\nIHdyaXRlKGFyZykKICAgICAgICB3cml0ZShlbmQpCgpfYWRkX2RvYyhyZXJhaXNlLCAiIiJSZXJh\naXNlIGFuIGV4Y2VwdGlvbi4iIiIpCgoKZGVmIHdpdGhfbWV0YWNsYXNzKG1ldGEsIGJhc2U9b2Jq\nZWN0KToKICAgICIiIkNyZWF0ZSBhIGJhc2UgY2xhc3Mgd2l0aCBhIG1ldGFjbGFzcy4iIiIKICAg\nIHJldHVybiBtZXRhKCJOZXdCYXNlIiwgKGJhc2UsKSwge30pCg==\n'))
mods.append(('docopt', 'aW1wb3J0IHN5cwppbXBvcnQgcmUKCgpjbGFzcyBEb2NvcHRMYW5ndWFnZUVycm9yKEV4Y2VwdGlv\nbik6CgogICAgIiIiRXJyb3IgaW4gY29uc3RydWN0aW9uIG9mIHVzYWdlLW1lc3NhZ2UgYnkgZGV2\nZWxvcGVyLiIiIgoKCmNsYXNzIERvY29wdEV4aXQoU3lzdGVtRXhpdCk6CgogICAgIiIiRXhpdCBp\nbiBjYXNlIHVzZXIgaW52b2tlZCBwcm9ncmFtIHdpdGggaW5jb3JyZWN0IGFyZ3VtZW50cy4iIiIK\nCiAgICB1c2FnZSA9ICcnCgogICAgZGVmIF9faW5pdF9fKHNlbGYsIG1lc3NhZ2U9JycpOgogICAg\nICAgIFN5c3RlbUV4aXQuX19pbml0X18oc2VsZiwgKG1lc3NhZ2UgKyAnXG4nICsgc2VsZi51c2Fn\nZSkuc3RyaXAoKSkKCgpjbGFzcyBQYXR0ZXJuKG9iamVjdCk6CgogICAgZGVmIF9fZXFfXyhzZWxm\nLCBvdGhlcik6CiAgICAgICAgcmV0dXJuIHJlcHIoc2VsZikgPT0gcmVwcihvdGhlcikKCiAgICBk\nZWYgX19oYXNoX18oc2VsZik6CiAgICAgICAgcmV0dXJuIGhhc2gocmVwcihzZWxmKSkKCiAgICBk\nZWYgZml4KHNlbGYpOgogICAgICAgIHNlbGYuZml4X2lkZW50aXRpZXMoKQogICAgICAgIHNlbGYu\nZml4X2xpc3RfYXJndW1lbnRzKCkKICAgICAgICByZXR1cm4gc2VsZgoKICAgIGRlZiBmaXhfaWRl\nbnRpdGllcyhzZWxmLCB1bmlxPU5vbmUpOgogICAgICAgICIiIk1ha2UgcGF0dGVybi10cmVlIHRp\ncHMgcG9pbnQgdG8gc2FtZSBvYmplY3QgaWYgdGhleSBhcmUgZXF1YWwuIiIiCiAgICAgICAgaWYg\nbm90IGhhc2F0dHIoc2VsZiwgJ2NoaWxkcmVuJyk6CiAgICAgICAgICAgIHJldHVybiBzZWxmCiAg\nICAgICAgdW5pcSA9IGxpc3Qoc2V0KHNlbGYuZmxhdCkpIGlmIHVuaXEgPT0gTm9uZSBlbHNlIHVu\naXEKICAgICAgICBmb3IgaSwgYyBpbiBlbnVtZXJhdGUoc2VsZi5jaGlsZHJlbik6CiAgICAgICAg\nICAgIGlmIG5vdCBoYXNhdHRyKGMsICdjaGlsZHJlbicpOgogICAgICAgICAgICAgICAgYXNzZXJ0\nIGMgaW4gdW5pcQogICAgICAgICAgICAgICAgc2VsZi5jaGlsZHJlbltpXSA9IHVuaXFbdW5pcS5p\nbmRleChjKV0KICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIGMuZml4X2lkZW50aXRp\nZXModW5pcSkKCiAgICBkZWYgZml4X2xpc3RfYXJndW1lbnRzKHNlbGYpOgogICAgICAgICIiIkZp\nbmQgYXJndW1lbnRzIHRoYXQgc2hvdWxkIGFjY3VtdWxhdGUgdmFsdWVzIGFuZCBmaXggdGhlbS4i\nIiIKICAgICAgICBlaXRoZXIgPSBbbGlzdChjLmNoaWxkcmVuKSBmb3IgYyBpbiBzZWxmLmVpdGhl\nci5jaGlsZHJlbl0KICAgICAgICBmb3IgY2FzZSBpbiBlaXRoZXI6CiAgICAgICAgICAgIGZvciBl\nIGluIFtjIGZvciBjIGluIGNhc2UgaWYgY2FzZS5jb3VudChjKSA+IDFdOgogICAgICAgICAgICAg\nICAgaWYgdHlwZShlKSBpcyBBcmd1bWVudCBvciB0eXBlKGUpIGlzIE9wdGlvbiBhbmQgZS5hcmdj\nb3VudDoKICAgICAgICAgICAgICAgICAgICBlLnZhbHVlID0gW10KICAgICAgICAgICAgICAgIGlm\nIHR5cGUoZSkgaXMgQ29tbWFuZCBvciB0eXBlKGUpIGlzIE9wdGlvbiBhbmQgZS5hcmdjb3VudCA9\nPSAwOgogICAgICAgICAgICAgICAgICAgIGUudmFsdWUgPSAwCiAgICAgICAgcmV0dXJuIHNlbGYK\nCiAgICBAcHJvcGVydHkKICAgIGRlZiBlaXRoZXIoc2VsZik6CiAgICAgICAgIiIiVHJhbnNmb3Jt\nIHBhdHRlcm4gaW50byBhbiBlcXVpdmFsZW50LCB3aXRoIG9ubHkgdG9wLWxldmVsIEVpdGhlci4i\nIiIKICAgICAgICAjIEN1cnJlbnRseSB0aGUgcGF0dGVybiB3aWxsIG5vdCBiZSBlcXVpdmFsZW50\nLCBidXQgbW9yZSAibmFycm93IiwKICAgICAgICAjIGFsdGhvdWdoIGdvb2QgZW5vdWdoIHRvIHJl\nYXNvbiBhYm91dCBsaXN0IGFyZ3VtZW50cy4KICAgICAgICByZXQgPSBbXQogICAgICAgIGdyb3Vw\ncyA9IFtbc2VsZl1dCiAgICAgICAgd2hpbGUgZ3JvdXBzOgogICAgICAgICAgICBjaGlsZHJlbiA9\nIGdyb3Vwcy5wb3AoMCkKICAgICAgICAgICAgdHlwZXMgPSBbdHlwZShjKSBmb3IgYyBpbiBjaGls\nZHJlbl0KICAgICAgICAgICAgaWYgRWl0aGVyIGluIHR5cGVzOgogICAgICAgICAgICAgICAgZWl0\naGVyID0gW2MgZm9yIGMgaW4gY2hpbGRyZW4gaWYgdHlwZShjKSBpcyBFaXRoZXJdWzBdCiAgICAg\nICAgICAgICAgICBjaGlsZHJlbi5wb3AoY2hpbGRyZW4uaW5kZXgoZWl0aGVyKSkKICAgICAgICAg\nICAgICAgIGZvciBjIGluIGVpdGhlci5jaGlsZHJlbjoKICAgICAgICAgICAgICAgICAgICBncm91\ncHMuYXBwZW5kKFtjXSArIGNoaWxkcmVuKQogICAgICAgICAgICBlbGlmIFJlcXVpcmVkIGluIHR5\ncGVzOgogICAgICAgICAgICAgICAgcmVxdWlyZWQgPSBbYyBmb3IgYyBpbiBjaGlsZHJlbiBpZiB0\neXBlKGMpIGlzIFJlcXVpcmVkXVswXQogICAgICAgICAgICAgICAgY2hpbGRyZW4ucG9wKGNoaWxk\ncmVuLmluZGV4KHJlcXVpcmVkKSkKICAgICAgICAgICAgICAgIGdyb3Vwcy5hcHBlbmQobGlzdChy\nZXF1aXJlZC5jaGlsZHJlbikgKyBjaGlsZHJlbikKICAgICAgICAgICAgZWxpZiBPcHRpb25hbCBp\nbiB0eXBlczoKICAgICAgICAgICAgICAgIG9wdGlvbmFsID0gW2MgZm9yIGMgaW4gY2hpbGRyZW4g\naWYgdHlwZShjKSBpcyBPcHRpb25hbF1bMF0KICAgICAgICAgICAgICAgIGNoaWxkcmVuLnBvcChj\naGlsZHJlbi5pbmRleChvcHRpb25hbCkpCiAgICAgICAgICAgICAgICBncm91cHMuYXBwZW5kKGxp\nc3Qob3B0aW9uYWwuY2hpbGRyZW4pICsgY2hpbGRyZW4pCiAgICAgICAgICAgIGVsaWYgT25lT3JN\nb3JlIGluIHR5cGVzOgogICAgICAgICAgICAgICAgb25lb3Jtb3JlID0gW2MgZm9yIGMgaW4gY2hp\nbGRyZW4gaWYgdHlwZShjKSBpcyBPbmVPck1vcmVdWzBdCiAgICAgICAgICAgICAgICBjaGlsZHJl\nbi5wb3AoY2hpbGRyZW4uaW5kZXgob25lb3Jtb3JlKSkKICAgICAgICAgICAgICAgIGdyb3Vwcy5h\ncHBlbmQobGlzdChvbmVvcm1vcmUuY2hpbGRyZW4pICogMiArIGNoaWxkcmVuKQogICAgICAgICAg\nICBlbHNlOgogICAgICAgICAgICAgICAgcmV0LmFwcGVuZChjaGlsZHJlbikKICAgICAgICByZXR1\ncm4gRWl0aGVyKCpbUmVxdWlyZWQoKmUpIGZvciBlIGluIHJldF0pCgoKY2xhc3MgQ2hpbGRQYXR0\nZXJuKFBhdHRlcm4pOgoKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBuYW1lLCB2YWx1ZT1Ob25lKToK\nICAgICAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICAgICAgc2VsZi52YWx1ZSA9IHZhbHVlCgogICAg\nZGVmIF9fcmVwcl9fKHNlbGYpOgogICAgICAgIHJldHVybiAnJXMoJXIsICVyKScgJSAoc2VsZi5f\nX2NsYXNzX18uX19uYW1lX18sIHNlbGYubmFtZSwgc2VsZi52YWx1ZSkKCiAgICBAcHJvcGVydHkK\nICAgIGRlZiBmbGF0KHNlbGYpOgogICAgICAgIHJldHVybiBbc2VsZl0KCiAgICBkZWYgbWF0Y2go\nc2VsZiwgbGVmdCwgY29sbGVjdGVkPU5vbmUpOgogICAgICAgIGNvbGxlY3RlZCA9IFtdIGlmIGNv\nbGxlY3RlZCBpcyBOb25lIGVsc2UgY29sbGVjdGVkCiAgICAgICAgcG9zLCBtYXRjaCA9IHNlbGYu\nc2luZ2xlX21hdGNoKGxlZnQpCiAgICAgICAgaWYgbWF0Y2ggaXMgTm9uZToKICAgICAgICAgICAg\ncmV0dXJuIEZhbHNlLCBsZWZ0LCBjb2xsZWN0ZWQKICAgICAgICBsZWZ0XyA9IGxlZnRbOnBvc10g\nKyBsZWZ0W3BvcysxOl0KICAgICAgICBzYW1lX25hbWUgPSBbYSBmb3IgYSBpbiBjb2xsZWN0ZWQg\naWYgYS5uYW1lID09IHNlbGYubmFtZV0KICAgICAgICBpZiB0eXBlKHNlbGYudmFsdWUpIGluIChp\nbnQsIGxpc3QpOgogICAgICAgICAgICBpbmNyZW1lbnQgPSAxIGlmIHR5cGUoc2VsZi52YWx1ZSkg\naXMgaW50IGVsc2UgW21hdGNoLnZhbHVlXQogICAgICAgICAgICBpZiBub3Qgc2FtZV9uYW1lOgog\nICAgICAgICAgICAgICAgbWF0Y2gudmFsdWUgPSBpbmNyZW1lbnQKICAgICAgICAgICAgICAgIHJl\ndHVybiBUcnVlLCBsZWZ0XywgY29sbGVjdGVkICsgW21hdGNoXQogICAgICAgICAgICBzYW1lX25h\nbWVbMF0udmFsdWUgKz0gaW5jcmVtZW50CiAgICAgICAgICAgIHJldHVybiBUcnVlLCBsZWZ0Xywg\nY29sbGVjdGVkCiAgICAgICAgcmV0dXJuIFRydWUsIGxlZnRfLCBjb2xsZWN0ZWQgKyBbbWF0Y2hd\nCgoKY2xhc3MgUGFycmVudFBhdHRlcm4oUGF0dGVybik6CgogICAgZGVmIF9faW5pdF9fKHNlbGYs\nICpjaGlsZHJlbik6CiAgICAgICAgc2VsZi5jaGlsZHJlbiA9IGxpc3QoY2hpbGRyZW4pCgogICAg\nZGVmIF9fcmVwcl9fKHNlbGYpOgogICAgICAgIHJldHVybiAnJXMoJXMpJyAlIChzZWxmLl9fY2xh\nc3NfXy5fX25hbWVfXywKICAgICAgICAgICAgICAgICAgICAgICAgICAgJywgJy5qb2luKHJlcHIo\nYSkgZm9yIGEgaW4gc2VsZi5jaGlsZHJlbikpCgogICAgQHByb3BlcnR5CiAgICBkZWYgZmxhdChz\nZWxmKToKICAgICAgICByZXR1cm4gc3VtKFtjLmZsYXQgZm9yIGMgaW4gc2VsZi5jaGlsZHJlbl0s\nIFtdKQoKCmNsYXNzIEFyZ3VtZW50KENoaWxkUGF0dGVybik6CgogICAgZGVmIHNpbmdsZV9tYXRj\naChzZWxmLCBsZWZ0KToKICAgICAgICBmb3IgbiwgcCBpbiBlbnVtZXJhdGUobGVmdCk6CiAgICAg\nICAgICAgIGlmIHR5cGUocCkgaXMgQXJndW1lbnQ6CiAgICAgICAgICAgICAgICByZXR1cm4gbiwg\nQXJndW1lbnQoc2VsZi5uYW1lLCBwLnZhbHVlKQogICAgICAgIHJldHVybiBOb25lLCBOb25lCgoK\nY2xhc3MgQ29tbWFuZChBcmd1bWVudCk6CgogICAgZGVmIF9faW5pdF9fKHNlbGYsIG5hbWUsIHZh\nbHVlPUZhbHNlKToKICAgICAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICAgICAgc2VsZi52YWx1ZSA9\nIHZhbHVlCgogICAgZGVmIHNpbmdsZV9tYXRjaChzZWxmLCBsZWZ0KToKICAgICAgICBmb3Igbiwg\ncCBpbiBlbnVtZXJhdGUobGVmdCk6CiAgICAgICAgICAgIGlmIHR5cGUocCkgaXMgQXJndW1lbnQ6\nCiAgICAgICAgICAgICAgICBpZiBwLnZhbHVlID09IHNlbGYubmFtZToKICAgICAgICAgICAgICAg\nICAgICByZXR1cm4gbiwgQ29tbWFuZChzZWxmLm5hbWUsIFRydWUpCiAgICAgICAgICAgICAgICBl\nbHNlOgogICAgICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgcmV0dXJuIE5vbmUsIE5vbmUK\nCgpjbGFzcyBPcHRpb24oQ2hpbGRQYXR0ZXJuKToKCiAgICBkZWYgX19pbml0X18oc2VsZiwgc2hv\ncnQ9Tm9uZSwgbG9uZz1Ob25lLCBhcmdjb3VudD0wLCB2YWx1ZT1GYWxzZSk6CiAgICAgICAgYXNz\nZXJ0IGFyZ2NvdW50IGluICgwLCAxKQogICAgICAgIHNlbGYuc2hvcnQsIHNlbGYubG9uZyA9IHNo\nb3J0LCBsb25nCiAgICAgICAgc2VsZi5hcmdjb3VudCwgc2VsZi52YWx1ZSA9IGFyZ2NvdW50LCB2\nYWx1ZQogICAgICAgIHNlbGYudmFsdWUgPSBOb25lIGlmIHZhbHVlID09IEZhbHNlIGFuZCBhcmdj\nb3VudCBlbHNlIHZhbHVlICAjIEhBQ0sKCiAgICBAY2xhc3NtZXRob2QKICAgIGRlZiBwYXJzZShj\nbGFzc18sIG9wdGlvbl9kZXNjcmlwdGlvbik6CiAgICAgICAgc2hvcnQsIGxvbmcsIGFyZ2NvdW50\nLCB2YWx1ZSA9IE5vbmUsIE5vbmUsIDAsIEZhbHNlCiAgICAgICAgb3B0aW9ucywgXywgZGVzY3Jp\ncHRpb24gPSBvcHRpb25fZGVzY3JpcHRpb24uc3RyaXAoKS5wYXJ0aXRpb24oJyAgJykKICAgICAg\nICBvcHRpb25zID0gb3B0aW9ucy5yZXBsYWNlKCcsJywgJyAnKS5yZXBsYWNlKCc9JywgJyAnKQog\nICAgICAgIGZvciBzIGluIG9wdGlvbnMuc3BsaXQoKToKICAgICAgICAgICAgaWYgcy5zdGFydHN3\naXRoKCctLScpOgogICAgICAgICAgICAgICAgbG9uZyA9IHMKICAgICAgICAgICAgZWxpZiBzLnN0\nYXJ0c3dpdGgoJy0nKToKICAgICAgICAgICAgICAgIHNob3J0ID0gcwogICAgICAgICAgICBlbHNl\nOgogICAgICAgICAgICAgICAgYXJnY291bnQgPSAxCiAgICAgICAgaWYgYXJnY291bnQ6CiAgICAg\nICAgICAgIG1hdGNoZWQgPSByZS5maW5kYWxsKCdcW2RlZmF1bHQ6ICguKilcXScsIGRlc2NyaXB0\naW9uLCBmbGFncz1yZS5JKQogICAgICAgICAgICB2YWx1ZSA9IG1hdGNoZWRbMF0gaWYgbWF0Y2hl\nZCBlbHNlIE5vbmUKICAgICAgICByZXR1cm4gY2xhc3NfKHNob3J0LCBsb25nLCBhcmdjb3VudCwg\ndmFsdWUpCgogICAgZGVmIHNpbmdsZV9tYXRjaChzZWxmLCBsZWZ0KToKICAgICAgICBmb3Igbiwg\ncCBpbiBlbnVtZXJhdGUobGVmdCk6CiAgICAgICAgICAgIGlmIHNlbGYubmFtZSA9PSBwLm5hbWU6\nCiAgICAgICAgICAgICAgICByZXR1cm4gbiwgcAogICAgICAgIHJldHVybiBOb25lLCBOb25lCgog\nICAgQHByb3BlcnR5CiAgICBkZWYgbmFtZShzZWxmKToKICAgICAgICByZXR1cm4gc2VsZi5sb25n\nIG9yIHNlbGYuc2hvcnQKCiAgICBkZWYgX19yZXByX18oc2VsZik6CiAgICAgICAgcmV0dXJuICdP\ncHRpb24oJXIsICVyLCAlciwgJXIpJyAlIChzZWxmLnNob3J0LCBzZWxmLmxvbmcsCiAgICAgICAg\nICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmFyZ2NvdW50LCBzZWxmLnZh\nbHVlKQoKCmNsYXNzIFJlcXVpcmVkKFBhcnJlbnRQYXR0ZXJuKToKCiAgICBkZWYgbWF0Y2goc2Vs\nZiwgbGVmdCwgY29sbGVjdGVkPU5vbmUpOgogICAgICAgIGNvbGxlY3RlZCA9IFtdIGlmIGNvbGxl\nY3RlZCBpcyBOb25lIGVsc2UgY29sbGVjdGVkCiAgICAgICAgbCA9IGxlZnQKICAgICAgICBjID0g\nY29sbGVjdGVkCiAgICAgICAgZm9yIHAgaW4gc2VsZi5jaGlsZHJlbjoKICAgICAgICAgICAgbWF0\nY2hlZCwgbCwgYyA9IHAubWF0Y2gobCwgYykKICAgICAgICAgICAgaWYgbm90IG1hdGNoZWQ6CiAg\nICAgICAgICAgICAgICByZXR1cm4gRmFsc2UsIGxlZnQsIGNvbGxlY3RlZAogICAgICAgIHJldHVy\nbiBUcnVlLCBsLCBjCgoKY2xhc3MgT3B0aW9uYWwoUGFycmVudFBhdHRlcm4pOgoKICAgIGRlZiBt\nYXRjaChzZWxmLCBsZWZ0LCBjb2xsZWN0ZWQ9Tm9uZSk6CiAgICAgICAgY29sbGVjdGVkID0gW10g\naWYgY29sbGVjdGVkIGlzIE5vbmUgZWxzZSBjb2xsZWN0ZWQKICAgICAgICBmb3IgcCBpbiBzZWxm\nLmNoaWxkcmVuOgogICAgICAgICAgICBtLCBsZWZ0LCBjb2xsZWN0ZWQgPSBwLm1hdGNoKGxlZnQs\nIGNvbGxlY3RlZCkKICAgICAgICByZXR1cm4gVHJ1ZSwgbGVmdCwgY29sbGVjdGVkCgoKY2xhc3Mg\nT25lT3JNb3JlKFBhcnJlbnRQYXR0ZXJuKToKCiAgICBkZWYgbWF0Y2goc2VsZiwgbGVmdCwgY29s\nbGVjdGVkPU5vbmUpOgogICAgICAgIGFzc2VydCBsZW4oc2VsZi5jaGlsZHJlbikgPT0gMQogICAg\nICAgIGNvbGxlY3RlZCA9IFtdIGlmIGNvbGxlY3RlZCBpcyBOb25lIGVsc2UgY29sbGVjdGVkCiAg\nICAgICAgbCA9IGxlZnQKICAgICAgICBjID0gY29sbGVjdGVkCiAgICAgICAgbF8gPSBOb25lCiAg\nICAgICAgbWF0Y2hlZCA9IFRydWUKICAgICAgICB0aW1lcyA9IDAKICAgICAgICB3aGlsZSBtYXRj\naGVkOgogICAgICAgICAgICAjIGNvdWxkIGl0IGJlIHRoYXQgc29tZXRoaW5nIGRpZG4ndCBtYXRj\naCBidXQgY2hhbmdlZCBsIG9yIGM/CiAgICAgICAgICAgIG1hdGNoZWQsIGwsIGMgPSBzZWxmLmNo\naWxkcmVuWzBdLm1hdGNoKGwsIGMpCiAgICAgICAgICAgIHRpbWVzICs9IDEgaWYgbWF0Y2hlZCBl\nbHNlIDAKICAgICAgICAgICAgaWYgbF8gPT0gbDoKICAgICAgICAgICAgICAgIGJyZWFrCiAgICAg\nICAgICAgIGxfID0gbAogICAgICAgIGlmIHRpbWVzID49IDE6CiAgICAgICAgICAgIHJldHVybiBU\ncnVlLCBsLCBjCiAgICAgICAgcmV0dXJuIEZhbHNlLCBsZWZ0LCBjb2xsZWN0ZWQKCgpjbGFzcyBF\naXRoZXIoUGFycmVudFBhdHRlcm4pOgoKICAgIGRlZiBtYXRjaChzZWxmLCBsZWZ0LCBjb2xsZWN0\nZWQ9Tm9uZSk6CiAgICAgICAgY29sbGVjdGVkID0gW10gaWYgY29sbGVjdGVkIGlzIE5vbmUgZWxz\nZSBjb2xsZWN0ZWQKICAgICAgICBvdXRjb21lcyA9IFtdCiAgICAgICAgZm9yIHAgaW4gc2VsZi5j\naGlsZHJlbjoKICAgICAgICAgICAgbWF0Y2hlZCwgXywgXyA9IG91dGNvbWUgPSBwLm1hdGNoKGxl\nZnQsIGNvbGxlY3RlZCkKICAgICAgICAgICAgaWYgbWF0Y2hlZDoKICAgICAgICAgICAgICAgIG91\ndGNvbWVzLmFwcGVuZChvdXRjb21lKQogICAgICAgIGlmIG91dGNvbWVzOgogICAgICAgICAgICBy\nZXR1cm4gbWluKG91dGNvbWVzLCBrZXk9bGFtYmRhIG91dGNvbWU6IGxlbihvdXRjb21lWzFdKSkK\nICAgICAgICByZXR1cm4gRmFsc2UsIGxlZnQsIGNvbGxlY3RlZAoKCmNsYXNzIFRva2VuU3RyZWFt\nKGxpc3QpOgoKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBzb3VyY2UsIGVycm9yKToKICAgICAgICBz\nZWxmICs9IHNvdXJjZS5zcGxpdCgpIGlmIGhhc2F0dHIoc291cmNlLCAnc3BsaXQnKSBlbHNlIHNv\ndXJjZQogICAgICAgIHNlbGYuZXJyb3IgPSBlcnJvcgoKICAgIGRlZiBtb3ZlKHNlbGYpOgogICAg\nICAgIHJldHVybiBzZWxmLnBvcCgwKSBpZiBsZW4oc2VsZikgZWxzZSBOb25lCgogICAgZGVmIGN1\ncnJlbnQoc2VsZik6CiAgICAgICAgcmV0dXJuIHNlbGZbMF0gaWYgbGVuKHNlbGYpIGVsc2UgTm9u\nZQoKCmRlZiBwYXJzZV9sb25nKHRva2Vucywgb3B0aW9ucyk6CiAgICByYXcsIGVxLCB2YWx1ZSA9\nIHRva2Vucy5tb3ZlKCkucGFydGl0aW9uKCc9JykKICAgIHZhbHVlID0gTm9uZSBpZiBlcSA9PSB2\nYWx1ZSA9PSAnJyBlbHNlIHZhbHVlCiAgICBvcHQgPSBbbyBmb3IgbyBpbiBvcHRpb25zIGlmIG8u\nbG9uZyBhbmQgby5sb25nID09IHJhd10KICAgIGlmIHRva2Vucy5lcnJvciBpcyBEb2NvcHRFeGl0\nIGFuZCBvcHQgPT0gW106CiAgICAgICAgb3B0ID0gW28gZm9yIG8gaW4gb3B0aW9ucyBpZiBvLmxv\nbmcgYW5kIG8ubG9uZy5zdGFydHN3aXRoKHJhdyldCiAgICBpZiBsZW4ob3B0KSA8IDE6CiAgICAg\nICAgaWYgdG9rZW5zLmVycm9yIGlzIERvY29wdEV4aXQ6CiAgICAgICAgICAgIHJhaXNlIHRva2Vu\ncy5lcnJvcignJXMgaXMgbm90IHJlY29nbml6ZWQnICUgcmF3KQogICAgICAgIGVsc2U6CiAgICAg\nICAgICAgIG8gPSBPcHRpb24oTm9uZSwgcmF3LCAoMSBpZiBlcSA9PSAnPScgZWxzZSAwKSkKICAg\nICAgICAgICAgb3B0aW9ucy5hcHBlbmQobykKICAgICAgICAgICAgcmV0dXJuIFtvXQogICAgaWYg\nbGVuKG9wdCkgPiAxOgogICAgICAgIHJhaXNlIHRva2Vucy5lcnJvcignJXMgaXMgbm90IGEgdW5p\ncXVlIHByZWZpeDogJXM/JyAlCiAgICAgICAgICAgICAgICAgICAgICAgICAocmF3LCAnLCAnLmpv\naW4oJyVzJyAlIG8ubG9uZyBmb3IgbyBpbiBvcHQpKSkKICAgIG8gPSBvcHRbMF0KICAgIG9wdCA9\nIE9wdGlvbihvLnNob3J0LCBvLmxvbmcsIG8uYXJnY291bnQsIG8udmFsdWUpCiAgICBpZiBvcHQu\nYXJnY291bnQgPT0gMToKICAgICAgICBpZiB2YWx1ZSBpcyBOb25lOgogICAgICAgICAgICBpZiB0\nb2tlbnMuY3VycmVudCgpIGlzIE5vbmU6CiAgICAgICAgICAgICAgICByYWlzZSB0b2tlbnMuZXJy\nb3IoJyVzIHJlcXVpcmVzIGFyZ3VtZW50JyAlIG9wdC5uYW1lKQogICAgICAgICAgICB2YWx1ZSA9\nIHRva2Vucy5tb3ZlKCkKICAgIGVsaWYgdmFsdWUgaXMgbm90IE5vbmU6CiAgICAgICAgcmFpc2Ug\ndG9rZW5zLmVycm9yKCclcyBtdXN0IG5vdCBoYXZlIGFuIGFyZ3VtZW50JyAlIG9wdC5uYW1lKQog\nICAgaWYgdG9rZW5zLmVycm9yIGlzIERvY29wdEV4aXQ6CiAgICAgICAgb3B0LnZhbHVlID0gdmFs\ndWUgb3IgVHJ1ZQogICAgZWxzZToKICAgICAgICBvcHQudmFsdWUgPSBOb25lIGlmIHZhbHVlIGVs\nc2UgRmFsc2UKICAgIHJldHVybiBbb3B0XQoKCmRlZiBwYXJzZV9zaG9ydHModG9rZW5zLCBvcHRp\nb25zKToKICAgIHJhdyA9IHRva2Vucy5tb3ZlKClbMTpdCiAgICBwYXJzZWQgPSBbXQogICAgd2hp\nbGUgcmF3ICE9ICcnOgogICAgICAgIG9wdCA9IFtvIGZvciBvIGluIG9wdGlvbnMKICAgICAgICAg\nICAgICAgaWYgby5zaG9ydCBhbmQgby5zaG9ydC5sc3RyaXAoJy0nKS5zdGFydHN3aXRoKHJhd1sw\nXSldCiAgICAgICAgaWYgbGVuKG9wdCkgPiAxOgogICAgICAgICAgICByYWlzZSB0b2tlbnMuZXJy\nb3IoJy0lcyBpcyBzcGVjaWZpZWQgYW1iaWd1b3VzbHkgJWQgdGltZXMnICUKICAgICAgICAgICAg\nICAgICAgICAgICAgICAgICAgKHJhd1swXSwgbGVuKG9wdCkpKQogICAgICAgIGlmIGxlbihvcHQp\nIDwgMToKICAgICAgICAgICAgaWYgdG9rZW5zLmVycm9yIGlzIERvY29wdEV4aXQ6CiAgICAgICAg\nICAgICAgICByYWlzZSB0b2tlbnMuZXJyb3IoJy0lcyBpcyBub3QgcmVjb2duaXplZCcgJSByYXdb\nMF0pCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBvID0gT3B0aW9uKCctJyArIHJh\nd1swXSwgTm9uZSkKICAgICAgICAgICAgICAgIG9wdGlvbnMuYXBwZW5kKG8pCiAgICAgICAgICAg\nICAgICBwYXJzZWQuYXBwZW5kKG8pCiAgICAgICAgICAgICAgICByYXcgPSByYXdbMTpdCiAgICAg\nICAgICAgICAgICBjb250aW51ZQogICAgICAgIG8gPSBvcHRbMF0KICAgICAgICBvcHQgPSBPcHRp\nb24oby5zaG9ydCwgby5sb25nLCBvLmFyZ2NvdW50LCBvLnZhbHVlKQogICAgICAgIHJhdyA9IHJh\nd1sxOl0KICAgICAgICBpZiBvcHQuYXJnY291bnQgPT0gMDoKICAgICAgICAgICAgdmFsdWUgPSBU\ncnVlIGlmIHRva2Vucy5lcnJvciBpcyBEb2NvcHRFeGl0IGVsc2UgRmFsc2UKICAgICAgICBlbHNl\nOgogICAgICAgICAgICBpZiByYXcgPT0gJyc6CiAgICAgICAgICAgICAgICBpZiB0b2tlbnMuY3Vy\ncmVudCgpIGlzIE5vbmU6CiAgICAgICAgICAgICAgICAgICAgcmFpc2UgdG9rZW5zLmVycm9yKCct\nJXMgcmVxdWlyZXMgYXJndW1lbnQnICUgb3B0LnNob3J0WzBdKQogICAgICAgICAgICAgICAgcmF3\nID0gdG9rZW5zLm1vdmUoKQogICAgICAgICAgICB2YWx1ZSwgcmF3ID0gcmF3LCAnJwogICAgICAg\nIGlmIHRva2Vucy5lcnJvciBpcyBEb2NvcHRFeGl0OgogICAgICAgICAgICBvcHQudmFsdWUgPSB2\nYWx1ZQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIG9wdC52YWx1ZSA9IE5vbmUgaWYgdmFsdWUg\nZWxzZSBGYWxzZQogICAgICAgIHBhcnNlZC5hcHBlbmQob3B0KQogICAgcmV0dXJuIHBhcnNlZAoK\nCmRlZiBwYXJzZV9wYXR0ZXJuKHNvdXJjZSwgb3B0aW9ucyk6CiAgICB0b2tlbnMgPSBUb2tlblN0\ncmVhbShyZS5zdWIocicoW1xbXF1cKFwpXHxdfFwuXC5cLiknLCByJyBcMSAnLCBzb3VyY2UpLAog\nICAgICAgICAgICAgICAgICAgICAgICAgRG9jb3B0TGFuZ3VhZ2VFcnJvcikKICAgIHJlc3VsdCA9\nIHBhcnNlX2V4cHIodG9rZW5zLCBvcHRpb25zKQogICAgaWYgdG9rZW5zLmN1cnJlbnQoKSBpcyBu\nb3QgTm9uZToKICAgICAgICByYWlzZSB0b2tlbnMuZXJyb3IoJ3VuZXhwZWN0ZWQgZW5kaW5nOiAl\ncicgJSAnICcuam9pbih0b2tlbnMpKQogICAgcmV0dXJuIFJlcXVpcmVkKCpyZXN1bHQpCgoKZGVm\nIHBhcnNlX2V4cHIodG9rZW5zLCBvcHRpb25zKToKICAgICIiImV4cHIgOjo9IHNlcSAoICd8JyBz\nZXEgKSogOyIiIgogICAgc2VxID0gcGFyc2Vfc2VxKHRva2Vucywgb3B0aW9ucykKICAgIGlmIHRv\na2Vucy5jdXJyZW50KCkgIT0gJ3wnOgogICAgICAgIHJldHVybiBzZXEKICAgIHJlc3VsdCA9IFtS\nZXF1aXJlZCgqc2VxKV0gaWYgbGVuKHNlcSkgPiAxIGVsc2Ugc2VxCiAgICB3aGlsZSB0b2tlbnMu\nY3VycmVudCgpID09ICd8JzoKICAgICAgICB0b2tlbnMubW92ZSgpCiAgICAgICAgc2VxID0gcGFy\nc2Vfc2VxKHRva2Vucywgb3B0aW9ucykKICAgICAgICByZXN1bHQgKz0gW1JlcXVpcmVkKCpzZXEp\nXSBpZiBsZW4oc2VxKSA+IDEgZWxzZSBzZXEKICAgIHJldHVybiBbRWl0aGVyKCpyZXN1bHQpXSBp\nZiBsZW4ocmVzdWx0KSA+IDEgZWxzZSByZXN1bHQKCgpkZWYgcGFyc2Vfc2VxKHRva2Vucywgb3B0\naW9ucyk6CiAgICAiIiJzZXEgOjo9ICggYXRvbSBbICcuLi4nIF0gKSogOyIiIgogICAgcmVzdWx0\nID0gW10KICAgIHdoaWxlIHRva2Vucy5jdXJyZW50KCkgbm90IGluIFtOb25lLCAnXScsICcpJywg\nJ3wnXToKICAgICAgICBhdG9tID0gcGFyc2VfYXRvbSh0b2tlbnMsIG9wdGlvbnMpCiAgICAgICAg\naWYgdG9rZW5zLmN1cnJlbnQoKSA9PSAnLi4uJzoKICAgICAgICAgICAgYXRvbSA9IFtPbmVPck1v\ncmUoKmF0b20pXQogICAgICAgICAgICB0b2tlbnMubW92ZSgpCiAgICAgICAgcmVzdWx0ICs9IGF0\nb20KICAgIHJldHVybiByZXN1bHQKCgpkZWYgcGFyc2VfYXRvbSh0b2tlbnMsIG9wdGlvbnMpOgog\nICAgIiIiYXRvbSA6Oj0gJygnIGV4cHIgJyknIHwgJ1snIGV4cHIgJ10nIHwgJ29wdGlvbnMnCiAg\nICAgICAgICAgICB8IGxvbmcgfCBzaG9ydHMgfCBhcmd1bWVudCB8IGNvbW1hbmQgOwogICAgIiIi\nCiAgICB0b2tlbiA9IHRva2Vucy5jdXJyZW50KCkKICAgIHJlc3VsdCA9IFtdCiAgICBpZiB0b2tl\nbiBpbiAnKFsnOgogICAgICAgIHRva2Vucy5tb3ZlKCkKICAgICAgICBtYXRjaGluZywgcGF0dGVy\nbiA9IHsnKCc6IFsnKScsIFJlcXVpcmVkXSwgJ1snOiBbJ10nLCBPcHRpb25hbF19W3Rva2VuXQog\nICAgICAgIHJlc3VsdCA9IHBhdHRlcm4oKnBhcnNlX2V4cHIodG9rZW5zLCBvcHRpb25zKSkKICAg\nICAgICBpZiB0b2tlbnMubW92ZSgpICE9IG1hdGNoaW5nOgogICAgICAgICAgICByYWlzZSB0b2tl\nbnMuZXJyb3IoInVubWF0Y2hlZCAnJXMnIiAlIHRva2VuKQogICAgICAgIHJldHVybiBbcmVzdWx0\nXQogICAgZWxpZiB0b2tlbiA9PSAnb3B0aW9ucyc6CiAgICAgICAgdG9rZW5zLm1vdmUoKQogICAg\nICAgIHJldHVybiBvcHRpb25zCiAgICBlbGlmIHRva2VuLnN0YXJ0c3dpdGgoJy0tJykgYW5kIHRv\na2VuICE9ICctLSc6CiAgICAgICAgcmV0dXJuIHBhcnNlX2xvbmcodG9rZW5zLCBvcHRpb25zKQog\nICAgZWxpZiB0b2tlbi5zdGFydHN3aXRoKCctJykgYW5kIHRva2VuIG5vdCBpbiAoJy0nLCAnLS0n\nKToKICAgICAgICByZXR1cm4gcGFyc2Vfc2hvcnRzKHRva2Vucywgb3B0aW9ucykKICAgIGVsaWYg\ndG9rZW4uc3RhcnRzd2l0aCgnPCcpIGFuZCB0b2tlbi5lbmRzd2l0aCgnPicpIG9yIHRva2VuLmlz\ndXBwZXIoKToKICAgICAgICByZXR1cm4gW0FyZ3VtZW50KHRva2Vucy5tb3ZlKCkpXQogICAgZWxz\nZToKICAgICAgICByZXR1cm4gW0NvbW1hbmQodG9rZW5zLm1vdmUoKSldCgoKZGVmIHBhcnNlX2Fy\nZ3Yoc291cmNlLCBvcHRpb25zKToKICAgIHRva2VucyA9IFRva2VuU3RyZWFtKHNvdXJjZSwgRG9j\nb3B0RXhpdCkKICAgIHBhcnNlZCA9IFtdCiAgICB3aGlsZSB0b2tlbnMuY3VycmVudCgpIGlzIG5v\ndCBOb25lOgogICAgICAgIGlmIHRva2Vucy5jdXJyZW50KCkgPT0gJy0tJzoKICAgICAgICAgICAg\ncmV0dXJuIHBhcnNlZCArIFtBcmd1bWVudChOb25lLCB2KSBmb3IgdiBpbiB0b2tlbnNdCiAgICAg\nICAgZWxpZiB0b2tlbnMuY3VycmVudCgpLnN0YXJ0c3dpdGgoJy0tJyk6CiAgICAgICAgICAgIHBh\ncnNlZCArPSBwYXJzZV9sb25nKHRva2Vucywgb3B0aW9ucykKICAgICAgICBlbGlmIHRva2Vucy5j\ndXJyZW50KCkuc3RhcnRzd2l0aCgnLScpIGFuZCB0b2tlbnMuY3VycmVudCgpICE9ICctJzoKICAg\nICAgICAgICAgcGFyc2VkICs9IHBhcnNlX3Nob3J0cyh0b2tlbnMsIG9wdGlvbnMpCiAgICAgICAg\nZWxzZToKICAgICAgICAgICAgcGFyc2VkLmFwcGVuZChBcmd1bWVudChOb25lLCB0b2tlbnMubW92\nZSgpKSkKICAgIHJldHVybiBwYXJzZWQKCgpkZWYgcGFyc2VfZG9jX29wdGlvbnMoZG9jKToKICAg\nIHJldHVybiBbT3B0aW9uLnBhcnNlKCctJyArIHMpIGZvciBzIGluIHJlLnNwbGl0KCdeICotfFxu\nICotJywgZG9jKVsxOl1dCgoKZGVmIHByaW50YWJsZV91c2FnZShkb2MpOgogICAgdXNhZ2Vfc3Bs\naXQgPSByZS5zcGxpdChyJyhbVXVdW1NzXVtBYV1bR2ddW0VlXTopJywgZG9jKQogICAgaWYgbGVu\nKHVzYWdlX3NwbGl0KSA8IDM6CiAgICAgICAgcmFpc2UgRG9jb3B0TGFuZ3VhZ2VFcnJvcignInVz\nYWdlOiIgKGNhc2UtaW5zZW5zaXRpdmUpIG5vdCBmb3VuZC4nKQogICAgaWYgbGVuKHVzYWdlX3Nw\nbGl0KSA+IDM6CiAgICAgICAgcmFpc2UgRG9jb3B0TGFuZ3VhZ2VFcnJvcignTW9yZSB0aGFuIG9u\nZSAidXNhZ2U6IiAoY2FzZS1pbnNlbnNpdGl2ZSkuJykKICAgIHJldHVybiByZS5zcGxpdChyJ1xu\nXHMqXG4nLCAnJy5qb2luKHVzYWdlX3NwbGl0WzE6XSkpWzBdLnN0cmlwKCkKCgpkZWYgZm9ybWFs\nX3VzYWdlKHByaW50YWJsZV91c2FnZSk6CiAgICBwdSA9IHByaW50YWJsZV91c2FnZS5zcGxpdCgp\nWzE6XSAgIyBzcGxpdCBhbmQgZHJvcCAidXNhZ2U6IgogICAgcmV0dXJuICcoICcgKyAnICcuam9p\nbignKSB8ICgnIGlmIHMgPT0gcHVbMF0gZWxzZSBzIGZvciBzIGluIHB1WzE6XSkgKyAnICknCgoK\nZGVmIGV4dHJhcyhoZWxwLCB2ZXJzaW9uLCBvcHRpb25zLCBkb2MpOgogICAgaWYgaGVscCBhbmQg\nYW55KChvLm5hbWUgaW4gKCctaCcsICctLWhlbHAnKSkgYW5kIG8udmFsdWUgZm9yIG8gaW4gb3B0\naW9ucyk6CiAgICAgICAgcHJpbnQoZG9jLnN0cmlwKCkpCiAgICAgICAgZXhpdCgpCiAgICBpZiB2\nZXJzaW9uIGFuZCBhbnkoby5uYW1lID09ICctLXZlcnNpb24nIGFuZCBvLnZhbHVlIGZvciBvIGlu\nIG9wdGlvbnMpOgogICAgICAgIHByaW50KHZlcnNpb24pCiAgICAgICAgZXhpdCgpCgoKY2xhc3Mg\nRGljdChkaWN0KToKICAgIGRlZiBfX3JlcHJfXyhzZWxmKToKICAgICAgICByZXR1cm4gJ3slc30n\nICUgJyxcbiAnLmpvaW4oJyVyOiAlcicgJSBpIGZvciBpIGluIHNvcnRlZChzZWxmLml0ZW1zKCkp\nKQoKCmRlZiBkb2NvcHQoZG9jLCBhcmd2PXN5cy5hcmd2WzE6XSwgaGVscD1UcnVlLCB2ZXJzaW9u\nPU5vbmUpOgogICAgRG9jb3B0RXhpdC51c2FnZSA9IHByaW50YWJsZV91c2FnZShkb2MpCiAgICBv\ncHRpb25zID0gcGFyc2VfZG9jX29wdGlvbnMoZG9jKQogICAgcGF0dGVybiA9IHBhcnNlX3BhdHRl\ncm4oZm9ybWFsX3VzYWdlKERvY29wdEV4aXQudXNhZ2UpLCBvcHRpb25zKQogICAgYXJndiA9IHBh\ncnNlX2FyZ3YoYXJndiwgb3B0aW9ucykKICAgIGV4dHJhcyhoZWxwLCB2ZXJzaW9uLCBhcmd2LCBk\nb2MpCiAgICBtYXRjaGVkLCBsZWZ0LCBjb2xsZWN0ZWQgPSBwYXR0ZXJuLmZpeCgpLm1hdGNoKGFy\nZ3YpCiAgICBpZiBtYXRjaGVkIGFuZCBsZWZ0ID09IFtdOiAgIyBiZXR0ZXIgZXJyb3IgbWVzc2Fn\nZSBpZiBsZWZ0PwogICAgICAgIHJldHVybiBEaWN0KChhLm5hbWUsIGEudmFsdWUpIGZvciBhIGlu\nIChwYXR0ZXJuLmZsYXQgKyBvcHRpb25zICsgY29sbGVjdGVkKSkKICAgIHJhaXNlIERvY29wdEV4\naXQoKQo=\n'))
mods.append(('ConfigObject', 'IyAtKi0gY29kaW5nOiB1dGYtOCAtKi0KaW1wb3J0IG9zCmltcG9ydCB0ZW1wZmlsZQp0cnk6CiAg\nICBmcm9tIENvbmZpZ1BhcnNlciBpbXBvcnQgQ29uZmlnUGFyc2VyCiAgICBQWTMgPSBGYWxzZQpl\neGNlcHQ6CiAgICBmcm9tIGNvbmZpZ3BhcnNlciBpbXBvcnQgQ29uZmlnUGFyc2VyCiAgICBQWTMg\nPSBUcnVlCgpfX2RvY19fID0gIiIiCjpjbGFzczpgfkNvbmZpZ09iamVjdC5Db25maWdPYmplY3Rg\nIGlzIGEgd3JhcHBlciB0byB0aGUgcHl0aG9uIENvbmZpZ1BhcnNlcl8gdG8KYWxsb3cgdG8gYWNj\nZXNzIHNlY3Rpb25zL29wdGlvbnMgd2l0aCBhdHRyaWJ1dGUgbmFtZXM6OgoKICAgID4+PiBmcm9t\nIENvbmZpZ09iamVjdCBpbXBvcnQgQ29uZmlnT2JqZWN0CiAgICA+Pj4gY29uZmlnID0gQ29uZmln\nT2JqZWN0KCkKCiAgICA+Pj4gY29uZmlnLnNlY3Rpb24udmFsdWUgPSAxCgpWYWx1ZXMgYXJlIHN0\nb3JlZCBhcyBzdHJpbmc6OgoKICAgID4+PiBjb25maWcuc2VjdGlvbi52YWx1ZQogICAgJzEnCgpW\nYWx1ZXMgYXJlIHJldHVybmVkIGFzIDpjbGFzczpgfkNvbmZpZ09iamVjdC5Db25maWdWYWx1ZWAg\ndG8gY29udmVydCByZXN1bHQgdG8Kb3RoZXIgdHlwZXM6OgoKICAgID4+PiBjb25maWcuc2VjdGlv\nbi52YWx1ZS5hc19pbnQoKQogICAgMQoKSGVyZSBpcyBob3cgbGlzdCBhcmUgc3RvcmVkOjoKCiAg\nICA+Pj4gY29uZmlnLnNlY3Rpb24udmFsdWUxID0gbGlzdChyYW5nZSgyKSkKICAgID4+PiBwcmlu\ndChjb25maWcuc2VjdGlvbi52YWx1ZTEpCiAgICAwCiAgICAxCiAgICA+Pj4gY29uZmlnLnNlY3Rp\nb24udmFsdWUxLmFzX2xpc3QoKQogICAgWycwJywgJzEnXQoKWW91IGNhbiB1c2Uga2V5czo6Cgog\nICAgPj4+IGNvbmZpZ1snc2V0J11bJ3ZhbHVlJ10gPSAxCiAgICA+Pj4gY29uZmlnWydzZXQnXVsn\ndmFsdWUnXS5hc19pbnQoKQogICAgMQoKWW91IGNhbiBzZXQgYSBzZWN0aW9uIGFzIGRpY3Q6OgoK\nICAgID4+PiBjb25maWcuZGljdCA9IGRpY3QodmFsdWU9MSwgdmFsdWUyPVsnMCcsICcxJ10pCiAg\nICA+Pj4gY29uZmlnLmRpY3QudmFsdWUuYXNfaW50KCkKICAgIDEKICAgID4+PiBjb25maWcuZGlj\ndC52YWx1ZTIuYXNfbGlzdCgpCiAgICBbJzAnLCAnMSddCgpVcGRhdGUgaXQ6OgoKICAgID4+PiBj\nb25maWcuZGljdC51cGRhdGUodmFsdWUyPVsxLCAyXSkKICAgID4+PiBjb25maWcuZGljdC52YWx1\nZTIuYXNfbGlzdCgpCiAgICBbJzEnLCAnMiddCgpTZWUgd2hhdCB5b3VyIHNlY3Rpb24gbG9vayBs\naWtlOjoKCiAgICA+Pj4gY29uZmlnWydzZXQnXQogICAgeyd2YWx1ZSc6ICcxJ30KCgpEZWxldGUg\nb3B0aW9uczo6CgogICAgPj4+IGRlbCBjb25maWdbJ3NldCddLnZhbHVlCiAgICA+Pj4gY29uZmln\nWydzZXQnXQogICAge30KClBsYXlpbmcgd2l0aCBmaWxlczo6CgogICAgPj4+IGZpbGVuYW1lPW9z\nLnBhdGguam9pbih0ZW1wZmlsZS5nZXR0ZW1wZGlyKCksICdjb25maWcuaW5pJykKICAgID4+PiBj\nb25maWcgPSBDb25maWdPYmplY3QoZmlsZW5hbWU9ZmlsZW5hbWUpCiAgICA+Pj4gY29uZmlnLnNl\nY3Rpb24gPSBkaWN0KHZhbHVlPTEpCiAgICA+Pj4gY29uZmlnLndyaXRlKCkKCiAgICA+Pj4gY29u\nZmlnID0gQ29uZmlnT2JqZWN0KGZpbGVuYW1lPWZpbGVuYW1lKQogICAgPj4+IGNvbmZpZy5zZWN0\naW9uLnZhbHVlLmFzX2ludCgpCiAgICAxCgo6OgoKICAgID4+PiBvcy5yZW1vdmUoZmlsZW5hbWUp\nCgoiIiIKCl9fYWxsX18gPSAoJ0NvbmZpZ09iamVjdCcsICdjb25maWdfbW9kdWxlJywgJ09iamVj\ndCcpCgpjbGFzcyBDb25maWdWYWx1ZShzdHIpOgoKICAgIGRlZiBhc19pbnQoc2VsZik6CiAgICAg\nICAgIiIiY29udmVydCB2YWx1ZSB0byBpbnQiIiIKICAgICAgICB0cnk6CiAgICAgICAgICAgIHJl\ndHVybiBpbnQoc2VsZikKICAgICAgICBleGNlcHQgVHlwZUVycm9yOgogICAgICAgICAgICByYWlz\nZSBUeXBlRXJyb3IoJyVzIGlzIG5vdCBhIHZhbGlkIGludCcgJSBzZWxmKQoKICAgIGRlZiBhc19m\nbG9hdChzZWxmKToKICAgICAgICAiIiJjb252ZXJ0IHZhbHVlIHRvIGZsb2F0IiIiCiAgICAgICAg\ndHJ5OgogICAgICAgICAgICByZXR1cm4gZmxvYXQoc2VsZikKICAgICAgICBleGNlcHQgVHlwZUVy\ncm9yOgogICAgICAgICAgICByYWlzZSBUeXBlRXJyb3IoJyVzIGlzIG5vdCBhIHZhbGlkIGZsb2F0\nJyAlIHNlbGYpCgogICAgZGVmIGFzX2xpc3Qoc2VsZiwgc2VwPU5vbmUpOgogICAgICAgICIiImNv\nbnZlcnQgdmFsdWUgdG8gbGlzdDo6CiAgICAgICAgICAgID4+PiBjb25maWcgPSBDb25maWdPYmpl\nY3QoKQogICAgICAgICAgICA+Pj4gY29uZmlnLmxpc3RlcyA9IGRpY3QobGlzdGU9WzAsIDFdLCBz\ndHJpbmc9JzE7MjszJykKCiAgICAgICAgICAgID4+PiBwcmludChjb25maWcubGlzdGVzLmxpc3Rl\nKQogICAgICAgICAgICAwCiAgICAgICAgICAgIDEKICAgICAgICAgICAgPj4+IGNvbmZpZy5saXN0\nZXMubGlzdGUuYXNfbGlzdCgpCiAgICAgICAgICAgIFsnMCcsICcxJ10KICAgICAgICAgICAgPj4+\nIGNvbmZpZy5saXN0ZXMuc3RyaW5nLmFzX2xpc3Qoc2VwPSc7JykKICAgICAgICAgICAgWycxJywg\nJzInLCAnMyddCiAgICAgICAgIiIiCiAgICAgICAgaWYgc2VwIGlzIE5vbmUgYW5kICdcbicgaW4g\nc2VsZjoKICAgICAgICAgICAgc2VwID0gJ1xuJwogICAgICAgIHJldHVybiBbQ29uZmlnVmFsdWUo\ndikgZm9yIHYgaW4gc2VsZi5zcGxpdChzZXApIGlmIHZdCgogICAgZGVmIGFzX2Jvb2woc2VsZiwg\ndHJ1ZT1UcnVlLCBmYWxzZT1GYWxzZSk6CiAgICAgICAgIiIiY29udmVydCB2YWx1ZSB0byBib29s\nOjoKCiAgICAgICAgICAgID4+PiBjb25maWcgPSBDb25maWdPYmplY3QoKQogICAgICAgICAgICA+\nPj4gY29uZmlnLmJvb2xzID0gZGljdCh0cnVlPVRydWUsIGZhbHNlPUZhbHNlKQoKICAgICAgICAg\nICAgPj4+IGNvbmZpZy5ib29scy50cnVlCiAgICAgICAgICAgICd0cnVlJwogICAgICAgICAgICA+\nPj4gY29uZmlnLmJvb2xzLnRydWUuYXNfYm9vbCgpCiAgICAgICAgICAgIFRydWUKICAgICAgICAg\nICAgPj4+IGNvbmZpZy5ib29scy50cnVlLmFzX2Jvb2woJ29uJywgJ29mZicpCiAgICAgICAgICAg\nICdvbicKCiAgICAgICAgICAgID4+PiBjb25maWcuYm9vbHMuZmFsc2UKICAgICAgICAgICAgJ2Zh\nbHNlJwogICAgICAgICAgICA+Pj4gY29uZmlnLmJvb2xzLmZhbHNlLmFzX2Jvb2woKQogICAgICAg\nICAgICBGYWxzZQogICAgICAgICAgICA+Pj4gY29uZmlnLmJvb2xzLmZhbHNlLmFzX2Jvb2woJ29u\nJywgJ29mZicpCiAgICAgICAgICAgICdvZmYnCgogICAgICAgICAgICA+Pj4gY29uZmlnLmJvb2xz\nLm5vbmUuYXNfYm9vbCgpCiAgICAgICAgICAgIEZhbHNlCgogICAgICAgICIiIgogICAgICAgIGlm\nIHNlbGYubG93ZXIoKSBpbiAoJzEnLCAneScsICd0cnVlJywgJ3llcycsICdvbicpOgogICAgICAg\nICAgICByZXR1cm4gdHJ1ZQogICAgICAgIGVsaWYgc2VsZi5sb3dlcigpIGluICgnMCcsICdmJywg\nJ2ZhbHNlJywgJ25vJywgJ29mZicpOgogICAgICAgICAgICByZXR1cm4gZmFsc2UKICAgICAgICBl\nbGlmIG5vdCBzZWxmOgogICAgICAgICAgICByZXR1cm4gZmFsc2UKICAgICAgICBlbHNlOgogICAg\nICAgICAgICByYWlzZSBUeXBlRXJyb3IoJyVzIGlzIG5vdCBhIHZhbGlkIGJvb2wnICUgc2VsZikK\nCiAgICBkZWYgX19odG1sX18oc2VsZik6CiAgICAgICAgcmV0dXJuIHJlcHIoc2VsZikKCgpkZWYg\nX0NvbmZpZ1ZhbHVlKHZhbHVlPScnKToKICAgICIiIgogICAgICAgID4+PiBfQ29uZmlnVmFsdWUo\nMSkKICAgICAgICAnMScKICAgICAgICA+Pj4gX0NvbmZpZ1ZhbHVlKC4xKQogICAgICAgICcwLjEn\nCiAgICAgICAgPj4+IF9Db25maWdWYWx1ZShUcnVlKQogICAgICAgICd0cnVlJwogICAgICAgID4+\nPiBwcmludChfQ29uZmlnVmFsdWUobGlzdChyYW5nZSgyKSkpKQogICAgICAgIDAKICAgICAgICAx\nCiAgICAiIiIKICAgIGlmIHZhbHVlIGlzIFRydWUgb3IgdmFsdWUgaXMgRmFsc2U6CiAgICAgICAg\ndmFsdWUgPSB2YWx1ZSBhbmQgJ3RydWUnIG9yICdmYWxzZScKICAgIGVsaWYgaXNpbnN0YW5jZSh2\nYWx1ZSwgc2V0KSBvciBcCiAgICAgICAgIGlzaW5zdGFuY2UodmFsdWUsIGxpc3QpIG9yIFwKICAg\nICAgICAgaXNpbnN0YW5jZSh2YWx1ZSwgdHVwbGUpOgogICAgICAgIHZhbHVlID0gJ1xuJy5qb2lu\nKFtzdHIodikgZm9yIHYgaW4gdmFsdWVdKQogICAgcmV0dXJuIENvbmZpZ1ZhbHVlKHZhbHVlKQoK\nY2xhc3MgQ29uZmlnRGljdChvYmplY3QpOgoKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBwYXJlbnQs\nIHNlY3Rpb24pOgogICAgICAgIHNlbGYuX19wYXJlbnQgPSBwYXJlbnQKICAgICAgICBzZWxmLl9f\nc2VjdGlvbiA9IHNlY3Rpb24KCiAgICBkZWYgX19nZXRhdHRyX18oc2VsZiwgYXR0ciwgZGVmYXVs\ndD1Ob25lKToKICAgICAgICByZXR1cm4gc2VsZi5nZXQoYXR0ciwgTm9uZSkKCiAgICBkZWYgX19n\nZXRpdGVtX18oc2VsZiwgYXR0cik6CiAgICAgICAgcmV0dXJuIHNlbGYuZ2V0KGF0dHIsIE5vbmUp\nCgogICAgZGVmIGdldChzZWxmLCBhdHRyLCBkZWZhdWx0PU5vbmUpOgogICAgICAgICIiImRpY3Qg\nYXBpIiIiCiAgICAgICAgY29uZmlnID0gc2VsZi5fX3BhcmVudAogICAgICAgIHNlY3Rpb24gPSBz\nZWxmLl9fc2VjdGlvbgogICAgICAgIGlmIGNvbmZpZy5oYXNfc2VjdGlvbihzZWN0aW9uKSBhbmQg\nY29uZmlnLmhhc19vcHRpb24oc2VjdGlvbiwgYXR0cik6CiAgICAgICAgICAgIHZhbHVlID0gY29u\nZmlnLmdldChzZWN0aW9uLCBhdHRyKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHZhbHVlID0g\nZGVmYXVsdAogICAgICAgIGlmIHZhbHVlIGlzIE5vbmU6CiAgICAgICAgICAgIHZhbHVlID0gX0Nv\nbmZpZ1ZhbHVlKCkKICAgICAgICBlbGlmIG5vdCBpc2luc3RhbmNlKHZhbHVlLCBDb25maWdWYWx1\nZSk6CiAgICAgICAgICAgIHZhbHVlID0gX0NvbmZpZ1ZhbHVlKHZhbHVlKQogICAgICAgIHJldHVy\nbiB2YWx1ZQoKICAgIGRlZiBfX3NldGF0dHJfXyhzZWxmLCBhdHRyLCB2YWx1ZSk6CiAgICAgICAg\naWYgYXR0ci5zdGFydHN3aXRoKCdfQ29uZmlnRGljdF9fJyk6CiAgICAgICAgICAgIG9iamVjdC5f\nX3NldGF0dHJfXyhzZWxmLCBhdHRyLCB2YWx1ZSkKICAgICAgICBlbHNlOgogICAgICAgICAgICBz\nZWxmLl9fc2V0aXRlbV9fKGF0dHIsIHZhbHVlKQoKICAgIGRlZiBfX3NldGl0ZW1fXyhzZWxmLCBh\ndHRyLCB2YWx1ZSk6CiAgICAgICAgY29uZmlnID0gc2VsZi5fX3BhcmVudAogICAgICAgIGlmIG5v\ndCBjb25maWcuaGFzX3NlY3Rpb24oc2VsZi5fX3NlY3Rpb24pOgogICAgICAgICAgICBjb25maWcu\nYWRkX3NlY3Rpb24oc2VsZi5fX3NlY3Rpb24pCiAgICAgICAgaWYgdmFsdWUgaXMgbm90IE5vbmUg\nYW5kIG5vdCBpc2luc3RhbmNlKHZhbHVlLCBDb25maWdWYWx1ZSk6CiAgICAgICAgICAgIHZhbHVl\nID0gX0NvbmZpZ1ZhbHVlKHZhbHVlKQogICAgICAgIGNvbmZpZy5zZXQoc2VsZi5fX3NlY3Rpb24s\nIGF0dHIsIHZhbHVlKQoKICAgIGRlZiBfX2RlbGF0dHJfXyhzZWxmLCBhdHRyKToKICAgICAgICBj\nb25maWcgPSBzZWxmLl9fcGFyZW50CiAgICAgICAgaWYgY29uZmlnLmhhc19zZWN0aW9uKHNlbGYu\nX19zZWN0aW9uKToKICAgICAgICAgICAgaWYgY29uZmlnLmhhc19vcHRpb24oc2VsZi5fX3NlY3Rp\nb24sIGF0dHIpOgogICAgICAgICAgICAgICAgY29uZmlnLnJlbW92ZV9vcHRpb24oc2VsZi5fX3Nl\nY3Rpb24sIGF0dHIpCgogICAgX19kZWxpdGVtX18gPSBfX2RlbGF0dHJfXwoKICAgIGRlZiBpdGVt\ncyhzZWxmKToKICAgICAgICAiIiJkaWN0IGFwaSIiIgogICAgICAgIGlmIHNlbGYuX19wYXJlbnQu\naGFzX3NlY3Rpb24oc2VsZi5fX3NlY3Rpb24pOgogICAgICAgICAgICBpdGVtcyA9IHNlbGYuX19w\nYXJlbnQuaXRlbXMoc2VsZi5fX3NlY3Rpb24pCiAgICAgICAgICAgIHJldHVybiBbKGssIF9Db25m\naWdWYWx1ZSh2KSkgZm9yIGssIHYgaW4gaXRlbXNdCiAgICAgICAgcmV0dXJuIFtdCgogICAgZGVm\nIGtleXMoc2VsZik6CiAgICAgICAgIiIiZGljdCBhcGkiIiIKICAgICAgICBpZiBzZWxmLl9fcGFy\nZW50Lmhhc19zZWN0aW9uKHNlbGYuX19zZWN0aW9uKToKICAgICAgICAgICAgcmV0dXJuIHNlbGYu\nX19wYXJlbnQub3B0aW9ucyhzZWxmLl9fc2VjdGlvbikKICAgICAgICByZXR1cm4gW10KCiAgICBk\nZWYgdXBkYXRlKHNlbGYsICphcmdzLCAqKmt3YXJncyk6CiAgICAgICAgIiIiZGljdCBhcGkiIiIK\nICAgICAgICB2YWx1ZXMgPSB7fQogICAgICAgIGZvciBhcmcgaW4gYXJnczoKICAgICAgICAgICAg\ndmFsdWVzLnVwZGF0ZShhcmcpCiAgICAgICAgdmFsdWVzLnVwZGF0ZShrd2FyZ3MpCiAgICAgICAg\nY29uZmlnID0gc2VsZi5fX3BhcmVudAogICAgICAgIGlmIG5vdCBjb25maWcuaGFzX3NlY3Rpb24o\nc2VsZi5fX3NlY3Rpb24pOgogICAgICAgICAgICBjb25maWcuYWRkX3NlY3Rpb24oc2VsZi5fX3Nl\nY3Rpb24pCiAgICAgICAgZm9yIGF0dHIsIHZhbHVlIGluIHZhbHVlcy5pdGVtcygpOgogICAgICAg\nICAgICBpZiB2YWx1ZSBpcyBub3QgTm9uZSBhbmQgbm90IGlzaW5zdGFuY2UodmFsdWUsIENvbmZp\nZ1ZhbHVlKToKICAgICAgICAgICAgICAgIHZhbHVlID0gX0NvbmZpZ1ZhbHVlKHZhbHVlKQogICAg\nICAgICAgICBjb25maWcuc2V0KHNlbGYuX19zZWN0aW9uLCBhdHRyLCB2YWx1ZSkKCiAgICBkZWYg\nX19jb250YWluc19fKHNlbGYsIG90aGVyKToKICAgICAgICBjb25maWcgPSBzZWxmLl9fcGFyZW50\nCiAgICAgICAgc2VjdGlvbiA9IHNlbGYuX19zZWN0aW9uCiAgICAgICAgaWYgY29uZmlnLmhhc19z\nZWN0aW9uKHNlY3Rpb24pIGFuZCBjb25maWcuaGFzX29wdGlvbihzZWN0aW9uLCBvdGhlcik6CiAg\nICAgICAgICAgIHJldHVybiBUcnVlCiAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgZGVmIF9fcmVw\ncl9fKHNlbGYpOgogICAgICAgIHJldHVybiByZXByKGRpY3Qoc2VsZi5pdGVtcygpKSkKCiAgICBf\nX2h0bWxfXyA9IF9fcmVwcl9fCgpjbGFzcyBPYmplY3QoZGljdCk6CiAgICBkZWYgX19nZXRhdHRy\nX18oc2VsZiwgYXR0cik6CiAgICAgICAgcmV0dXJuIHNlbGYuZ2V0KGF0dHIpCiAgICBkZWYgX19z\nZXRhdHRyX18oc2VsZiwgYXR0ciwgdmFsdWUpOgogICAgICAgIHNlbGZbYXR0cl0gPSB2YWx1ZQoK\nCmNsYXNzIENvbmZpZ09iamVjdChDb25maWdQYXJzZXIsIG9iamVjdCk6CiAgICAiIiJDb25maWdQ\nYXJzZXJfIHdyYXBwZXIKICAgICIiIgoKICAgIGRlZiBfX2luaXRfXyhzZWxmLCAqYXJncywgKipr\nd2FyZ3MpOgogICAgICAgIHNlbGYuX19jb25maWcgPSBPYmplY3QoKQogICAgICAgIHNlbGYuZmls\nZW5hbWUgPSBOb25lCiAgICAgICAgaWYgJ2ZpbGVuYW1lJyBpbiBrd2FyZ3M6CiAgICAgICAgICAg\nIHNlbGYuZmlsZW5hbWUgPSBrd2FyZ3MucG9wKCdmaWxlbmFtZScpCiAgICAgICAgQ29uZmlnUGFy\nc2VyLl9faW5pdF9fKHNlbGYsICphcmdzLCAqKmt3YXJncykKICAgICAgICBpZiBzZWxmLmZpbGVu\nYW1lIGFuZCBvcy5wYXRoLmlzZmlsZShzZWxmLmZpbGVuYW1lKToKICAgICAgICAgICAgc2VsZi5y\nZWFkKHNlbGYuZmlsZW5hbWUpCgogICAgZGVmIHdyaXRlKHNlbGYsIGZkPU5vbmUsIHNwYWNlX2Fy\nb3VuZF9kZWxpbWl0ZXJzPVRydWUpOgogICAgICAgICIiIlNhdmUgdG8gYGBDb25maWdPYmplY3Qu\nZmlsZW5hbWVgYCBpZiBubyBmZCBpcyBwcm92aWRlZCIiIgogICAgICAgIGlmIGZkIGlzIE5vbmU6\nCiAgICAgICAgICAgIGZkID0gb3BlbihzZWxmLmZpbGVuYW1lLCAndycpCiAgICAgICAgICAgIGlm\nIFBZMzoKICAgICAgICAgICAgICAgIENvbmZpZ1BhcnNlci53cml0ZShzZWxmLCBmZCwKICAgICAg\nICAgICAgICAgICAgICBzcGFjZV9hcm91bmRfZGVsaW1pdGVycz1zcGFjZV9hcm91bmRfZGVsaW1p\ndGVycykKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIENvbmZpZ1BhcnNlci53cml0\nZShzZWxmLCBmZCkKICAgICAgICAgICAgZmQuY2xvc2UoKQogICAgICAgIGVsc2U6CiAgICAgICAg\nICAgIGlmIFBZMzoKICAgICAgICAgICAgICAgIENvbmZpZ1BhcnNlci53cml0ZShzZWxmLCBmZCwK\nICAgICAgICAgICAgICAgICAgICBzcGFjZV9hcm91bmRfZGVsaW1pdGVycz1zcGFjZV9hcm91bmRf\nZGVsaW1pdGVycykKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIENvbmZpZ1BhcnNl\nci53cml0ZShzZWxmLCBmZCkKCiAgICBkZWYgX19nZXRhdHRyX18oc2VsZiwgYXR0cik6CiAgICAg\nICAgcmV0dXJuIENvbmZpZ0RpY3Qoc2VsZiwgYXR0cikKCiAgICBfX2dldGl0ZW1fXyA9IF9fZ2V0\nYXR0cl9fCgogICAgZGVmIF9fc2V0YXR0cl9fKHNlbGYsIGF0dHIsIHZhbHVlKToKICAgICAgICBp\nZiBhdHRyLnN0YXJ0c3dpdGgoJ18nKSBvciBpc2luc3RhbmNlKHZhbHVlLCBPYmplY3QpOgogICAg\nICAgICAgICBvYmplY3QuX19zZXRhdHRyX18oc2VsZiwgYXR0ciwgdmFsdWUpCiAgICAgICAgZWxp\nZiBhdHRyIGluICgnZGVmYXVsdF9zZWN0aW9uJywgJ2ZpbGVuYW1lJyk6CiAgICAgICAgICAgIG9i\namVjdC5fX3NldGF0dHJfXyhzZWxmLCBhdHRyLCB2YWx1ZSkKICAgICAgICBlbGlmIHZhbHVlOgog\nICAgICAgICAgICBzZWxmLl9fc2V0aXRlbV9fKGF0dHIsIHZhbHVlKQoKICAgIGRlZiBfX3NldGl0\nZW1fXyhzZWxmLCBhdHRyLCB2YWx1ZSk6CiAgICAgICAgaWYgaXNpbnN0YW5jZSh2YWx1ZSwgZGlj\ndCk6CiAgICAgICAgICAgIGlmIG5vdCBzZWxmLmhhc19zZWN0aW9uKGF0dHIpOgogICAgICAgICAg\nICAgICAgc2VsZi5hZGRfc2VjdGlvbihhdHRyKQogICAgICAgICAgICBzZWN0aW9uID0gZ2V0YXR0\ncihzZWxmLCBhdHRyKQogICAgICAgICAgICBmb3IgaywgdiBpbiB2YWx1ZS5pdGVtcygpOgogICAg\nICAgICAgICAgICAgc2VjdGlvbltrXSA9IHYKICAgICAgICBlbHNlOgogICAgICAgICAgICByYWlz\nZSBUeXBlRXJyb3IoJ1ZhbHVlIG11c3QgYmUgYSBkaWN0JykKCiAgICBkZWYgX19kZWxhdHRyX18o\nc2VsZiwgYXR0cik6CiAgICAgICAgaWYgc2VsZi5oYXNfc2VjdGlvbihhdHRyKToKICAgICAgICAg\nICAgc2VsZi5yZW1vdmVfc2VjdGlvbihhdHRyKQoKICAgIF9fZGVsaXRlbV9fID0gX19kZWxhdHRy\nX18KCiAgICBkZWYgX19jb250YWluc19fKHNlbGYsIG90aGVyKToKICAgICAgICBpZiBzZWxmLmhh\nc19zZWN0aW9uKG90aGVyKToKICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICByZXR1cm4g\nRmFsc2UKCiAgICBkZWYgX19odG1sX18oc2VsZik6CiAgICAgICAgcmV0dXJuIHJlcHIoc2VsZikK\nCmRlZiBjb25maWdfbW9kdWxlKG5hbWUsIGZpbGUsICpmaWxlbmFtZXMsICoqZGVmYXVsdHMpOgog\nICAgIiIiQWxsb3cgdG8gc2V0IGEgOmNsYXNzOmB+Q29uZmlnT2JqZWN0LkNvbmZpZ09iamVjdGAg\nYXMgbW9kdWxlLiBZb3UgaGF2ZQogICAgdG8gYWRkIHRoaXMgdG8gYGB5b3VycHJvamVjdC9jb25m\naWcucHlgYDoKCiAgICAuLiBsaXRlcmFsaW5jbHVkZTo6IC4uL0NvbmZpZ09iamVjdC90ZXN0cy9j\nb25maWcucHkKCiAgICBUaGVuIHlvdSBhcmUgYWJsZSB0byB1c2UgYGBmcm9tIHlvdXJwcm9qZWN0\nIGltcG9ydCBjb25maWdgYCB3aGVyZQogICAgYGBjb25maWdgYCBpcyB0aGUgOmNsYXNzOmB+Q29u\nZmlnT2JqZWN0LkNvbmZpZ09iamVjdGAgaXRzZWxmLgogICAgIiIiCiAgICBjb25maWcgPSBDb25m\naWdPYmplY3QoZGVmYXVsdHM9ZGVmYXVsdHMpCiAgICBjb25maWcuX19uYW1lX18gPSBuYW1lCiAg\nICBjb25maWcuX19maWxlX18gPSBmaWxlCiAgICBjb25maWcuX19wYXRoX18gPSBmaWxlCiAgICBj\nb25maWcucmVhZChmaWxlbmFtZXMpCiAgICBpbXBvcnQgc3lzCiAgICBzeXMubW9kdWxlc1tuYW1l\nXSA9IGNvbmZpZwogICAgcmV0dXJuIGNvbmZpZwoKCg==\n'))
mods.append(('chut', 'ZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCB1bmljb2RlX2xpdGVyYWxzLCBwcmludF9mdW5jdGlvbgpp\nbXBvcnQgb3MKaW1wb3J0IHN5cwppbXBvcnQgc2l4CmltcG9ydCB0aW1lCmltcG9ydCB0eXBlcwpp\nbXBvcnQgYmFzZTY0CmltcG9ydCBzaHV0aWwKaW1wb3J0IGluc3BlY3QKaW1wb3J0IGxvZ2dpbmcK\naW1wb3J0IGZ1bmN0b29scwppbXBvcnQgcG9zaXhwYXRoCmZyb20gc3VicHJvY2VzcyBpbXBvcnQg\nUG9wZW4KZnJvbSBzdWJwcm9jZXNzIGltcG9ydCBQSVBFCmZyb20gc3VicHJvY2VzcyBpbXBvcnQg\nU1RET1VUCmZyb20gY29weSBpbXBvcnQgZGVlcGNvcHkKZnJvbSBjb250ZXh0bGliIGltcG9ydCBj\nb250ZXh0bWFuYWdlcgoKX19hbGxfXyA9IFsKICAgICdjb25zb2xlX3NjcmlwdCcsICdzaCcsICdl\nbnYnLCAnc3RkaW4nLCAndGVzdCcsCiAgICAnbHMnLCAnY2F0JywgJ2dyZXAnLCAnZmluZCcsICdj\ndXQnLCAndHInLCAnaGVhZCcsICd0YWlsJywgJ3NlZCcsICdhd2snLAogICAgJ25jJywgJ3Bpbmcn\nLCAnbm1hcCcsICdob3N0bmFtZScsICdob3N0JywgJ3NjcCcsICdyc3luYycsICd3Z2V0JywgJ2N1\ncmwnLAogICAgJ2NkJywgJ3doaWNoJywgJ21rdGVtcCcsICdlY2hvJywgJ3djJywKICAgICd0YXIn\nLCAnZ3ppcCcsICdndW56aXAnLCAnemlwJywgJ3VuemlwJywKICAgICd2bGMnLCAnZmZtcGVnJywg\nJ2NvbnZlcnQnLAogICAgJ3ZpcnR1YWxlbnYnLCAncGlwJywKICAgICdzc2gnLCAnc3VkbycsCiAg\nICAncGF0aCcsICdwd2QnLCAgIyBwYXRoIGlzIHBvc2l4cGF0aCwgcHdkIHJldHVybiBvcy5nZXRj\nd2QoKQpdCgpfX25vdF9waXBlZF9fID0gWydjaG1vZCcsICdjcCcsICdta2RpcicsICdtdicsICdy\nbScsICdybWRpcicsICd0b3VjaCddCgpfX2FsbF9fICs9IF9fbm90X3BpcGVkX18KCmxvZyA9IGxv\nZ2dpbmcuZ2V0TG9nZ2VyKCdjaHV0JykKCmFsaWFzZXMgPSBkaWN0KAogICAgaWZjb25maWc9Jy9z\nYmluL2lmY29uZmlnJywKICAgIHN1ZG89Jy91c3IvYmluL3N1ZG8nLAogICAgc3NoPSdzc2gnLAog\nICkKCgpkZWYgY2hlY2tfc3VkbygpOgogICAgc3VkbyA9IGFsaWFzZXMuZ2V0KCdzdWRvJykKICAg\nIGlmIG5vdCBvcy5wYXRoLmlzZmlsZShzdWRvKToKICAgICAgICByYWlzZSBPU0Vycm9yKCdzdWRv\nIGlzIG5vdCBpbnN0YWxsZWQnKQogICAgYXJncyA9IFtzdWRvLCAnLXMnLCAnd2hvYW1pJ10KICAg\nIGt3YXJncyA9IGRpY3Qoc3Rkb3V0PVBJUEUsIHN0ZGVycj1TVERPVVQpCiAgICBsb2cuZGVidWco\nJ1BvcGVuKCVyLCAqKiVyKScsIGFyZ3MsIGt3YXJncykKICAgIHdob2FtaSA9IFBvcGVuKGFyZ3Ms\nIGVudj1lbnYsICoqa3dhcmdzKQogICAgd2hvYW1pLndhaXQoKQogICAgd2hvYW1pID0gd2hvYW1p\nLnN0ZG91dC5yZWFkKCkuc3RyaXAoKQogICAgaWYgd2hvYW1pICE9IHNpeC5iKCdyb290Jyk6CiAg\nICAgICAgcmFpc2UgT1NFcnJvcignTm90IGFibGUgdG8gcnVuIHN1ZG8uJykKCgpjbGFzcyBFbnZp\ncm9uKGRpY3QpOgogICAgIiIiTWFuYWdlIG9zLmVudmlyb24iIiIKCiAgICBkZWYgX19nZXRhdHRy\nX18oc2VsZiwgYXR0cik6CiAgICAgICAgdmFsdWUgPSBzZWxmLmdldChhdHRyLnVwcGVyKCksIE5v\nbmUpCiAgICAgICAgaWYgYXR0ci5sb3dlcigpIGluICgncGF0aCcsKToKICAgICAgICAgICAgcmV0\ndXJuIHZhbHVlLnNwbGl0KG9zLnBhdGhzZXApCiAgICAgICAgcmV0dXJuIHZhbHVlCgogICAgZGVm\nIF9fc2V0YXR0cl9fKHNlbGYsIGF0dHIsIHZhbHVlKToKICAgICAgICBpZiBpc2luc3RhbmNlKHZh\nbHVlLCAobGlzdCwgdHVwbGUpKToKICAgICAgICAgICAgdmFsdWUgPSBvcy5wYXRoc2VwLmpvaW4o\ndmFsdWUpCiAgICAgICAgc2VsZlthdHRyLnVwcGVyKCldID0gdmFsdWUKCiAgICBkZWYgX19jYWxs\nX18oc2VsZiwgKiprd2FyZ3MpOgogICAgICAgIGVudmlyb24gPSBzZWxmLl9fY2xhc3NfXyhzZWxm\nLmNvcHkoKSkKICAgICAgICBmb3IgaywgdiBpbiBrd2FyZ3MuaXRlbXMoKToKICAgICAgICAgICAg\nc2V0YXR0cihlbnZpcm9uLCBrLCB2KQogICAgICAgIHJldHVybiBlbnZpcm9uCgoKY2xhc3MgUGlw\nZShvYmplY3QpOgogICAgIiIiQSBwaXBlIG9iamVjdC4gUmVwcmVzZW50IGEgc2V0IG9mIG9uZSBv\nciBtb3JlIGNvbW1hbmRzLiIiIgoKICAgIF9jaHV0ID0gTm9uZQogICAgX3BpcGUgPSBUcnVlCiAg\nICBfY21kX2FyZ3MgPSBbXQogICAgX3N5c19zdGRvdXQgPSBzeXMuc3Rkb3V0CiAgICBfc3lzX3N0\nZGVyciA9IHN5cy5zdGRlcnIKCiAgICBkZWYgX19pbml0X18oc2VsZiwgKmFyZ3MsICoqa3dhcmdz\nKToKICAgICAgICBzZWxmLl9kb25lID0gRmFsc2UKICAgICAgICBzZWxmLl9zdGRvdXQgPSBOb25l\nCiAgICAgICAgc2VsZi5fc3RkZXJyID0gTm9uZQogICAgICAgIHNlbGYuYXJncyA9IGxpc3QoYXJn\ncykKICAgICAgICBzZWxmLnByZXZpb3VzID0gTm9uZQogICAgICAgIHNlbGYucHJvY2Vzc2VzID0g\nW10KICAgICAgICBlbmNvZGluZyA9IGt3YXJncy5nZXQoJ2VuY29kaW5nJykKICAgICAgICBpZiBu\nb3QgZW5jb2Rpbmc6CiAgICAgICAgICAgIGVuY29kaW5nID0gZ2V0YXR0cihzeXMuc3Rkb3V0LCAn\nZW5jb2RpbmcnLCBOb25lKSBvciAndXRmOCcKICAgICAgICBzZWxmLmVuY29kaW5nID0gZW5jb2Rp\nbmcKICAgICAgICBzZWxmLmt3YXJncyA9IGt3YXJncwogICAgICAgIGlmICdzaCcgaW4ga3dhcmdz\nOgogICAgICAgICAgICBrd2FyZ3NbJ3NoZWxsJ10gPSBrd2FyZ3MucG9wKCdzaCcpCiAgICAgICAg\naWYgJ2NvbWJpbmVfc3RkZXJyJyBpbiBrd2FyZ3M6CiAgICAgICAgICAgIGt3YXJncy5wb3AoJ2Nv\nbWJpbmVfc3RkZXJyJykKICAgICAgICAgICAga3dhcmdzWydzdGRlcnInXSA9IFNURE9VVAogICAg\nICAgIGlmICdwaXBlJyBpbiBrd2FyZ3M6CiAgICAgICAgICAgIGlmIG5vdCBrd2FyZ3MucG9wKCdw\naXBlJyk6CiAgICAgICAgICAgICAgICBzZWxmLl9jYWxsX3BpcGUoKQogICAgICAgIGVsaWYgbm90\nIHNlbGYuX3BpcGU6CiAgICAgICAgICAgIHNlbGYuX2NhbGxfcGlwZSgpCgogICAgZGVmIF9jYWxs\nX3BpcGUoc2VsZik6CiAgICAgICAgc2VsZi5fZG9uZSA9IFRydWUKICAgICAgICByZXQgPSBzZWxm\nLl9fY2FsbF9fKCkKICAgICAgICBpZiByZXQuZmFpbGVkOgogICAgICAgICAgICBwcmludChyZXQu\nc3RkZXJyLCBmaWxlPXN5cy5zdGRlcnIpCgogICAgQHByb3BlcnR5CiAgICBkZWYgcmV0dXJuY29k\nZXMoc2VsZik6CiAgICAgICAgIiIiQSBsaXN0IG9mIHJldHVybiBjb2RlcyBvZiBhbGwgcHJvY2Vz\nc2VzIGxhdW5jaGVkIGJ5IHRoZSBwaXBlIiIiCiAgICAgICAgZm9yIHAgaW4gc2VsZi5wcm9jZXNz\nZXM6CiAgICAgICAgICAgIHAud2FpdCgpCiAgICAgICAgY29kZXMgPSBbcC5wb2xsKCkgZm9yIHAg\naW4gc2VsZi5wcm9jZXNzZXNdCiAgICAgICAgaWYgc2V0KGNvZGVzKSA9PSBzZXQoWzBdKToKICAg\nICAgICAgICAgcmV0dXJuIFtdCiAgICAgICAgcmV0dXJuIGNvZGVzCgogICAgQHByb3BlcnR5CiAg\nICBkZWYgZmFpbGVkKHNlbGYpOgogICAgICAgICIiIlRydWUgaWYgb25lIG9yIG1vcmUgcHJvY2Vz\ncyBmYWlsZWQiIiIKICAgICAgICBvdXRwdXQgPSBzZWxmLl9fY2FsbF9fKCkKICAgICAgICByZXR1\ncm4gb3V0cHV0LmZhaWxlZAoKICAgIEBwcm9wZXJ0eQogICAgZGVmIHN1Y2NlZWRlZChzZWxmKToK\nICAgICAgICAiIiJUcnVlIGlmIGFsbCBwcm9jZXNzZXMgc3VjY2VlZGVkIiIiCiAgICAgICAgb3V0\ncHV0ID0gc2VsZi5fX2NhbGxfXygpCiAgICAgICAgaWYgb3V0cHV0LnN1Y2NlZWRlZDoKICAgICAg\nICAgICAgcmV0dXJuIG91dHB1dCBvciBUcnVlCiAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgQHBy\nb3BlcnR5CiAgICBkZWYgc3RkZXJyKHNlbGYpOgogICAgICAgICIiImNvbWJpbmVkIHN0ZGVyciBv\nZiBhbGwgcHJvY2Vzc2VzIiIiCiAgICAgICAgaWYgc2VsZi5fc3RkZXJyIGlzIE5vbmU6CiAgICAg\nICAgICAgIHN0ZGVyciA9IFtwLnN0ZGVyci5yZWFkKCkgZm9yIHAgaW4gc2VsZi5wcm9jZXNzZXMg\naWYgcC5zdGRlcnJdCiAgICAgICAgICAgIG91dHB1dCA9IGInXG4nLmpvaW4oc3RkZXJyKS5zdHJp\ncCgpCiAgICAgICAgICAgIGlmIG5vdCBpc2luc3RhbmNlKG91dHB1dCwgc2l4LnRleHRfdHlwZSk6\nCiAgICAgICAgICAgICAgICBvdXRwdXQgPSBvdXRwdXQuZGVjb2RlKHNlbGYuZW5jb2RpbmcsICdp\nZ25vcmUnKQogICAgICAgICAgICBzZWxmLl9zdGRlcnIgPSBvdXRwdXQKICAgICAgICByZXR1cm4g\nc2VsZi5fc3RkZXJyCgogICAgQHByb3BlcnR5CiAgICBkZWYgY29tbWFuZHMoc2VsZik6CiAgICAg\nICAgY21kcyA9IFtzZWxmXQogICAgICAgIHByZXZpb3VzID0gc2VsZi5wcmV2aW91cwogICAgICAg\nIHdoaWxlIHByZXZpb3VzIGlzIG5vdCBOb25lOgogICAgICAgICAgICBjbWRzLmluc2VydCgwLCBw\ncmV2aW91cykKICAgICAgICAgICAgcHJldmlvdXMgPSBwcmV2aW91cy5wcmV2aW91cwogICAgICAg\nIHJldHVybiBjbWRzCgogICAgZGVmIGNvbW1hbmRfbGluZShzZWxmLCBzaGVsbD1GYWxzZSk6CiAg\nICAgICAgYXJncyA9IFtdCgogICAgICAgIGlmIHNlbGYuX2NtZF9hcmdzOgogICAgICAgICAgICBh\ncmdzLmV4dGVuZChzZWxmLl9jbWRfYXJncykKCiAgICAgICAgaWYgJ3N1ZG8nIGluIGFyZ3M6CiAg\nICAgICAgICAgIGFyZ3NbMDoxXSA9IFthbGlhc2VzLmdldCgnc3VkbycpXQoKICAgICAgICBiaW5h\ncnkgPSBzZWxmLl9iaW5hcnkKICAgICAgICBpZiBzZWxmLl9jbWRfYXJnc1s6MV0gPT0gWydzc2gn\nXToKICAgICAgICAgICAgY21kID0gJyVzICVzJyAlIChiaW5hcnksICcgJy5qb2luKHNlbGYuYXJn\ncykpCiAgICAgICAgICAgIGNtZCA9IGNtZC5zdHJpcCgpCiAgICAgICAgICAgIGlmICgnfCcgaW4g\nY21kIG9yICc+JyBpbiBjbWQpIGFuZCBzaGVsbDoKICAgICAgICAgICAgICAgIGNtZCA9IHJlcHIo\nc3RyKGNtZCkpCiAgICAgICAgICAgIGFyZ3MuYXBwZW5kKGNtZCkKICAgICAgICBlbHNlOgogICAg\nICAgICAgICBhcmdzLmV4dGVuZChiaW5hcnkuc3BsaXQoKSkKICAgICAgICAgICAgaWYgaXNpbnN0\nYW5jZShzZWxmLmFyZ3MsIGxpc3QpOgogICAgICAgICAgICAgICAgZm9yIGEgaW4gc2VsZi5hcmdz\nOgogICAgICAgICAgICAgICAgICAgIGFyZ3MuZXh0ZW5kKGEuc3BsaXQoKSkKICAgICAgICAgICAg\nZWxzZToKICAgICAgICAgICAgICAgIGFyZ3MuZXh0ZW5kKHNlbGYuYXJncy5zcGxpdCgiICIpKQoK\nICAgICAgICBhcmdzID0gW2EgZm9yIGEgaW4gYXJncyBpZiBhXQoKICAgICAgICBpZiBzaGVsbDoK\nICAgICAgICAgICAgcmV0dXJuICcgJy5qb2luKGFyZ3MpCiAgICAgICAgcmV0dXJuIGFyZ3MKCiAg\nICBAcHJvcGVydHkKICAgIGRlZiBjb21tYW5kc19saW5lKHNlbGYpOgogICAgICAgIGNtZHMgPSBb\nXQogICAgICAgIGZvciBjbWQgaW4gc2VsZi5jb21tYW5kczoKICAgICAgICAgICAgaWYgaXNpbnN0\nYW5jZShjbWQsIFN0ZGluKToKICAgICAgICAgICAgICAgIHMgPSAnc3RkaW4nCiAgICAgICAgICAg\nIGVsaWYgaXNpbnN0YW5jZShjbWQsIFB5UGlwZSk6CiAgICAgICAgICAgICAgICBzID0gJyVzKCkn\nICUgY21kLl9fY2xhc3NfXy5fX25hbWVfXwogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAg\nICAgcyA9IGNtZC5jb21tYW5kX2xpbmUoc2hlbGw9VHJ1ZSkKICAgICAgICAgICAgY21kcy5hcHBl\nbmQocy5zdHJpcCgpKQogICAgICAgIHJldHVybiBzdHIoJyB8ICcuam9pbihjbWRzKSkKCiAgICBA\ncHJvcGVydHkKICAgIGRlZiBzdGRvdXQoc2VsZik6CiAgICAgICAgIiIic3RhbmRhcmQgb3V0cHV0\nIG9mIHRoZSBwaXBlLiBBIGZpbGUgZGVzY3JpcHRvciBvciBhbiBpdGVyYXJvciIiIgogICAgICAg\nIHAgPSBOb25lCiAgICAgICAgc2VsZi5wcm9jZXNzZXMgPSBbXQogICAgICAgIHNlbGYuX3N0ZGVy\nciA9IE5vbmUKICAgICAgICBzdGRpbiA9IHN5cy5zdGRpbgogICAgICAgIGNtZHMgPSBzZWxmLmNv\nbW1hbmRzCgogICAgICAgIGlmIFtjIGZvciBjIGluIGNtZHMgaWYgYy5fY21kX2FyZ3NbOjFdID09\nIFsnc3VkbyddXToKICAgICAgICAgICAgY2hlY2tfc3VkbygpCgogICAgICAgIGZvciBjbWQgaW4g\nY21kczoKICAgICAgICAgICAgaWYgaXNpbnN0YW5jZShjbWQsIFN0ZGluKToKICAgICAgICAgICAg\nICAgIHN0ZGluID0gY21kLml0ZXJfc3Rkb3V0CiAgICAgICAgICAgIGVsaWYgaXNpbnN0YW5jZShj\nbWQsIFB5UGlwZSk6CiAgICAgICAgICAgICAgICBjbWQuc3RkaW4gPSBwLnN0ZG91dAogICAgICAg\nICAgICAgICAgc3RkaW4gPSBjbWQuaXRlcl9zdGRvdXQKICAgICAgICAgICAgZWxzZToKICAgICAg\nICAgICAgICAgIGFyZ3MgPSBjbWQuY29tbWFuZF9saW5lKGNtZC5rd2FyZ3MuZ2V0KCdzaGVsbCcs\nIEZhbHNlKSkKCiAgICAgICAgICAgICAgICBrd2FyZ3MgPSBkaWN0KAogICAgICAgICAgICAgICAg\nICAgIHN0ZGluPXN0ZGluLCBzdGRlcnI9UElQRSwKICAgICAgICAgICAgICAgICAgICBzdGRvdXQ9\nUElQRQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIGt3YXJncy51cGRhdGUo\nY21kLmt3YXJncykKICAgICAgICAgICAgICAgIGVudl8gPSBrd2FyZ3MucG9wKCdlbnYnLCBlbnYp\nCgogICAgICAgICAgICAgICAgbG9nLmRlYnVnKCdQb3BlbiglciwgKiolciknLCBhcmdzLCBrd2Fy\nZ3MpCgogICAgICAgICAgICAgICAga3dhcmdzWydlbnYnXSA9IGVudl8KCiAgICAgICAgICAgICAg\nICB0cnk6CiAgICAgICAgICAgICAgICAgICAgcCA9IFBvcGVuKGFyZ3MsICoqa3dhcmdzKQogICAg\nICAgICAgICAgICAgZXhjZXB0IE9TRXJyb3I6CiAgICAgICAgICAgICAgICAgICAgc2VsZi5fcmFp\nc2UoKQoKICAgICAgICAgICAgICAgIHNlbGYucHJvY2Vzc2VzLmFwcGVuZChwKQogICAgICAgICAg\nICAgICAgc3RkaW4gPSBwLnN0ZG91dAogICAgICAgIHJldHVybiBzdGRpbgoKICAgIEBjbGFzc21l\ndGhvZAogICAgZGVmIG1hcChjbHMsIGFyZ3MsCiAgICAgICAgICAgIHBvb2xfc2l6ZT1Ob25lLCBz\ndG9wX29uX2ZhaWx1cmU9RmFsc2UsICoqa3dhcmdzKToKICAgICAgICAiIiJSdW4gYSBiYXRjaCBv\nZiB0aGUgc2FtZSBjb21tYW5kIGFuZCBtYW5hZ2UgYSBwb29sIG9mIHByb2Nlc3NlcyBmb3IKICAg\nICAgICB5b3UiIiIKICAgICAgICBrdyA9IGRpY3QoCiAgICAgICAgICAgIHN0ZGluPXN5cy5zdGRp\nbiwgc3RkZXJyPVBJUEUsCiAgICAgICAgICAgIHN0ZG91dD1QSVBFCiAgICAgICAgICAgICkKICAg\nICAgICBrdy51cGRhdGUoa3dhcmdzKQogICAgICAgIGlmIHBvb2xfc2l6ZSBpcyBOb25lOgogICAg\nICAgICAgICBpbXBvcnQgbXVsdGlwcm9jZXNzaW5nCiAgICAgICAgICAgIHBvb2xfc2l6ZSA9IG11\nbHRpcHJvY2Vzc2luZy5jcHVfY291bnQoKQogICAgICAgIHJlc3VsdHMgPSBbTm9uZV0gKiBsZW4o\nYXJncykKICAgICAgICBwcm9jZXNzZXMgPSBbXQogICAgICAgIGluZGV4ID0gMAogICAgICAgIG91\ndF9pbmRleCA9IDAKICAgICAgICB3aGlsZSBhcmdzIG9yIHByb2Nlc3NlczoKICAgICAgICAgICAg\naWYgYXJncyBhbmQgbGVuKHByb2Nlc3NlcykgPCBwb29sX3NpemU6CiAgICAgICAgICAgICAgICBh\nID0gYXJncy5wb3AoMCkKICAgICAgICAgICAgICAgIGlmIG5vdCBpc2luc3RhbmNlKGEsIGxpc3Qp\nOgogICAgICAgICAgICAgICAgICAgIGEgPSBbYV0KICAgICAgICAgICAgICAgIGNtZCA9IGNscygq\nYSkKICAgICAgICAgICAgICAgIGEgPSBjbWQuY29tbWFuZF9saW5lKGNtZC5rd2FyZ3MuZ2V0KCdz\naGVsbCcsIEZhbHNlKSkKICAgICAgICAgICAgICAgIHByb2Nlc3Nlcy5hcHBlbmQoKGluZGV4LCBj\nbWQsIFBvcGVuKGEsICoqa3cpKSkKICAgICAgICAgICAgICAgIGluZGV4ICs9IDEKICAgICAgICAg\nICAgZm9yIGksIGNtZCwgcCBpbiBwcm9jZXNzZXM6CiAgICAgICAgICAgICAgICByZXN1bHQgPSBw\nLnBvbGwoKQogICAgICAgICAgICAgICAgaWYgcmVzdWx0IGlzIG5vdCBOb25lOgogICAgICAgICAg\nICAgICAgICAgIG91dHB1dCA9IFN0ZG91dChwLnN0ZG91dC5yZWFkKCkpCiAgICAgICAgICAgICAg\nICAgICAgb3V0cHV0LnN0ZGVyciA9IHAuc3RkZXJyLnJlYWQoKQogICAgICAgICAgICAgICAgICAg\nIG91dHB1dC5yZXR1cm5jb2RlcyA9IFtyZXN1bHRdCiAgICAgICAgICAgICAgICAgICAgb3V0cHV0\nLmZhaWxlZCA9IGJvb2wocmVzdWx0KQogICAgICAgICAgICAgICAgICAgIG91dHB1dC5zdWNjZWVk\nZWQgPSBub3Qgb3V0cHV0LmZhaWxlZAogICAgICAgICAgICAgICAgICAgIHJlc3VsdHNbaV0gPSBv\ndXRwdXQKICAgICAgICAgICAgICAgICAgICBwcm9jZXNzZXMucmVtb3ZlKChpLCBjbWQsIHApKQog\nICAgICAgICAgICAgICAgICAgIGlmIG91dF9pbmRleCA9PSBpOgogICAgICAgICAgICAgICAgICAg\nICAgICBvdXRfaW5kZXggKz0gMQogICAgICAgICAgICAgICAgICAgICAgICB5aWVsZCByZXN1bHRz\nW2ldCiAgICAgICAgICAgICAgICAgICAgaWYgcmVzdWx0ID4gMCBhbmQgc3RvcF9vbl9mYWlsdXJl\nOgogICAgICAgICAgICAgICAgICAgICAgICBhcmdzID0gTm9uZQogICAgICAgICAgICAgICAgICAg\nICAgICBmb3IgaW5kZXgsIGNtZCwgcCBpbiBwcm9jZXNzZXM6CiAgICAgICAgICAgICAgICAgICAg\nICAgICAgICBpZiBwLnBvbGwoKSBpcyBOb25lOgogICAgICAgICAgICAgICAgICAgICAgICAgICAg\nICAgIHAua2lsbCgpCiAgICAgICAgICAgICAgICAgICAgICAgIGNtZC5fcmFpc2Uob3V0cHV0PW91\ndHB1dCkKICAgICAgICAgICAgdGltZS5zbGVlcCguMSkKICAgICAgICBpZiBvdXRfaW5kZXggPCBs\nZW4ocmVzdWx0cyk6CiAgICAgICAgICAgIHlpZWxkIHJlc3VsdHNbb3V0X2luZGV4XQogICAgICAg\nICAgICBvdXRfaW5kZXggKz0gMQoKICAgIGRlZiBfX2dldGl0ZW1fXyhzZWxmLCBpdGVtKToKICAg\nICAgICBpZiBub3QgaXNpbnN0YW5jZShpdGVtLCBzbGljZSk6CiAgICAgICAgICAgIHJhaXNlIEtl\neUVycm9yKCdZb3UgY2FuIG9ubHkgdXNlIHNsaWNlcycpCiAgICAgICAgY21kcyA9IHNlbGYuY29t\nbWFuZHMKICAgICAgICBjbWRzID0gW2RlZXBjb3B5KGNtZCkgZm9yIGNtZCBpbiBjbWRzW2l0ZW1d\nXQogICAgICAgIHJldHVybiBzZWxmLl9vcmRlcihjbWRzKVstMV0KCiAgICBkZWYgX19nZXRzbGlj\nZV9fKHNlbGYsIHN0YXJ0LCBzdG9wKToKICAgICAgICBjbWRzID0gc2VsZi5jb21tYW5kcwogICAg\nICAgIGNtZHMgPSBbZGVlcGNvcHkoY21kKSBmb3IgY21kIGluIGNtZHNbc3RhcnQ6c3RvcF1dCiAg\nICAgICAgcmV0dXJuIHNlbGYuX29yZGVyKGNtZHMpWy0xXQoKICAgIGRlZiBfX2l0ZXJfXyhzZWxm\nKToKICAgICAgICBmb3IgbGluZSBpbiBzZWxmLnN0ZG91dDoKICAgICAgICAgICAgeWllbGQgc2Vs\nZi5fZGVjb2RlKGxpbmUpCgogICAgZGVmIF9fY2FsbF9fKHNlbGYsICoqa3dhcmdzKToKICAgICAg\nICBpZiBzZWxmLl9kb25lIGFuZCBzZWxmLl9zdGRvdXQgaXMgbm90IE5vbmU6CiAgICAgICAgICAg\nIHJldHVybiBzZWxmLl9zdGRvdXQKICAgICAgICBmb3IgY21kIGluIHNlbGYuY29tbWFuZHM6CiAg\nICAgICAgICAgIGlmIGt3YXJncy5nZXQoJ3NoZWxsJyk6CiAgICAgICAgICAgICAgICBjbWQua3dh\ncmdzWydzaGVsbCddID0gVHJ1ZQogICAgICAgICAgICBpZiBrd2FyZ3MuZ2V0KCdjb21iaW5lX3N0\nZGVycicpOgogICAgICAgICAgICAgICAgY21kLmt3YXJnc1snc3RkZXJyJ10gPSBTVERPVVQKICAg\nICAgICBzdGRvdXQgPSBzZWxmLnN0ZG91dAogICAgICAgIGlmIHN0ZG91dCBpcyBub3QgTm9uZToK\nICAgICAgICAgICAgaWYgaGFzYXR0cihzdGRvdXQsICdyZWFkJyk6CiAgICAgICAgICAgICAgICBv\ndXRwdXQgPSBzdGRvdXQucmVhZCgpLnJzdHJpcCgpCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAg\nICAgICAgICBvdXRwdXQgPSBiJycuam9pbihsaXN0KHN0ZG91dCkpLnJzdHJpcCgpCiAgICAgICAg\nICAgIG91dHB1dCA9IHNlbGYuX2RlY29kZShvdXRwdXQpCiAgICAgICAgZWxzZToKICAgICAgICAg\nICAgb3V0cHV0ID0gJycKICAgICAgICBvdXRwdXQgPSBzZWxmLl9nZXRfc3Rkb3V0KG91dHB1dCkK\nICAgICAgICBpZiBzZWxmLl9kb25lOgogICAgICAgICAgICBzZWxmLl9zdGRvdXQgPSBvdXRwdXQK\nICAgICAgICByZXR1cm4gb3V0cHV0CgogICAgX19zdHJfXyA9IF9fY2FsbF9fCgogICAgZGVmIF9f\nZ3RfXyhzZWxmLCBmaWxlbmFtZSk6CiAgICAgICAgcmV0dXJuIHNlbGYuX3dyaXRlKGZpbGVuYW1l\nLCAnd2IrJykKCiAgICBkZWYgX19yc2hpZnRfXyhzZWxmLCBmaWxlbmFtZSk6CiAgICAgICAgcmV0\ndXJuIHNlbGYuX3dyaXRlKGZpbGVuYW1lLCAnYWIrJykKCiAgICBkZWYgX19vcl9fKHNlbGYsIG90\naGVyKToKICAgICAgICBpZiBpc2luc3RhbmNlKG90aGVyLmNvbW1hbmRzLCBwcm9wZXJ0eSk6CiAg\nICAgICAgICAgIG90aGVyID0gb3RoZXIoKQogICAgICAgIGlmIGlzaW5zdGFuY2Uoc2VsZiwgU3Rk\naW4pOgogICAgICAgICAgICBmaXJzdCA9IG90aGVyLmNvbW1hbmRzWzBdCiAgICAgICAgICAgIGZp\ncnN0LnByZXZpb3VzID0gc2VsZgogICAgICAgICAgICByZXR1cm4gb3RoZXIKICAgICAgICBjbWRz\nID0gZGVlcGNvcHkoc2VsZi5jb21tYW5kcykgKyBkZWVwY29weShvdGhlci5jb21tYW5kcykKICAg\nICAgICBjbWRzID0gc2VsZi5fb3JkZXIoY21kcykKICAgICAgICBvdGhlciA9IGNtZHNbLTFdCiAg\nICAgICAgcmV0dXJuIG90aGVyCgogICAgZGVmIF9fYm9vbF9fKHNlbGYpOgogICAgICAgIHJldHVy\nbiBub3Qgc2VsZi5mYWlsZWQKICAgIF9fbm9uemVyb19fID0gX19ib29sX18KCiAgICBkZWYgX19k\nZWVwY29weV9fKHNlbGYsICphcmdzKToKICAgICAgICByZXR1cm4gc2VsZi5fX2NsYXNzX18oKnNl\nbGYuYXJncywgKipzZWxmLmt3YXJncykKCiAgICBkZWYgX19yZXByX18oc2VsZik6CiAgICAgICAg\ncmV0dXJuIHJlcHIoc2VsZi5jb21tYW5kc19saW5lKQoKICAgIGRlZiBfb3JkZXIoc2VsZiwgY21k\ncyk6CiAgICAgICAgaWYgY21kczoKICAgICAgICAgICAgY21kc1swXS5wcmV2aW91cyA9IE5vbmUK\nICAgICAgICAgICAgZm9yIGkgaW4gcmFuZ2UobGVuKGNtZHMpIC0gMSwgMCwgLTEpOgogICAgICAg\nICAgICAgICAgY21kc1tpXS5wcmV2aW91cyA9IGNtZHNbaSAtIDFdCiAgICAgICAgcmV0dXJuIGNt\nZHMKCiAgICBkZWYgX3dyaXRlX3RvKHNlbGYsIGZkKToKICAgICAgICBpZiBub3QgaXNpbnN0YW5j\nZShzZWxmLCBQeVBpcGUpOgogICAgICAgICAgICBzZWxmLmt3YXJnc1snc3Rkb3V0J10gPSBmZAog\nICAgICAgICAgICByZXR1cm4gc2VsZi5fX2NhbGxfXygpCiAgICAgICAgZWxzZToKICAgICAgICAg\nICAgZm9yIGxpbmUgaW4gc2VsZi5zdGRvdXQ6CiAgICAgICAgICAgICAgICBmZC53cml0ZShsaW5l\nKQogICAgICAgICAgICByZXR1cm4gc2VsZi5fZ2V0X3N0ZG91dCgnJykKCiAgICBkZWYgX3dyaXRl\nKHNlbGYsIGZpbGVuYW1lLCBtb2RlKToKICAgICAgICBpZiBpc2luc3RhbmNlKGZpbGVuYW1lLCBp\nbnQpOgogICAgICAgICAgICBpZiBmaWxlbmFtZSA9PSAyOgogICAgICAgICAgICAgICAgZmQgPSBz\nZWxmLl9zeXNfc3RkZXJyCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmZCA9IHNl\nbGYuX3N5c19zdGRvdXQKICAgICAgICAgICAgb3V0cHV0ID0gc2VsZi5fd3JpdGVfdG8oZmQpCiAg\nICAgICAgZWxzZToKICAgICAgICAgICAgd2l0aCBvcGVuKGZpbGVuYW1lLCBtb2RlKSBhcyBmZDoK\nICAgICAgICAgICAgICAgIG91dHB1dCA9IHNlbGYuX3dyaXRlX3RvKGZkKQogICAgICAgIGlmIG91\ndHB1dC5mYWlsZWQ6CiAgICAgICAgICAgIHNlbGYuX3JhaXNlKG91dHB1dD1vdXRwdXQpCiAgICAg\nICAgcmV0dXJuIG91dHB1dAoKICAgIGRlZiBfZGVjb2RlKHNlbGYsIG91dHB1dCk6CiAgICAgICAg\naWYgc2l4LlBZMyBhbmQgbm90IGlzaW5zdGFuY2Uob3V0cHV0LCBzaXgudGV4dF90eXBlKToKICAg\nICAgICAgICAgb3V0cHV0ID0gb3V0cHV0LmRlY29kZShzZWxmLmVuY29kaW5nKQogICAgICAgIHJl\ndHVybiBvdXRwdXQKCiAgICBkZWYgX2dldF9zdGRvdXQoc2VsZiwgc3Rkb3V0KToKICAgICAgICBp\nZiBub3Qgc2l4LlBZMyBhbmQgbm90IGlzaW5zdGFuY2Uoc3Rkb3V0LCBzaXguYmluYXJ5X3R5cGUp\nOgogICAgICAgICAgICBzdGRvdXQgPSBzdGRvdXQuZW5jb2RlKHNlbGYuZW5jb2RpbmcpCiAgICAg\nICAgb3V0cHV0ID0gU3Rkb3V0KHN0ZG91dCkKICAgICAgICBvdXRwdXQuc3RkZXJyID0gc2VsZi5z\ndGRlcnIKICAgICAgICBvdXRwdXQucmV0dXJuY29kZXMgPSBzZWxmLnJldHVybmNvZGVzCiAgICAg\nICAgb3V0cHV0LmZhaWxlZCA9IGJvb2wob3V0cHV0LnJldHVybmNvZGVzKQogICAgICAgIG91dHB1\ndC5zdWNjZWVkZWQgPSBub3Qgb3V0cHV0LmZhaWxlZAogICAgICAgIHJldHVybiBvdXRwdXQKCiAg\nICBkZWYgX3JhaXNlKHNlbGYsIG91dHB1dD1Ob25lKToKICAgICAgICBpZiBub3QgbG9nLmhhbmRs\nZXJzOgogICAgICAgICAgICBsb2dnaW5nLmJhc2ljQ29uZmlnKHN0cmVhbT1zeXMuc3RkZXJyKQog\nICAgICAgIGlmIG91dHB1dCBpcyBub3QgTm9uZToKICAgICAgICAgICAgaWYgb3V0cHV0LnN0ZGVy\ncjoKICAgICAgICAgICAgICAgIGxvZy5lcnJvcihvdXRwdXQuc3RkZXJyKQogICAgICAgICAgICBy\nYWlzZSBPU0Vycm9yKHNlbGYuY29tbWFuZHNfbGluZSwgb3V0cHV0LnN0ZGVycikKICAgICAgICBy\nYWlzZSBPU0Vycm9yKHNlbGYuY29tbWFuZHNfbGluZSkKCgpjbGFzcyBTdGRpbihQaXBlKToKICAg\nICIiIlVzZWQgdG8gaW5qZWN0IHNvbWUgZGF0YSBpbiB0aGUgcGlwZSIiIgoKICAgIHN0ZGVyciA9\nICcnCiAgICByZXR1cm5jb2RlcyA9IFtdCgogICAgZGVmIF9faW5pdF9fKHNlbGYsIHZhbHVlKToK\nICAgICAgICBzdXBlcihTdGRpbiwgc2VsZikuX19pbml0X18oKQogICAgICAgIHNlbGYudmFsdWUg\nPSB2YWx1ZQogICAgICAgIHNlbGYuX3N0ZGluID0gTm9uZQoKICAgIEBwcm9wZXJ0eQogICAgZGVm\nIGl0ZXJfc3Rkb3V0KHNlbGYpOgogICAgICAgIGlmIGhhc2F0dHIoc2VsZi52YWx1ZSwgJ3NlZWsn\nKToKICAgICAgICAgICAgc2VsZi52YWx1ZS5zZWVrKDApCiAgICAgICAgaWYgaGFzYXR0cihzZWxm\nLnZhbHVlLCAnZmlsZW5vJyk6CiAgICAgICAgICAgIHIgPSBzZWxmLnZhbHVlCiAgICAgICAgZWxz\nZToKICAgICAgICAgICAgaWYgaGFzYXR0cihzZWxmLnZhbHVlLCAncmVhZCcpOgogICAgICAgICAg\nICAgICAgdmFsdWUgPSBzZWxmLnZhbHVlLnJlYWQoKQogICAgICAgICAgICBlbHNlOgogICAgICAg\nICAgICAgICAgaWYgbm90IGlzaW5zdGFuY2Uoc2VsZi52YWx1ZSwgc2l4LmJpbmFyeV90eXBlKToK\nICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IHNpeC5iKHNlbGYudmFsdWUpCiAgICAgICAgICAg\nICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIHZhbHVlID0gc2VsZi52YWx1ZQogICAgICAg\nICAgICByLCB3ID0gb3MucGlwZSgpCiAgICAgICAgICAgIGZkID0gb3MuZmRvcGVuKHcsICd3Yicp\nCiAgICAgICAgICAgIGZkLndyaXRlKHZhbHVlKQogICAgICAgICAgICBmZC5jbG9zZSgpCiAgICAg\nICAgcmV0dXJuIHIKCiAgICBkZWYgX19kZWVwY29weV9fKHNlbGYsICphcmdzKToKICAgICAgICBy\nZXR1cm4gc2VsZi5fX2NsYXNzX18oc2VsZi52YWx1ZSkKCiAgICBkZWYgX3dyaXRlKHNlbGYsIGZp\nbGVuYW1lLCBtb2RlKToKICAgICAgICB3aXRoIG9wZW4oZmlsZW5hbWUsIG1vZGUpIGFzIGZkOgog\nICAgICAgICAgICBpZiBoYXNhdHRyKHNlbGYudmFsdWUsICdzZWVrJyk6CiAgICAgICAgICAgICAg\nICBzZWxmLnZhbHVlLnNlZWsoMCkKICAgICAgICAgICAgaWYgaGFzYXR0cihzZWxmLnZhbHVlLCAn\ncmVhZCcpOgogICAgICAgICAgICAgICAgc2h1dGlsLmNvcHlmaWxlb2JqKHNlbGYudmFsdWUsIGZk\nKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgZmQud3JpdGUoc2VsZi52YWx1ZSkK\nICAgICAgICByZXR1cm4gc2VsZi5fZ2V0X3N0ZG91dCgnJykKCgpjbGFzcyBTdGRvdXQoc3RyKToK\nICAgICIiIkEgc3RyaW5nIHdpdGggZXh0cmEgYXR0cmlidXRlczoKCiAgICAtIHN1Y2NlZWRlZAog\nICAgLSBmYWlsZWQKICAgIC0gc3Rkb3V0CiAgICAtIHN0ZGVycgogICAgIiIiCgogICAgQHByb3Bl\ncnR5CiAgICBkZWYgc3Rkb3V0KHNlbGYpOgogICAgICAgIHJldHVybiBzdHIoc2VsZikKCgpjbGFz\ncyBQeVBpcGUoUGlwZSk6CgogICAgQHByb3BlcnR5CiAgICBkZWYgaXRlcl9zdGRvdXQoc2VsZik6\nCiAgICAgICAgcmV0dXJuIHNlbGYuZnVuYyhzZWxmLnN0ZGluKQoKICAgIGRlZiBfX2RlZXBjb3B5\nX18oc2VsZiwgKmFyZ3MpOgogICAgICAgIHJldHVybiBzaC53cmFwcyhzZWxmLmZ1bmMpCgoKY2xh\nc3MgQmFzZShvYmplY3QpOgogICAgbm90X3BpcGVkID0gW3N0cihjKSBmb3IgYyBpbiBfX25vdF9w\naXBlZF9fXQoKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBuYW1lLCAqY21kX2FyZ3MpOgogICAgICAg\nIHNlbGYuX19uYW1lX18gPSBuYW1lCiAgICAgICAgc2VsZi5fY21kcyA9IHt9CiAgICAgICAgc2Vs\nZi5fY21kX2FyZ3MgPSBbXQogICAgICAgIGlmIGNtZF9hcmdzOgogICAgICAgICAgICBzZWxmLl9j\nbWRfYXJncyA9IFtuYW1lXSArIGxpc3QoY21kX2FyZ3MpCgogICAgZGVmIHNldF9kZWJ1ZyhzZWxm\nLCBlbmFibGU9VHJ1ZSk6CiAgICAgICAgaWYgZW5hYmxlOgogICAgICAgICAgICBsb2cuc2V0TGV2\nZWwobG9nZ2luZy5ERUJVRykKICAgICAgICAgICAgbG9nLmFkZEhhbmRsZXIobG9nZ2luZy5TdHJl\nYW1IYW5kbGVyKHN5cy5zdGRvdXQpKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGxvZy5zZXRM\nZXZlbChsb2dnaW5nLklORk8pCgogICAgZGVmIF9fZ2V0YXR0cl9fKHNlbGYsIGF0dHIpOgogICAg\nICAgIGF0dHIgPSBzdHIoYXR0cikKICAgICAgICBpZiBhdHRyIG5vdCBpbiBzZWxmLl9jbWRzOgog\nICAgICAgICAgICBrdyA9IGRpY3QoX2NodXQ9c2VsZiwKICAgICAgICAgICAgICAgICAgICAgIF9i\naW5hcnk9c3RyKGFsaWFzZXMuZ2V0KGF0dHIsIGF0dHIpKSwKICAgICAgICAgICAgICAgICAgICAg\nIF9jbWRfYXJncz1zZWxmLl9jbWRfYXJncywKICAgICAgICAgICAgICAgICAgICAgIF9waXBlPVRy\ndWUpCiAgICAgICAgICAgIGlmIGF0dHIgaW4gc2VsZi5ub3RfcGlwZWQ6CiAgICAgICAgICAgICAg\nICBrd1snX3BpcGUnXSA9IEZhbHNlCiAgICAgICAgICAgIHNlbGYuX2NtZHNbYXR0cl0gPSB0eXBl\nKGF0dHIsIChQaXBlLCksIGt3KQogICAgICAgIHJldHVybiBzZWxmLl9jbWRzW2F0dHJdCgogICAg\nX19nZXRpdGVtX18gPSBfX2dldGF0dHJfXwoKICAgIGRlZiBfX3JlcHJfXyhzZWxmKToKICAgICAg\nICByZXR1cm4gJzwlcz4nICUgc2VsZi5fX25hbWVfXwoKCmNsYXNzIENodXQoQmFzZSk6CgogICAg\ncGF0aCA9IHBvc2l4cGF0aAoKICAgIGRlZiB3cmFwcyhzZWxmLCBmdW5jKToKICAgICAgICByZXR1\ncm4gdHlwZShmdW5jLl9fbmFtZV9fLCAoUHlQaXBlLCksIHsnZnVuYyc6IHN0YXRpY21ldGhvZChm\ndW5jKX0pKCkKCiAgICBAY29udGV4dG1hbmFnZXIKICAgIGRlZiBwaXBlcyhzZWxmLCBjbWQpOgog\nICAgICAgIHRyeToKICAgICAgICAgICAgeWllbGQgY21kCiAgICAgICAgZmluYWxseToKICAgICAg\nICAgICAgaWYgY21kLnJldHVybmNvZGVzOgogICAgICAgICAgICAgICAgc3RkZXJyID0gY21kLnN0\nZGVycgogICAgICAgICAgICAgICAgbG9nLmVycm9yKCdFcnJvciB3aGlsZSBydW5uaW5nICVyXG4l\ncycsIGNtZCwgc3RkZXJyKQogICAgICAgICAgICAgICAgcmFpc2UgT1NFcnJvcihzdGRlcnIpCgog\nICAgZGVmIHBpcGUoc2VsZiwgYmluYXJ5LCAqYXJncywgKiprd2FyZ3MpOgogICAgICAgIHBpcGUg\nPSBnZXRhdHRyKHNlbGYsIHN0cihiaW5hcnkpKQogICAgICAgIHJldHVybiBwaXBlKCphcmdzLCAq\nKmt3YXJncykKCiAgICBkZWYgY2Qoc2VsZiwgZGlyZWN0b3J5KToKICAgICAgICAiIiJDaGFuZ2Ug\ndGhlIGN1cnJlbnQgZGlyZWN0b3J5IiIiCiAgICAgICAgaWYgc2VsZi5fX25hbWVfXyBub3QgaW4g\nKCdzaCcsICdzdWRvJyk6CiAgICAgICAgICAgIHJhaXNlIEltcG9ydEVycm9yKCdZb3UgY2FuIG9u\nbHkgcnVuIGNkIGluIGxvY2FsIGNvbW1hbmRzJykKICAgICAgICBkaXJlY3RvcnkgPSBvcy5wYXRo\nLnJlYWxwYXRoKGRpcmVjdG9yeSkKICAgICAgICBvcy5jaGRpcihkaXJlY3RvcnkpCiAgICAgICAg\nZW52LnB3ZCA9IGRpcmVjdG9yeQoKICAgIGRlZiBwd2Qoc2VsZik6CiAgICAgICAgIiIicmV0dXJu\nIG9zLnBhdGguYWJzcGF0aChvcy5nZXRjd2QoKSkiIiIKICAgICAgICBpZiBzZWxmLl9fbmFtZV9f\nIG5vdCBpbiAoJ3NoJywgJ3N1ZG8nKToKICAgICAgICAgICAgcmFpc2UgSW1wb3J0RXJyb3IoJ1lv\ndSBjYW4gb25seSB1c2UgcHdkIGluIGxvY2FsIGNvbW1hbmRzJykKICAgICAgICByZXR1cm4gb3Mu\ncGF0aC5hYnNwYXRoKG9zLmdldGN3ZCgpKQoKICAgIGRlZiBzdGRpbihzZWxmLCB2YWx1ZSk6CiAg\nICAgICAgcmV0dXJuIFN0ZGluKHZhbHVlKQoKICAgIGRlZiBzc2goc2VsZiwgKmFyZ3MpOgogICAg\nICAgIHJldHVybiBTU0goJ3NzaCcsICphcmdzKQoKCmNsYXNzIENvbW1hbmQoQmFzZSk6CiAgICAi\nIiJBIGNvbW1hbmQgKGxpa2UgdGVzdCkiIiIKCiAgICBkZWYgX19nZXRhdHRyX18oc2VsZiwgYXR0\ncik6CiAgICAgICAgYXR0ciA9IHN0cihhdHRyKQogICAgICAgIGlmIGF0dHIgbm90IGluIHNlbGYu\nX2NtZHM6CiAgICAgICAgICAgIGNtZCA9IHNlbGYuX19uYW1lX18KICAgICAgICAgICAga3cgPSBk\naWN0KF9jaHV0PXNlbGYsCiAgICAgICAgICAgICAgICAgICAgICBfYmluYXJ5PScnLAogICAgICAg\nICAgICAgICAgICAgICAgX2NtZF9hcmdzPVtjbWQsICctJyArIGF0dHJdLAogICAgICAgICAgICAg\nICAgICAgICAgX3BpcGU9VHJ1ZSkKICAgICAgICAgICAgc2VsZi5fY21kc1thdHRyXSA9IHR5cGUo\nc3RyKGNtZCksIChQaXBlLCksIGt3KQogICAgICAgIHJldHVybiBzZWxmLl9jbWRzW2F0dHJdCgoK\nY2xhc3MgU1NIKEJhc2UpOgogICAgIiIiQSBzc2ggc2VydmVyIiIiCgogICAgZGVmIGpvaW4oc2Vs\nZiwgKmFyZ3MpOgogICAgICAgIHJldHVybiAnJXMlcycgJSAoc2VsZiwgcG9zaXhwYXRoLmpvaW4o\nKmFyZ3MpKQoKICAgIEBwcm9wZXJ0eQogICAgZGVmIGhvc3Qoc2VsZik6CiAgICAgICAgcmV0dXJu\nIHNlbGYuX2NtZF9hcmdzWy0xXQoKICAgIGRlZiBfX3N0cl9fKHNlbGYpOgogICAgICAgIHJldHVy\nbiAnJXM6JyAlIHNlbGYuaG9zdAoKICAgIGRlZiBfX2NhbGxfXyhzZWxmLCAqYXJncywgKiprd2Fy\nZ3MpOgogICAgICAgIGNtZHMgPSBbXQogICAgICAgIGZvciBhIGluIGFyZ3M6CiAgICAgICAgICAg\nIGlmIGlzaW5zdGFuY2UoYSwgUGlwZSk6CiAgICAgICAgICAgICAgICBjbWRzLmFwcGVuZChhLmNv\nbW1hbmRzX2xpbmUpCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBjbWRzLmFwcGVu\nZChhKQogICAgICAgIHNydiA9IGdldGF0dHIoU1NIKGFsaWFzZXMuZ2V0KCdzc2gnKSwgKnNlbGYu\nX2NtZF9hcmdzWzE6XSksICcnKQogICAgICAgIHJldHVybiBzcnYoKmNtZHMsICoqa3dhcmdzKQoK\nCmNsYXNzIE1vZHVsZVdyYXBwZXIodHlwZXMuTW9kdWxlVHlwZSk6CiAgICAiIiJ3cmFwIGNodXQg\nYW5kIGFkZCBleHRyYSBhdHRyaWJ1dGVzIGZyb20gY2xhc3NlcyIiIgoKICAgIGRlZiBfX2luaXRf\nXyhzZWxmLCBtb2QsIGNodXQsIG5hbWUpOgogICAgICAgIHNlbGYuX19uYW1lX18gPSBuYW1lCiAg\nICAgICAgZm9yIGF0dHIgaW4gWyJfX2J1aWx0aW5zX18iLCAiX19kb2NfXyIsCiAgICAgICAgICAg\nICAgICAgICAgICJfX3BhY2thZ2VfXyIsICJfX2ZpbGVfXyJdOgogICAgICAgICAgICBzZXRhdHRy\nKHNlbGYsIGF0dHIsIGdldGF0dHIobW9kLCBhdHRyLCBOb25lKSkKICAgICAgICBzZWxmLl9fcGF0\naF9fID0gZ2V0YXR0cihtb2QsICdfX3BhdGhfXycsIFtdKQogICAgICAgIHNlbGYuX190ZXN0X18g\nPSBnZXRhdHRyKG1vZCwgJ19fdGVzdF9fJywge30pCiAgICAgICAgc2VsZi5tb2QgPSBtb2QKICAg\nICAgICBzZWxmLmNodXQgPSBjaHV0CgogICAgZGVmIF9fZ2V0YXR0cl9fKHNlbGYsIGF0dHIpOgog\nICAgICAgIGlmIGF0dHIgPT0gJ19fYWxsX18nOgogICAgICAgICAgICBpZiBzZWxmLl9fbmFtZV9f\nID09ICdjaHV0JzoKICAgICAgICAgICAgICAgIHJldHVybiBbc3RyKGMpIGZvciBjIGluIF9fYWxs\nX19dCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICByYWlzZSBJbXBvcnRFcnJvcign\nWW91IGNhbnQgaW1wb3J0IHRoaW5ncyB0aGF0IGRvZXMgbm90IGV4aXN0JykKICAgICAgICBpZiBo\nYXNhdHRyKHNlbGYubW9kLCBhdHRyKToKICAgICAgICAgICAgcmV0dXJuIGdldGF0dHIoc2VsZi5t\nb2QsIGF0dHIpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIGdldGF0dHIoc2VsZi5j\naHV0LCBhdHRyKQoKICAgIF9fZ2V0aXRlbV9fID0gX19nZXRhdHRyX18KCgplbnYgPSBFbnZpcm9u\nKG9zLmVudmlyb24uY29weSgpKQpzaCA9IENodXQoJ3NoJykKc3VkbyA9IENodXQoJ3N1ZG8nLCAn\nLXMnKQp0ZXN0ID0gQ29tbWFuZCgndGVzdCcpCgoKZGVmIHdyYXBzX21vZHVsZShtb2QpOgogICAg\nc3lzLm1vZHVsZXNbJ2NodXQnXSA9IE1vZHVsZVdyYXBwZXIobW9kLCBzaCwgJ2NodXQnKQogICAg\nc3lzLm1vZHVsZXNbJ2NodXQuc3VkbyddID0gTW9kdWxlV3JhcHBlcihtb2QsIHN1ZG8sICdzdWRv\nJykKCiMgc2NyaXB0IGdlbmVyYXRpb24KClNDUklQVF9IRUFERVIgPSAnJycKIyEvdXNyL2Jpbi9l\nbnYgcHl0aG9uCmltcG9ydCBiYXNlNjQsIGpzb24sIHR5cGVzLCBzeXMKUFkzID0gc3lzLnZlcnNp\nb25faW5mb1swXSA9PSAzCm1vZHMgPSBbXQonJycubHN0cmlwKCkKCkxPQURfTU9EVUxFUyA9ICcn\nJwpmb3IgbmFtZSwgY29kZSBpbiBtb2RzOgogICAgaWYgUFkzOgogICAgICAgIGlmIGlzaW5zdGFu\nY2UoY29kZSwgc3RyKToKICAgICAgICAgICAgY29kZSA9IGNvZGUuZW5jb2RlKCd1dGYtOCcpCiAg\nICBlbHNlOgogICAgICAgIG5hbWUgPSBieXRlcyhuYW1lKQogICAgY29kZSA9IGJhc2U2NC5kZWNv\nZGVzdHJpbmcoY29kZSkKICAgIG1vZCA9IHR5cGVzLk1vZHVsZVR5cGUobmFtZSkKICAgIGdsb2Jz\nID0gZGljdCgpCiAgICBpZiBQWTM6CiAgICAgICAgaWYgaXNpbnN0YW5jZShjb2RlLCBieXRlcyk6\nCiAgICAgICAgICAgIGNvZGUgPSBjb2RlLmRlY29kZSgndXRmLTgnKQogICAgICAgIGV4ZWMoY29k\nZSwgZ2xvYnMpCiAgICBlbHNlOgogICAgICAgIGV4ZWMoJ2V4ZWMgY29kZSBpbiBnbG9icycpCiAg\nICBtb2QuX19kaWN0X18udXBkYXRlKGdsb2JzKQogICAgaWYgbmFtZSA9PSAnY2h1dCc6CiAgICAg\nICAgbW9kLndyYXBzX21vZHVsZShtb2QpCiAgICBlbHNlOgogICAgICAgIHN5cy5tb2R1bGVzW25h\nbWVdID0gbW9kCgppbXBvcnQgc2l4CicnJy5sc3RyaXAoKQoKCmRlZiBfY29uc29sZV9zY3JpcHQo\nZnVuYywgKipkb2NvcHRzKToKICAgIEBmdW5jdG9vbHMud3JhcHMoZnVuYykKICAgIGRlZiB3cmFw\ncGVyKGFyZ3VtZW50cz1Ob25lKToKICAgICAgICBpZiAnaGVscCcgbm90IGluIGRvY29wdHM6CiAg\nICAgICAgICAgIGRvY29wdHNbJ2hlbHAnXSA9IFRydWUKICAgICAgICBpZiAnZG9jJyBub3QgaW4g\nZG9jb3B0czoKICAgICAgICAgICAgZG9jID0gZ2V0YXR0cihmdW5jLCAnX19kb2NfXycsIE5vbmUp\nCiAgICAgICAgZWxzZToKICAgICAgICAgICAgZG9jID0gZG9jb3B0cy5wb3AoJ2RvYycpCiAgICAg\nICAgaWYgZG9jIGlzIE5vbmU6CiAgICAgICAgICAgIGRvYyA9ICdVc2FnZTogJXByb2cnCiAgICAg\nICAgbmFtZSA9IGZ1bmMuX19uYW1lX18ucmVwbGFjZSgnXycsICctJykKICAgICAgICBkb2MgPSBk\nb2MucmVwbGFjZSgnJXByb2cnLCBuYW1lKS5zdHJpcCgpCiAgICAgICAgZG9jID0gZG9jLnJlcGxh\nY2UoJ1xuICAgICcsICdcbicpCiAgICAgICAgaW1wb3J0IGRvY29wdAogICAgICAgIGlmIGlzaW5z\ndGFuY2UoYXJndW1lbnRzLCBsaXN0KToKICAgICAgICAgICAgZG9jb3B0c1snYXJndiddID0gYXJn\ndW1lbnRzCiAgICAgICAgICAgIGFyZ3VtZW50cyA9IGRvY29wdC5kb2NvcHQoZG9jLCAqKmRvY29w\ndHMpCiAgICAgICAgICAgIHJldHVybiBmdW5jKGFyZ3VtZW50cykKICAgICAgICBlbHNlOgogICAg\nICAgICAgICBhcmd1bWVudHMgPSBkb2NvcHQuZG9jb3B0KGRvYywgKipkb2NvcHRzKQogICAgICAg\nICAgICBzeXMuZXhpdChmdW5jKGFyZ3VtZW50cykpCiAgICB3cmFwcGVyLmNvbnNvbGVfc2NyaXB0\nID0gVHJ1ZQogICAgcmV0dXJuIHdyYXBwZXIKCgpkZWYgY29uc29sZV9zY3JpcHQoKmFyZ3MsICoq\nZG9jb3B0cyk6CiAgICBpZiBub3QgYXJnczoKICAgICAgICBkZWYgd2FpdGluZ19mb3JfZnVuYyhm\ndW5jKToKICAgICAgICAgICAgcmV0dXJuIF9jb25zb2xlX3NjcmlwdChmdW5jLCAqKmRvY29wdHMp\nCiAgICAgICAgcmV0dXJuIHdhaXRpbmdfZm9yX2Z1bmMKICAgIGVsc2U6CiAgICAgICAgcmV0dXJu\nIF9jb25zb2xlX3NjcmlwdChhcmdzWzBdKQoKCmRlZiBlbmNvZGVfbW9kdWxlKG1vZCk6CiAgICBp\nZiBub3QgaGFzYXR0cihtb2QsICdfX2ZpbGVfXycpOgogICAgICAgIG1vZCA9IF9faW1wb3J0X18o\nbW9kKQogICAgZGF0YSA9IGluc3BlY3QuZ2V0c291cmNlKG1vZCkKICAgIGRhdGEgPSBiYXNlNjQu\nZW5jb2Rlc3RyaW5nKHNpeC5iKGRhdGEpKQogICAgcmV0dXJuICdtb2RzLmFwcGVuZCgoJXIsICVy\nKSlcbicgJSAoc3RyKG1vZC5fX25hbWVfXyksIGRhdGEpCgoKZGVmIGdlbmVyYXRlKGFyZ3VtZW50\ncywgZmlsZW5hbWUpOgogICAgaWYgbm90IG9zLnBhdGguaXNmaWxlKGZpbGVuYW1lKToKICAgICAg\nICBtb2QgPSBfX2ltcG9ydF9fKGZpbGVuYW1lLCBnbG9iYWxzKCksIGxvY2FscygpLCBbJyddKQog\nICAgICAgIGZpbGVuYW1lID0gbW9kLl9fZmlsZV9fCiAgICAgICAgbmFtZSA9IG1vZC5fX25hbWVf\nXwogICAgZWxzZToKICAgICAgICBkaXJuYW1lID0gb3MucGF0aC5kaXJuYW1lKGZpbGVuYW1lKQog\nICAgICAgIHN5cy5wYXRoLmluc2VydCgwLCBkaXJuYW1lKQogICAgICAgIG5hbWUgPSBpbnNwZWN0\nLmdldG1vZHVsZW5hbWUoZmlsZW5hbWUpCiAgICAgICAgbW9kID0gX19pbXBvcnRfXyhuYW1lKQoK\nICAgIGZpbGVuYW1lcyA9IFtdCiAgICBmb3IgaywgdiBpbiBtb2QuX19kaWN0X18uaXRlbXMoKToK\nICAgICAgICBpZiBnZXRhdHRyKHYsICdjb25zb2xlX3NjcmlwdCcsIEZhbHNlKSBpcyBUcnVlOgog\nICAgICAgICAgICBmaWxlbmFtZXMuYXBwZW5kKGspCgogICAgaWYgYXJndW1lbnRzWyctLWxpc3Qt\nZW50cnktcG9pbnRzJ106CiAgICAgICAgZm9yIG5hbWUgaW4gZmlsZW5hbWVzOgogICAgICAgICAg\nICBwcmludCgoJyVzID0gJXM6JXMnICUgKG5hbWUucmVwbGFjZSgnXycsICctJyksCiAgICAgICAg\nICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kLl9fbmFtZV9fLCBuYW1lKSkpCiAgICAgICAg\nc3lzLmV4aXQoMCkKCiAgICBkZXN0ID0gb3MucGF0aC5leHBhbmR1c2VyKGFyZ3VtZW50c1snLS1k\nZXN0aW5hdGlvbiddKQogICAgc2gubWtkaXIoJy1wJywgZGVzdCkKCiAgICBtb2R1bGVzID0gWwog\nICAgICAgICdzaXgnLCAnZG9jb3B0JywgJ0NvbmZpZ09iamVjdCcsIHN5cy5tb2R1bGVzW19fbmFt\nZV9fXQogICAgXSArIGFyZ3VtZW50c1snPE1PRFVMRT4nXQogICAgbW9kdWxlcyA9ICcnLmpvaW4o\nW2VuY29kZV9tb2R1bGUobSkgZm9yIG0gaW4gbW9kdWxlc10pCiAgICBmb3IgbmFtZSBpbiBmaWxl\nbmFtZXM6CiAgICAgICAgc2NyaXB0ID0gb3MucGF0aC5qb2luKGRlc3QsIG5hbWUucmVwbGFjZSgn\nXycsICctJykpCiAgICAgICAgd2l0aCBvcGVuKHNjcmlwdCwgJ3cnKSBhcyBmZDoKICAgICAgICAg\nICAgZmQud3JpdGUoU0NSSVBUX0hFQURFUiArIG1vZHVsZXMgKyBMT0FEX01PRFVMRVMpCiAgICAg\nICAgICAgIGZkLndyaXRlKGluc3BlY3QuZ2V0c291cmNlKG1vZCkucmVwbGFjZSgnX19tYWluX18n\nLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ19f\nY2h1dGlmaWVkX18nKSkKICAgICAgICAgICAgZmQud3JpdGUoImlmIF9fbmFtZV9fID09ICdfX21h\naW5fXyc6XG4gICAgJXMoKVxuIiAlIG5hbWUpCiAgICAgICAgZXhlY3V0YWJsZSA9IHNoLmNobW9k\nKCcreCcsIHNjcmlwdCkKICAgICAgICBpZiBleGVjdXRhYmxlOgogICAgICAgICAgICBwcmludChl\neGVjdXRhYmxlLmNvbW1hbmRzX2xpbmUpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcHJpbnQo\nJ2ZhaWxlZCB0byBnZW5lcmF0ZSAlcycgJSBzY3JpcHQpCgoKQGNvbnNvbGVfc2NyaXB0CmRlZiBj\naHV0aWZ5KGFyZ3VtZW50cyk6CiAgICAiIiIKICAgIFVzYWdlOiAlcHJvZyBbLWQgRElSTkFNRV0g\nPGxvY2F0aW9uPiBbPE1PRFVMRT4uLi5dCiAgICAgICAgICAgJXByb2cgPGxvY2F0aW9uPiAoLWwg\nfCAtaCkKCiAgICBHZW5lcmF0ZSBiaW5hcnkgc2NyaXB0cyBmcm9tIGFsbCBAY29uc29sZV9zY3Jp\ncHQgY29udGFpbmVkIGluIDxsb2NhdGlvbj4KICAgIDxsb2NhdGlvbj4gY2FuIGJlIGEgZGlyZWN0\nb3J5LCBhIHB5dGhvbiBmaWxlIG9yIGEgZG90dGVkIG5hbWUuCgogICAgLWgsIC0taGVscCAgICAg\nICAgICAgICAgICAgICAgICAgICBQcmludCB0aGlzIGhlbHAKICAgIC1kIERJUk5BTUUsIC0tZGVz\ndGluYXRpb249RElSTkFNRSAgRGVzdGluYXRpb24gW2RlZmF1bHQ6IGRpc3Qvc2NyaXB0c10KICAg\nIC1sLCAtLWxpc3QtZW50cnktcG9pbnRzICAgICAgICAgICAgTGlzdCBjb25zb2xlIHNjcmlwdCBl\nbnRyeSBwb2ludHMKICAgICIiIgogICAgbG9jYXRpb24gPSBhcmd1bWVudHNbJzxsb2NhdGlvbj4n\nXQogICAgbG9jYXRpb24gPSBvcy5wYXRoLmV4cGFuZHVzZXIobG9jYXRpb24pCiAgICBpZiBvcy5w\nYXRoLmlzZmlsZShsb2NhdGlvbik6CiAgICAgICAgZ2VuZXJhdGUoYXJndW1lbnRzLCBsb2NhdGlv\nbikKICAgIGVsaWYgb3MucGF0aC5pc2Rpcihsb2NhdGlvbik6CiAgICAgICAgZmlsZW5hbWVzID0g\nW10KICAgICAgICBmaWxlbmFtZXMgPSBzaC5ncmVwKCctbFJFIC0taW5jbHVkZT0qLnB5IEAuKmNv\nbnNvbGVfc2NyaXB0JywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uKSB8IHNo\nLmdyZXAoJy12IHNpdGUtcGFja2FnZXMnKQogICAgICAgIGZpbGVuYW1lcyA9IFtzLnN0cmlwKCkg\nZm9yIHMgaW4gZmlsZW5hbWVzXQogICAgICAgIGZvciBmaWxlbmFtZSBpbiBmaWxlbmFtZXM6CiAg\nICAgICAgICAgIGdlbmVyYXRlKGFyZ3VtZW50cywgZmlsZW5hbWUpCiAgICBlbHNlOgogICAgICAg\nIGdlbmVyYXRlKGFyZ3VtZW50cywgbG9jYXRpb24pCgoKaWYgX19uYW1lX18gIT0gJ19fbWFpbl9f\nJzoKICAgIG1vZCA9IHN5cy5tb2R1bGVzW19fbmFtZV9fXQogICAgd3JhcHNfbW9kdWxlKG1vZCkK\n'))
for name, code in mods:
    if PY3:
        if isinstance(code, str):
            code = code.encode('utf-8')
    else:
        name = bytes(name)
    code = base64.decodestring(code)
    mod = types.ModuleType(name)
    globs = dict()
    if PY3:
        if isinstance(code, bytes):
            code = code.decode('utf-8')
        exec(code, globs)
    else:
        exec('exec code in globs')
    mod.__dict__.update(globs)
    if name == 'chut':
        mod.wraps_module(mod)
    else:
        sys.modules[name] = mod

import six
from __future__ import unicode_literals, print_function
import os
import sys
import six
import time
import types
import base64
import shutil
import inspect
import logging
import functools
import posixpath
from subprocess import Popen
from subprocess import PIPE
from subprocess import STDOUT
from copy import deepcopy
from contextlib import contextmanager

__all__ = [
    'console_script', 'sh', 'env', 'stdin', 'test',
    'ls', 'cat', 'grep', 'find', 'cut', 'tr', 'head', 'tail', 'sed', 'awk',
    'nc', 'ping', 'nmap', 'hostname', 'host', 'scp', 'rsync', 'wget', 'curl',
    'cd', 'which', 'mktemp', 'echo', 'wc',
    'tar', 'gzip', 'gunzip', 'zip', 'unzip',
    'vlc', 'ffmpeg', 'convert',
    'virtualenv', 'pip',
    'ssh', 'sudo',
    'path', 'pwd',  # path is posixpath, pwd return os.getcwd()
]

__not_piped__ = ['chmod', 'cp', 'mkdir', 'mv', 'rm', 'rmdir', 'touch']

__all__ += __not_piped__

log = logging.getLogger('chut')

aliases = dict(
    ifconfig='/sbin/ifconfig',
    sudo='/usr/bin/sudo',
    ssh='ssh',
  )


def check_sudo():
    sudo = aliases.get('sudo')
    if not os.path.isfile(sudo):
        raise OSError('sudo is not installed')
    args = [sudo, '-s', 'whoami']
    kwargs = dict(stdout=PIPE, stderr=STDOUT)
    log.debug('Popen(%r, **%r)', args, kwargs)
    whoami = Popen(args, env=env, **kwargs)
    whoami.wait()
    whoami = whoami.stdout.read().strip()
    if whoami != six.b('root'):
        raise OSError('Not able to run sudo.')


class Environ(dict):
    """Manage os.environ"""

    def __getattr__(self, attr):
        value = self.get(attr.upper(), None)
        if attr.lower() in ('path',):
            return value.split(os.pathsep)
        return value

    def __setattr__(self, attr, value):
        if isinstance(value, (list, tuple)):
            value = os.pathsep.join(value)
        self[attr.upper()] = value

    def __call__(self, **kwargs):
        environ = self.__class__(self.copy())
        for k, v in kwargs.items():
            setattr(environ, k, v)
        return environ


class Pipe(object):
    """A pipe object. Represent a set of one or more commands."""

    _chut = None
    _pipe = True
    _cmd_args = []
    _sys_stdout = sys.stdout
    _sys_stderr = sys.stderr

    def __init__(self, *args, **kwargs):
        self._done = False
        self._stdout = None
        self._stderr = None
        self.args = list(args)
        self.previous = None
        self.processes = []
        encoding = kwargs.get('encoding')
        if not encoding:
            encoding = getattr(sys.stdout, 'encoding', None) or 'utf8'
        self.encoding = encoding
        self.kwargs = kwargs
        if 'sh' in kwargs:
            kwargs['shell'] = kwargs.pop('sh')
        if 'combine_stderr' in kwargs:
            kwargs.pop('combine_stderr')
            kwargs['stderr'] = STDOUT
        if 'pipe' in kwargs:
            if not kwargs.pop('pipe'):
                self._call_pipe()
        elif not self._pipe:
            self._call_pipe()

    def _call_pipe(self):
        self._done = True
        ret = self.__call__()
        if ret.failed:
            print(ret.stderr, file=sys.stderr)

    @property
    def returncodes(self):
        """A list of return codes of all processes launched by the pipe"""
        for p in self.processes:
            p.wait()
        codes = [p.poll() for p in self.processes]
        if set(codes) == set([0]):
            return []
        return codes

    @property
    def failed(self):
        """True if one or more process failed"""
        output = self.__call__()
        return output.failed

    @property
    def succeeded(self):
        """True if all processes succeeded"""
        output = self.__call__()
        if output.succeeded:
            return output or True
        return False

    @property
    def stderr(self):
        """combined stderr of all processes"""
        if self._stderr is None:
            stderr = [p.stderr.read() for p in self.processes if p.stderr]
            output = b'\n'.join(stderr).strip()
            if not isinstance(output, six.text_type):
                output = output.decode(self.encoding, 'ignore')
            self._stderr = output
        return self._stderr

    @property
    def commands(self):
        cmds = [self]
        previous = self.previous
        while previous is not None:
            cmds.insert(0, previous)
            previous = previous.previous
        return cmds

    def command_line(self, shell=False):
        args = []

        if self._cmd_args:
            args.extend(self._cmd_args)

        if 'sudo' in args:
            args[0:1] = [aliases.get('sudo')]

        binary = self._binary
        if self._cmd_args[:1] == ['ssh']:
            cmd = '%s %s' % (binary, ' '.join(self.args))
            cmd = cmd.strip()
            if ('|' in cmd or '>' in cmd) and shell:
                cmd = repr(str(cmd))
            args.append(cmd)
        else:
            args.extend(binary.split())
            if isinstance(self.args, list):
                for a in self.args:
                    args.extend(a.split())
            else:
                args.extend(self.args.split(" "))

        args = [a for a in args if a]

        if shell:
            return ' '.join(args)
        return args

    @property
    def commands_line(self):
        cmds = []
        for cmd in self.commands:
            if isinstance(cmd, Stdin):
                s = 'stdin'
            elif isinstance(cmd, PyPipe):
                s = '%s()' % cmd.__class__.__name__
            else:
                s = cmd.command_line(shell=True)
            cmds.append(s.strip())
        return str(' | '.join(cmds))

    @property
    def stdout(self):
        """standard output of the pipe. A file descriptor or an iteraror"""
        p = None
        self.processes = []
        self._stderr = None
        stdin = sys.stdin
        cmds = self.commands

        if [c for c in cmds if c._cmd_args[:1] == ['sudo']]:
            check_sudo()

        for cmd in cmds:
            if isinstance(cmd, Stdin):
                stdin = cmd.iter_stdout
            elif isinstance(cmd, PyPipe):
                cmd.stdin = p.stdout
                stdin = cmd.iter_stdout
            else:
                args = cmd.command_line(cmd.kwargs.get('shell', False))

                kwargs = dict(
                    stdin=stdin, stderr=PIPE,
                    stdout=PIPE
                    )
                kwargs.update(cmd.kwargs)
                env_ = kwargs.pop('env', env)

                log.debug('Popen(%r, **%r)', args, kwargs)

                kwargs['env'] = env_

                try:
                    p = Popen(args, **kwargs)
                except OSError:
                    self._raise()

                self.processes.append(p)
                stdin = p.stdout
        return stdin

    @classmethod
    def map(cls, args,
            pool_size=None, stop_on_failure=False, **kwargs):
        """Run a batch of the same command and manage a pool of processes for
        you"""
        kw = dict(
            stdin=sys.stdin, stderr=PIPE,
            stdout=PIPE
            )
        kw.update(kwargs)
        if pool_size is None:
            import multiprocessing
            pool_size = multiprocessing.cpu_count()
        results = [None] * len(args)
        processes = []
        index = 0
        out_index = 0
        while args or processes:
            if args and len(processes) < pool_size:
                a = args.pop(0)
                if not isinstance(a, list):
                    a = [a]
                cmd = cls(*a)
                a = cmd.command_line(cmd.kwargs.get('shell', False))
                processes.append((index, cmd, Popen(a, **kw)))
                index += 1
            for i, cmd, p in processes:
                result = p.poll()
                if result is not None:
                    output = Stdout(p.stdout.read())
                    output.stderr = p.stderr.read()
                    output.returncodes = [result]
                    output.failed = bool(result)
                    output.succeeded = not output.failed
                    results[i] = output
                    processes.remove((i, cmd, p))
                    if out_index == i:
                        out_index += 1
                        yield results[i]
                    if result > 0 and stop_on_failure:
                        args = None
                        for index, cmd, p in processes:
                            if p.poll() is None:
                                p.kill()
                        cmd._raise(output=output)
            time.sleep(.1)
        if out_index < len(results):
            yield results[out_index]
            out_index += 1

    def __getitem__(self, item):
        if not isinstance(item, slice):
            raise KeyError('You can only use slices')
        cmds = self.commands
        cmds = [deepcopy(cmd) for cmd in cmds[item]]
        return self._order(cmds)[-1]

    def __getslice__(self, start, stop):
        cmds = self.commands
        cmds = [deepcopy(cmd) for cmd in cmds[start:stop]]
        return self._order(cmds)[-1]

    def __iter__(self):
        for line in self.stdout:
            yield self._decode(line)

    def __call__(self, **kwargs):
        if self._done and self._stdout is not None:
            return self._stdout
        for cmd in self.commands:
            if kwargs.get('shell'):
                cmd.kwargs['shell'] = True
            if kwargs.get('combine_stderr'):
                cmd.kwargs['stderr'] = STDOUT
        stdout = self.stdout
        if stdout is not None:
            if hasattr(stdout, 'read'):
                output = stdout.read().rstrip()
            else:
                output = b''.join(list(stdout)).rstrip()
            output = self._decode(output)
        else:
            output = ''
        output = self._get_stdout(output)
        if self._done:
            self._stdout = output
        return output

    __str__ = __call__

    def __gt__(self, filename):
        return self._write(filename, 'wb+')

    def __rshift__(self, filename):
        return self._write(filename, 'ab+')

    def __or__(self, other):
        if isinstance(other.commands, property):
            other = other()
        if isinstance(self, Stdin):
            first = other.commands[0]
            first.previous = self
            return other
        cmds = deepcopy(self.commands) + deepcopy(other.commands)
        cmds = self._order(cmds)
        other = cmds[-1]
        return other

    def __bool__(self):
        return not self.failed
    __nonzero__ = __bool__

    def __deepcopy__(self, *args):
        return self.__class__(*self.args, **self.kwargs)

    def __repr__(self):
        return repr(self.commands_line)

    def _order(self, cmds):
        if cmds:
            cmds[0].previous = None
            for i in range(len(cmds) - 1, 0, -1):
                cmds[i].previous = cmds[i - 1]
        return cmds

    def _write_to(self, fd):
        if not isinstance(self, PyPipe):
            self.kwargs['stdout'] = fd
            return self.__call__()
        else:
            for line in self.stdout:
                fd.write(line)
            return self._get_stdout('')

    def _write(self, filename, mode):
        if isinstance(filename, int):
            if filename == 2:
                fd = self._sys_stderr
            else:
                fd = self._sys_stdout
            output = self._write_to(fd)
        else:
            with open(filename, mode) as fd:
                output = self._write_to(fd)
        if output.failed:
            self._raise(output=output)
        return output

    def _decode(self, output):
        if six.PY3 and not isinstance(output, six.text_type):
            output = output.decode(self.encoding)
        return output

    def _get_stdout(self, stdout):
        if not six.PY3 and not isinstance(stdout, six.binary_type):
            stdout = stdout.encode(self.encoding)
        output = Stdout(stdout)
        output.stderr = self.stderr
        output.returncodes = self.returncodes
        output.failed = bool(output.returncodes)
        output.succeeded = not output.failed
        return output

    def _raise(self, output=None):
        if not log.handlers:
            logging.basicConfig(stream=sys.stderr)
        if output is not None:
            if output.stderr:
                log.error(output.stderr)
            raise OSError(self.commands_line, output.stderr)
        raise OSError(self.commands_line)


class Stdin(Pipe):
    """Used to inject some data in the pipe"""

    stderr = ''
    returncodes = []

    def __init__(self, value):
        super(Stdin, self).__init__()
        self.value = value
        self._stdin = None

    @property
    def iter_stdout(self):
        if hasattr(self.value, 'seek'):
            self.value.seek(0)
        if hasattr(self.value, 'fileno'):
            r = self.value
        else:
            if hasattr(self.value, 'read'):
                value = self.value.read()
            else:
                if not isinstance(self.value, six.binary_type):
                    value = six.b(self.value)
                else:
                    value = self.value
            r, w = os.pipe()
            fd = os.fdopen(w, 'wb')
            fd.write(value)
            fd.close()
        return r

    def __deepcopy__(self, *args):
        return self.__class__(self.value)

    def _write(self, filename, mode):
        with open(filename, mode) as fd:
            if hasattr(self.value, 'seek'):
                self.value.seek(0)
            if hasattr(self.value, 'read'):
                shutil.copyfileobj(self.value, fd)
            else:
                fd.write(self.value)
        return self._get_stdout('')


class Stdout(str):
    """A string with extra attributes:

    - succeeded
    - failed
    - stdout
    - stderr
    """

    @property
    def stdout(self):
        return str(self)


class PyPipe(Pipe):

    @property
    def iter_stdout(self):
        return self.func(self.stdin)

    def __deepcopy__(self, *args):
        return sh.wraps(self.func)


class Base(object):
    not_piped = [str(c) for c in __not_piped__]

    def __init__(self, name, *cmd_args):
        self.__name__ = name
        self._cmds = {}
        self._cmd_args = []
        if cmd_args:
            self._cmd_args = [name] + list(cmd_args)

    def set_debug(self, enable=True):
        if enable:
            log.setLevel(logging.DEBUG)
            log.addHandler(logging.StreamHandler(sys.stdout))
        else:
            log.setLevel(logging.INFO)

    def __getattr__(self, attr):
        attr = str(attr)
        if attr not in self._cmds:
            kw = dict(_chut=self,
                      _binary=str(aliases.get(attr, attr)),
                      _cmd_args=self._cmd_args,
                      _pipe=True)
            if attr in self.not_piped:
                kw['_pipe'] = False
            self._cmds[attr] = type(attr, (Pipe,), kw)
        return self._cmds[attr]

    __getitem__ = __getattr__

    def __repr__(self):
        return '<%s>' % self.__name__


class Chut(Base):

    path = posixpath

    def wraps(self, func):
        return type(func.__name__, (PyPipe,), {'func': staticmethod(func)})()

    @contextmanager
    def pipes(self, cmd):
        try:
            yield cmd
        finally:
            if cmd.returncodes:
                stderr = cmd.stderr
                log.error('Error while running %r\n%s', cmd, stderr)
                raise OSError(stderr)

    def pipe(self, binary, *args, **kwargs):
        pipe = getattr(self, str(binary))
        return pipe(*args, **kwargs)

    def cd(self, directory):
        """Change the current directory"""
        if self.__name__ not in ('sh', 'sudo'):
            raise ImportError('You can only run cd in local commands')
        directory = os.path.realpath(directory)
        os.chdir(directory)
        env.pwd = directory

    def pwd(self):
        """return os.path.abspath(os.getcwd())"""
        if self.__name__ not in ('sh', 'sudo'):
            raise ImportError('You can only use pwd in local commands')
        return os.path.abspath(os.getcwd())

    def stdin(self, value):
        return Stdin(value)

    def ssh(self, *args):
        return SSH('ssh', *args)


class Command(Base):
    """A command (like test)"""

    def __getattr__(self, attr):
        attr = str(attr)
        if attr not in self._cmds:
            cmd = self.__name__
            kw = dict(_chut=self,
                      _binary='',
                      _cmd_args=[cmd, '-' + attr],
                      _pipe=True)
            self._cmds[attr] = type(str(cmd), (Pipe,), kw)
        return self._cmds[attr]


class SSH(Base):
    """A ssh server"""

    def join(self, *args):
        return '%s%s' % (self, posixpath.join(*args))

    @property
    def host(self):
        return self._cmd_args[-1]

    def __str__(self):
        return '%s:' % self.host

    def __call__(self, *args, **kwargs):
        cmds = []
        for a in args:
            if isinstance(a, Pipe):
                cmds.append(a.commands_line)
            else:
                cmds.append(a)
        srv = getattr(SSH(aliases.get('ssh'), *self._cmd_args[1:]), '')
        return srv(*cmds, **kwargs)


class ModuleWrapper(types.ModuleType):
    """wrap chut and add extra attributes from classes"""

    def __init__(self, mod, chut, name):
        self.__name__ = name
        for attr in ["__builtins__", "__doc__",
                     "__package__", "__file__"]:
            setattr(self, attr, getattr(mod, attr, None))
        self.__path__ = getattr(mod, '__path__', [])
        self.__test__ = getattr(mod, '__test__', {})
        self.mod = mod
        self.chut = chut

    def __getattr__(self, attr):
        if attr == '__all__':
            if self.__name__ == 'chut':
                return [str(c) for c in __all__]
            else:
                raise ImportError('You cant import things that does not exist')
        if hasattr(self.mod, attr):
            return getattr(self.mod, attr)
        else:
            return getattr(self.chut, attr)

    __getitem__ = __getattr__


env = Environ(os.environ.copy())
sh = Chut('sh')
sudo = Chut('sudo', '-s')
test = Command('test')


def wraps_module(mod):
    sys.modules['chut'] = ModuleWrapper(mod, sh, 'chut')
    sys.modules['chut.sudo'] = ModuleWrapper(mod, sudo, 'sudo')

# script generation

SCRIPT_HEADER = '''
#!/usr/bin/env python
import base64, json, types, sys
PY3 = sys.version_info[0] == 3
mods = []
'''.lstrip()

LOAD_MODULES = '''
for name, code in mods:
    if PY3:
        if isinstance(code, str):
            code = code.encode('utf-8')
    else:
        name = bytes(name)
    code = base64.decodestring(code)
    mod = types.ModuleType(name)
    globs = dict()
    if PY3:
        if isinstance(code, bytes):
            code = code.decode('utf-8')
        exec(code, globs)
    else:
        exec('exec code in globs')
    mod.__dict__.update(globs)
    if name == 'chut':
        mod.wraps_module(mod)
    else:
        sys.modules[name] = mod

import six
'''.lstrip()


def _console_script(func, **docopts):
    @functools.wraps(func)
    def wrapper(arguments=None):
        if 'help' not in docopts:
            docopts['help'] = True
        if 'doc' not in docopts:
            doc = getattr(func, '__doc__', None)
        else:
            doc = docopts.pop('doc')
        if doc is None:
            doc = 'Usage: %prog'
        name = func.__name__.replace('_', '-')
        doc = doc.replace('%prog', name).strip()
        doc = doc.replace('\n    ', '\n')
        import docopt
        if isinstance(arguments, list):
            docopts['argv'] = arguments
            arguments = docopt.docopt(doc, **docopts)
            return func(arguments)
        else:
            arguments = docopt.docopt(doc, **docopts)
            sys.exit(func(arguments))
    wrapper.console_script = True
    return wrapper


def console_script(*args, **docopts):
    if not args:
        def waiting_for_func(func):
            return _console_script(func, **docopts)
        return waiting_for_func
    else:
        return _console_script(args[0])


def encode_module(mod):
    if not hasattr(mod, '__file__'):
        mod = __import__(mod)
    data = inspect.getsource(mod)
    data = base64.encodestring(six.b(data))
    return 'mods.append((%r, %r))\n' % (str(mod.__name__), data)


def generate(arguments, filename):
    if not os.path.isfile(filename):
        mod = __import__(filename, globals(), locals(), [''])
        filename = mod.__file__
        name = mod.__name__
    else:
        dirname = os.path.dirname(filename)
        sys.path.insert(0, dirname)
        name = inspect.getmodulename(filename)
        mod = __import__(name)

    filenames = []
    for k, v in mod.__dict__.items():
        if getattr(v, 'console_script', False) is True:
            filenames.append(k)

    if arguments['--list-entry-points']:
        for name in filenames:
            print(('%s = %s:%s' % (name.replace('_', '-'),
                                   mod.__name__, name)))
        sys.exit(0)

    dest = os.path.expanduser(arguments['--destination'])
    sh.mkdir('-p', dest)

    modules = [
        'six', 'docopt', 'ConfigObject', sys.modules[__name__]
    ] + arguments['<MODULE>']
    modules = ''.join([encode_module(m) for m in modules])
    for name in filenames:
        script = os.path.join(dest, name.replace('_', '-'))
        with open(script, 'w') as fd:
            fd.write(SCRIPT_HEADER + modules + LOAD_MODULES)
            fd.write(inspect.getsource(mod).replace('__chutified__',
                                                    '__chutified__'))
            fd.write("if __name__ == '__chutified__':\n    %s()\n" % name)
        executable = sh.chmod('+x', script)
        if executable:
            print(executable.commands_line)
        else:
            print('failed to generate %s' % script)


@console_script
def chutify(arguments):
    """
    Usage: %prog [-d DIRNAME] <location> [<MODULE>...]
           %prog <location> (-l | -h)

    Generate binary scripts from all @console_script contained in <location>
    <location> can be a directory, a python file or a dotted name.

    -h, --help                         Print this help
    -d DIRNAME, --destination=DIRNAME  Destination [default: dist/scripts]
    -l, --list-entry-points            List console script entry points
    """
    location = arguments['<location>']
    location = os.path.expanduser(location)
    if os.path.isfile(location):
        generate(arguments, location)
    elif os.path.isdir(location):
        filenames = []
        filenames = sh.grep('-lRE --include=*.py @.*console_script',
                            location) | sh.grep('-v site-packages')
        filenames = [s.strip() for s in filenames]
        for filename in filenames:
            generate(arguments, filename)
    else:
        generate(arguments, location)


if __name__ != '__chutified__':
    mod = sys.modules[__name__]
    wraps_module(mod)
if __name__ == '__main__':
    chutify()
