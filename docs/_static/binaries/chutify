#!/usr/bin/env python
# This script is generated with chut. Do NOT edit this file.
# All your changes will be lost at the next generation.

version = 'unknown'

import base64, json, types, zlib, sys, os
os.environ['CHUTIFIED'] = '1'
PY3 = sys.version_info[0] == 3
_chut_modules = []
_chut_modules.append(('six', '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\n'))
_chut_modules.append(('docopt', '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\n'))
_chut_modules.append(('ConfigObject', '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\nHpp7vcBJLTMSBP8F6/lKqQ==\n'))
_chut_modules.append(('chut', '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\nUBTaJuoXjolqqWDTrumxRvL/5KuwtQ==\n'))
for name, code in _chut_modules:
    if PY3:
        if isinstance(code, str):
            code = code.encode('utf-8')
    else:
        name = bytes(name)
    code = zlib.decompress(base64.decodestring(code))
    mod = types.ModuleType(name)
    globs = dict()
    if PY3:
        if isinstance(code, bytes):
            code = code.decode('utf-8')
        exec(code, globs)
    else:
        exec('exec code in globs')
    mod.__dict__.update(globs)
    if name == 'chut':
        mod.wraps_module(mod)
    else:
        sys.modules[name] = mod
from chut import env
# -*- coding: utf-8 -*-
import chut as sh
import os


@sh.console_script(fmt='msg')
def chutify(args):
    """
    Usage: %prog [options] [<location>]

    Generate binary scripts from all @console_script contained in <location>
    <location> can be a directory, a python file or a dotted name.

    If <location> is .git then generate a pre-commit hook which generate script
    from the current directory.

    <location> and --destination can be set in a .chut file:

        [chut]
        destination = bin/
        location = scripts

    Options:

    -v, --version                 Print script version
    -l, --loop                    Generate scripts when the source change
    -s NAME, --section NAME       Use NAME section in .chut [default: chut]
    --devel                       Install develop scripts in bin/
    --upgrade                     Upgrade virtualenv dependencies
    -d DIR, --destination=DIR     Destination [default: dist/scripts]
    -i X, --interpreter=X         Python interpreter to use
    %options-30s
    """
    config = sh.ini('.chut')
    if sh.env.git_dir:  # pragma: no cover
        cfg = config['githook'] or config[args['--section']]
    else:
        cfg = config[args['--section']]

    interpreter = args['--interpreter'] or cfg.interpreter or 'python'
    if interpreter in ('2', '3'):  # pragma: no cover
        interpreter = 'python' + interpreter
    args['--interpreter'] = interpreter

    location = args.get('<location>') or cfg.location or os.getcwd()
    location = os.path.expanduser(location)

    if location.endswith('.git'):
        hooks = sh.path.join(location, 'hooks')
        hook = sh.path.join(hooks, 'pre-commit')
        args['destination'] = hooks
        generator = sh.Generator(**args)
        if not __file__.endswith('chutify'):
            filename = __file__.replace('.pyc', '.py')
            script = generator(filename)[0]
            sh.mv(script, hook)
        else:  # pragma: no cover
            # install git hook
            sh.cp(__file__, hook)
        executable = sh.chmod('+x', hook)
        if executable:
            print(executable.commands_line)
        return 0

    if cfg.destination and args['--destination'] == 'dist/scripts':
        args['--destination'] = cfg.destination

    generator = sh.Generator(**args)

    commands = cfg.run.as_list('\n')
    commands = [c.strip() for c in commands if c.strip()]

    def gen():
        scripts = generator(location)
        for cmd in commands:
            print('$ %s' % cmd)
            if ' ' in cmd:
                binary, args = cmd.split(' ', 1)
                sh[binary](args) > 2
            else:
                sh[cmd]() > 2
        return scripts

    if args['--loop']:  # pragma: no cover
        import time
        while True:
            try:
                gen()
                time.sleep(.1)
            except KeyboardInterrupt:
                return 0
    else:
        scripts = gen()
        if sh.env.git_dir:  # pragma: no cover
            sh.git('add -f', *scripts) > 1
    return 0

if __name__ == '__main__':
    chutify()
