#!/usr/bin/env python
# This script is generated with chut. Do NOT edit this file.
# All your changes will be lost at the next generation.

version = 'unknown'

import base64, json, types, zlib, sys, os
os.environ['CHUTIFIED'] = '1'
PY3 = sys.version_info[0] == 3
_chut_modules = []
_chut_modules.append(('six', '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\n'))
_chut_modules.append(('docopt', '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\n'))
_chut_modules.append(('ConfigObject', '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\nHpp7vcBJLTMSBP8F6/lKqQ==\n'))
_chut_modules.append(('chut', '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\n'))
for name, code in _chut_modules:
    if PY3:
        if isinstance(code, str):
            code = code.encode('utf-8')
    else:
        name = bytes(name)
    code = zlib.decompress(base64.decodestring(code))
    mod = types.ModuleType(name)
    globs = dict()
    if PY3:
        if isinstance(code, bytes):
            code = code.decode('utf-8')
        exec(code, globs)
    else:
        exec('exec code in globs')
    mod.__dict__.update(globs)
    if name == 'chut':
        mod.wraps_module(mod)
    else:
        sys.modules[name] = mod
from chut import env
# -*- coding: utf-8 -*-
from chut import *  # NOQA
import sys


@console_script
def rfsync(args):
    """
    Usage: %prog [-p] <host>:<path> [-- <find_options>...]
           %prog [-] [<destination>] [-- <rsync_options>...]
           %prog -h

    Find some files on a remote server and sync them on a local directory using
    rsync

    Examples:

        $ rfsync gawel@example.com:~/ -- -name "*.avi" | rfsync
        $ rfsync gawel@example.com:~/ -- -size +100M | rfsync ~/Movies -- -q

    """
    remote = args.get('<host>:<path>')
    if remote not in (None, '-') and ':' in remote:
        host, p = remote.split(':')
        srv = ssh(host)
        options = []
        for a in args.get('<find_options>', []) or []:
            if '*' in a:
                a = '"%s"' % a
            options.append(a)
        options = ' '.join(options)
        done = set()
        with sh.pipes(srv.find(p, options, shell=True)) as cmd:
            print(repr(cmd))
            for line in cmd:
                line = line.strip()
                if args['-p']:
                    line = path.dirname(line)
                if line not in done:
                    print(srv.join(line))
                    done.add(line)
    else:
        destination = args['<host>:<path>'] or args['<destination>'] or '.'
        destination = path.expanduser(path.expandvars(destination))
        options = ' '.join(args.get('<rsync_options>', [])) or '-aP'
        targets = sys.stdin.readlines()
        targets = [p.strip('\n/') for p in targets]
        targets = [p.strip('/ ') for p in targets if p.strip('/ ')]
        targets = sorted(set(targets))
        if not targets:
            return 1
        if '-q' not in options:
            print('$ rsync %s \\\n\t%s \\\n\t%s' % (
                                    options,
                                    ' \\\n\t'.join(targets),
                                    destination
                                  ))
        rsync(options, ' '.join(targets), destination, shell=True) > 1

if __name__ == '__main__':
    rfsync()
